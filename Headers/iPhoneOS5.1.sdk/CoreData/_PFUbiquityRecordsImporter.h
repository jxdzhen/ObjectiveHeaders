/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "_PFUbiquityRecordImportOperationDelegate.h"
#import "CoreData-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "NSManagedObjectContextFaultingDelegate.h"
#import "PFUbiquityBaselineRollResponseOperationDelegate.h"
#import "PFUbiquityBaselineRollOperationDelegate.h"
#import "PFUbiquityBaselineRecoveryOperationDelegate.h"
#import "PFUbiquityImportScanOperationDelegate.h"

@class PFUbiquityLocation, NSOperationQueue, NSMutableDictionary, NSRecursiveLock, PFUbiquityMetadataQueryMonitor, NSString, NSDictionary;

__attribute__((visibility("hidden")))
@interface _PFUbiquityRecordsImporter : XXUnknownSuperclass <_PFUbiquityRecordImportOperationDelegate, NSManagedObjectContextFaultingDelegate, PFUbiquityImportScanOperationDelegate, PFUbiquityBaselineRollOperationDelegate, PFUbiquityBaselineRecoveryOperationDelegate, PFUbiquityBaselineRollResponseOperationDelegate> {
@private
	NSOperationQueue* _importQueue;
	NSMutableDictionary* _ubiquityLocationToMonitoringDictionary;
	BOOL _isMonitoring;
	NSString* _localPeerID;
	PFUbiquityLocation* _ubiquityRootLocation;
	dispatch_source_s* _logRestartTimer;
	NSRecursiveLock* _schedulingLock;
	PFUbiquityMetadataQueryMonitor* _queryMonitor;
	BOOL _importOnlyActiveStores;
	BOOL _throttleNotifications;
	unsigned _numPendingNotifications;
	NSMutableDictionary* _pendingNotificationUserInfo;
	BOOL _allowBaselineRoll;
}
@property(assign) BOOL allowBaselineRoll;	// @synthesize=_allowBaselineRoll
@property(assign) BOOL importOnlyActiveStores;	// @synthesize=_importOnlyActiveStores
@property(readonly, assign) NSOperationQueue* importQueue;	// @synthesize=_importQueue
@property(readonly, assign) BOOL isMonitoring;	// @synthesize=_isMonitoring
@property(readonly, assign) NSString* localPeerID;	// @synthesize=_localPeerID
@property(assign) dispatch_source_s* logRestartTimer;	// @synthesize=_logRestartTimer
@property(readonly, assign) PFUbiquityMetadataQueryMonitor* queryMonitor;	// @synthesize=_queryMonitor
@property(readonly, assign, nonatomic) NSRecursiveLock* schedulingLock;	// @synthesize=_schedulingLock
@property(assign) BOOL throttleNotifications;	// @synthesize=_throttleNotifications
@property(readonly, assign) NSDictionary* ubiquityLocationToMonitoringDictionary;	// @synthesize=_ubiquityLocationToMonitoringDictionary
@property(readonly, assign) PFUbiquityLocation* ubiquityRootLocation;	// @synthesize=_ubiquityRootLocation
+(BOOL)canProcessContentsOfUbiquityRootPath:(id)ubiquityRootPath;
+(void)initialize;
-(id)init;
-(id)initWithLocalPeerID:(id)localPeerID andUbiquityRootLocation:(id)location;
-(void)_applicationResumed:(id)resumed;
// declared property getter: -(BOOL)allowBaselineRoll;
-(void)awakeFromLaunch:(BOOL)launch;
-(void)baselineRollOperationEncounteredAnInconsistentBaselineState:(id)state;
-(BOOL)canProcessTransactionLogWithScore:(id)score afterLogWithScore:(id)score2;
-(int)compareScoreDictionary:(id)dictionary withScoreDictionary:(id)scoreDictionary;
-(int)context:(id)context shouldHandleInaccessibleFault:(id)fault forObjectID:(id)objectID andTrigger:(id)trigger;
-(id)createDictionaryOfStoreNameToLocations:(id)locations;
-(dispatch_source_s*)createDispatchSourceForFileDescriptor:(int)fileDescriptor forLocation:(id)location;
-(id)createMonitoringDictionaryForUbiquityLocation:(id)ubiquityLocation;
-(id)createPeerStatesDictionaryFromTransactionLog:(id)transactionLog andAddLocalPeerStatesToDictionary:(id)dictionary withStack:(id)stack;
-(id)createScoresForPeerStates:(id)peerStates andLocalPeerStates:(id)states;
-(id)createSortedOperationsArrayForLogLocations:(id)logLocations;
-(void)dealloc;
-(id)description;
// declared property getter: -(BOOL)importOnlyActiveStores;
// declared property getter: -(id)importQueue;
// declared property getter: -(BOOL)isMonitoring;
// declared property getter: -(id)localPeerID;
// declared property getter: -(dispatch_source_s*)logRestartTimer;
-(void)operation:(id)operation failedWithError:(id)error;
-(void)operationDidFinish:(id)operation;
-(void)operationWasInterruptedDuringImport:(id)import;
-(void)postImportNotificationForStoreName:(id)storeName andLocalPeerID:(id)anId withUserInfo:(id)userInfo;
// declared property getter: -(id)queryMonitor;
-(void)recoveryOperation:(id)operation didReplaceLocalStoreFileWithBaseline:(id)baseline;
-(void)recoveryOperation:(id)operation encounteredAnError:(id)error duringRecoveryOfBaseline:(id)baseline;
-(void)requestBaselineRollForStore:(id)store;
-(void)rollResponseOperation:(id)operation encounteredAnError:(id)error whileTryingToAdoptBaseline:(id)adoptBaseline;
-(void)rollResponseOperation:(id)operation successfullyAdoptedBaseline:(id)baseline;
-(void)scanOperation:(id)operation discoveredPeerStoreVersionLocations:(id)locations;
-(void)scanOperation:(id)operation failedWithError:(id)error;
-(void)scanOperationFinished:(id)finished withDiscoveredLogLocation:(id)discoveredLogLocation;
-(void)scheduleBaselineRecoveryOperationWithActiveBaselineOperation:(id)activeBaselineOperation;
-(void)scheduleBaselineRollResponseOperationForBaselineAtLocation:(id)location;
-(void)scheduleRecoveryTimer;
-(void)scheduleTransactionLogOperations:(id)operations synchronous:(BOOL)synchronous;
-(void)scheduleUbiquityRootScan:(BOOL)scan withLocalPeerLogs:(BOOL)localPeerLogs;
// declared property getter: -(id)schedulingLock;
// declared property setter: -(void)setAllowBaselineRoll:(BOOL)roll;
// declared property setter: -(void)setImportOnlyActiveStores:(BOOL)stores;
// declared property setter: -(void)setLogRestartTimer:(dispatch_source_s*)timer;
// declared property setter: -(void)setThrottleNotifications:(BOOL)notifications;
-(BOOL)shouldThrottleNotificationsWithOperation:(id)operation;
-(BOOL)startMonitor:(id*)monitor;
-(void)stopMonitor;
-(void)stopMonitoringDictionary:(id)dictionary;
-(void)stopMonitoringURLsForStoreName:(id)storeName;
// declared property getter: -(BOOL)throttleNotifications;
// declared property getter: -(id)ubiquityLocationToMonitoringDictionary;
// declared property getter: -(id)ubiquityRootLocation;
-(void)updateMonitoredPeerURLs;
@end

