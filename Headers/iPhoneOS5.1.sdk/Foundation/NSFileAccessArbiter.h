/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSObject.h"
#import "Foundation-Structs.h"
#import "NSFileAccessArbiter.h"

@class NSFileAccessNode, NSMutableDictionary;

@protocol NSFileAccessArbiter <NSObject>
-(void)cancelAccessClaimForID:(id)anId;
-(dispatch_semaphore_s*)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;
-(void)grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s*)server;
-(void)revokeAccessClaimForID:(id)anId;
-(void)revokeSubarbitrationClaimForID:(id)anId;
-(void)tiePresenterForID:(id)anId toItemAtURL:(id)url;
-(void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;
-(void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;
@end

@interface NSFileAccessArbiter : XXUnknownSuperclass <NSFileAccessArbiter> {
@private
	dispatch_queue_s* _queue;
	BOOL _isSubarbiter;
	NSMutableDictionary* _accessClaimsByID;
	NSMutableDictionary* _subarbitrationClaimsByID;
	NSMutableDictionary* _reactorsByID;
	NSMutableDictionary* _watchersByPresenterID;
	NSFileAccessNode* _rootNode;
	xpc_connection_s* _superarbitrationServer;
}
-(id)initWithQueue:(dispatch_queue_s*)queue isSubarbiter:(BOOL)subarbiter listener:(xpc_connection_s*)listener;
-(void)_addPresenter:(id)presenter ofItemAtURL:(id)url;
-(void)_addProvider:(id)provider ofItemsAtURL:(id)url;
-(void)_cancelAccessClaimForID:(id)anId;
-(void)_grantAccessClaim:(id)claim;
-(void)_grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s*)server;
-(void)_handleCanceledClient:(xpc_connection_s*)client;
-(void)_handleMessage:(void*)message forSubarbitrationClaim:(id)subarbitrationClaim server:(xpc_connection_s*)server;
-(void)_handleMessage:(void*)message fromClient:(xpc_connection_s*)client;
-(BOOL)_handleMessage:(void*)message ofKind:(id)kind withParameters:(id)parameters embeddedServer:(xpc_connection_s*)server fromClient:(xpc_connection_s*)client;
-(void)_removeReactorForID:(id)anId;
-(void)_revokeAccessClaim:(id)claim;
-(void)_revokeAccessClaimForID:(id)anId fromLocal:(BOOL)local;
-(void)_sendSubarbitersMessageWithKind:(id)kind parameters:(id)parameters;
-(void)_startArbitratingItemsAtURLs:(id)urls withSuperarbitrationServer:(xpc_connection_s*)superarbitrationServer;
-(void)_tiePresenter:(id)presenter toItemAtURL:(id)url;
-(void)_tiePresenterForID:(id)anId toItemAtURL:(id)url;
-(void)_writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;
-(void)_writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;
-(void)cancelAccessClaimForID:(id)anId;
-(void)dealloc;
-(void)finalize;
-(dispatch_semaphore_s*)grantAccessClaim:(id)claim synchronouslyIfPossible:(BOOL)possible;
-(void)grantSubarbitrationClaim:(id)claim withServer:(xpc_connection_s*)server;
-(void)revokeAccessClaimForID:(id)anId;
-(void)revokeSubarbitrationClaimForID:(id)anId;
-(void)stopArbitrating;
-(void)tiePresenterForID:(id)anId toItemAtURL:(id)url;
-(void)writerWithPurposeID:(id)purposeID didMoveItemAtURL:(id)url toURL:(id)url3;
-(void)writerWithPurposeID:(id)purposeID didVersionChangeOfKind:(id)kind toItemAtURL:(id)url withClientID:(id)clientID name:(id)name;
@end

