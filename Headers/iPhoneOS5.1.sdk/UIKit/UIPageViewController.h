/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIViewController.h"

@class UIPanGestureRecognizer, NSArray, _UIPageCurl, NSMutableArray, UITapGestureRecognizer;
@protocol UIPageViewControllerDelegate, UIPageViewControllerDataSource;

@interface UIPageViewController : UIViewController <UIGestureRecognizerDelegate> {
@private
	id<UIPageViewControllerDelegate> _delegate;
	id<UIPageViewControllerDataSource> _dataSource;
	int _transitionStyle;
	int _navigationOrientation;
	int _spineLocation;
	BOOL _doubleSided;
	NSArray* _viewControllers;
	_UIPageCurl* _pageCurl;
	UIPanGestureRecognizer* _panGestureRecognizer;
	UITapGestureRecognizer* _tapGestureRecognizer;
	BOOL _stashingViewControllersForRotation;
	NSArray* _viewControllersStashedForRotation;
	BOOL _rotatingInterface;
	NSMutableArray* _rotationSnapshotViews;
	int _spineLocationPriorToInterfaceRotation;
	UIEdgeInsets _tapRegionInsets;
	CGSize _tapRegionBreadths;
	UIEdgeInsets _effectiveTapRegionInsets;
	CGSize _effectiveTapRegionBreadths;
	CGRect* _tapRegions;
	NSArray* _viewControllersStashedFromDataSource;
	struct {
		unsigned isShowingMoreItem : 1;
		unsigned needsToRebuildItems : 1;
		unsigned isBarHidden : 1;
		unsigned editButtonOnLeft : 1;
	} _delegateFlags;
}
@property(retain, nonatomic, setter=_setViewControllers:) NSArray* _viewControllers;	// @synthesize
@property(retain, nonatomic, setter=_setViewControllersStashedForRotation:) NSArray* _viewControllersStashedForRotation;	// @synthesize
@property(assign, nonatomic) id<UIPageViewControllerDataSource> dataSource;
@property(assign, nonatomic) id<UIPageViewControllerDelegate> delegate;
@property(assign, nonatomic, getter=isDoubleSided) BOOL doubleSided;
@property(readonly, assign, nonatomic) NSArray* gestureRecognizers;
@property(readonly, assign, nonatomic) int navigationOrientation;
@property(readonly, assign, nonatomic) int spineLocation;
@property(readonly, assign, nonatomic) int transitionStyle;
@property(readonly, assign, nonatomic) NSArray* viewControllers;
+(BOOL)_isNavigationOrientation:(int)orientation supportedForTransitionStyle:(int)transitionStyle;
+(BOOL)_isSpineLocation:(int)location supportedForTransitionStyle:(int)transitionStyle;
+(BOOL)_isSupportedTransitionStyle:(int)style;
+(id)stringForSpineLocation:(int)spineLocation;
-(id)initWithCoder:(id)coder;
-(id)initWithNibName:(id)nibName bundle:(id)bundle;
-(id)initWithTransitionStyle:(int)transitionStyle navigationOrientation:(int)orientation options:(id)options;
-(BOOL)_canHandleGestures;
-(void)_contentViewFrameDidChange;
-(CGSize)_effectiveTapRegionBreadths;
-(UIEdgeInsets)_effectiveTapRegionInsets;
-(BOOL)_gestureRecognizerShouldBegin:(id)_gestureRecognizer;
-(void)_handlePanGesture:(id)gesture;
-(void)_handleTapGesture:(id)gesture;
-(id)_incomingViewControllersForGestureDrivenCurlInDirection:(int)direction;
-(void)_invalidateEffectiveTapRegions;
-(void)_invalidateViewControllersStashedFromDataSource;
-(BOOL)_isCurrentViewControllerStateValid;
-(int)_navigationEndDirectionInResponseToPanGestureRecognizer:(id)panGestureRecognizer suggestedVelocity:(float*)velocity;
-(void)_populateLeftAndRightViewControllersInMap:(id)map withViewControllers:(id)viewControllers forCurlInDirection:(int)direction;
-(void)_setSpineLocation:(int)location;
-(void)_setTapRegionBreadths:(CGSize)breadths;
-(void)_setTapRegionInsets:(UIEdgeInsets)insets;
// declared property setter: -(void)_setViewControllers:(id)controllers;
-(void)_setViewControllers:(id)controllers withCurlOfType:(int)type fromLocation:(CGPoint)location direction:(int)direction animated:(BOOL)animated completion:(id)completion;
// declared property setter: -(void)_setViewControllersStashedForRotation:(id)rotation;
-(BOOL)_shouldBeginNavigationInDirection:(int*)direction inResponseToPanGestureRecognizer:(id)panGestureRecognizer;
-(BOOL)_shouldCompleteManualCurlWithSuggestedVelocity:(float*)suggestedVelocity;
-(BOOL)_shouldNavigateInDirection:(int*)direction inResponseToTapGestureRecognizer:(id)tapGestureRecognizer;
-(BOOL)_shouldNavigateInDirection:(int*)direction inResponseToVelocity:(float*)velocity ofGestureRecognizedByPanGestureRecognizer:(id)gestureRecognizedByPanGestureRecognizer;
-(BOOL)_shouldPersistViewWhenCoding;
-(CGSize)_tapRegionBreadths;
-(UIEdgeInsets)_tapRegionInsets;
-(CGRect*)_tapRegions;
-(id)_validatedViewControllersForCurlWithViewControllers:(id)viewControllers;
-(id)_viewControllerAfterViewController:(id)controller;
-(id)_viewControllerBefore:(BOOL)before viewController:(id)controller;
-(id)_viewControllerBeforeViewController:(id)controller;
// declared property getter: -(id)_viewControllers;
-(id)_viewControllersForCurlWithViewControllers:(id)viewControllers direction:(int)direction;
-(id)_viewControllersForPendingSpineLocation:(int)pendingSpineLocation;
// declared property getter: -(id)_viewControllersStashedForRotation;
// declared property getter: -(id)dataSource;
-(void)dealloc;
// declared property getter: -(id)delegate;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(void)encodeWithCoder:(id)coder;
// declared property getter: -(id)gestureRecognizers;
// declared property getter: -(BOOL)isDoubleSided;
-(void)loadView;
// declared property getter: -(int)navigationOrientation;
// declared property setter: -(void)setDataSource:(id)source;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property setter: -(void)setDoubleSided:(BOOL)sided;
-(void)setViewControllers:(id)controllers direction:(int)direction animated:(BOOL)animated completion:(id)completion;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
// declared property getter: -(int)spineLocation;
// declared property getter: -(int)transitionStyle;
// declared property getter: -(id)viewControllers;
-(void)viewWillUnload;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)willRotateToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
@end

