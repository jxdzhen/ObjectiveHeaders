/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "NSCoding.h"
#import "UITabBarDelegate.h"
#import "UIViewController.h"

@class NSArray, UITabBar, NSMutableArray, UINavigationController, UIView;
@protocol UITabBarControllerDelegate;

@interface UITabBarController : UIViewController <UITabBarDelegate, NSCoding> {
@private
	UITabBar* _tabBar;
	UIView* _containerView;
	UIView* _viewControllerTransitionView;
	id _tabBarItemsToViewControllers;
	UIViewController* _selectedViewController;
	UINavigationController* _moreNavigationController;
	NSArray* _customizableViewControllers;
	id<UITabBarControllerDelegate> _delegate;
	UIViewController* _selectedViewControllerDuringWillAppear;
	UIViewController* _transientViewController;
	unsigned _maxItems;
	struct {
		unsigned isShowingMoreItem : 1;
		unsigned needsToRebuildItems : 1;
		unsigned isBarHidden : 1;
		unsigned editButtonOnLeft : 1;
	} _tabBarControllerFlags;
	NSMutableArray* _moreChildViewControllers;
}
@property(copy, nonatomic) NSArray* customizableViewControllers;	// @synthesize=_customizableViewControllers
@property(assign, nonatomic) id<UITabBarControllerDelegate> delegate;	// @synthesize=_delegate
@property(assign, nonatomic) NSMutableArray* moreChildViewControllers;	// @synthesize=_moreChildViewControllers
@property(readonly, assign, nonatomic) UINavigationController* moreNavigationController;
@property(assign, nonatomic) unsigned selectedIndex;
@property(assign, nonatomic) UIViewController* selectedViewController;
@property(readonly, assign, nonatomic) UITabBar* tabBar;
@property(copy, nonatomic) NSArray* viewControllers;
+(Class)_moreNavigationControllerClass;
-(id)initWithCoder:(id)coder;
-(id)initWithNibName:(id)nibName bundle:(id)bundle;
-(void)__viewWillLayoutSubviews;
-(BOOL)_allowSelectionWithinMoreList;
-(BOOL)_allowsAutorotation;
-(BOOL)_allowsCustomizing;
-(void)_configureTargetActionForTabBarItem:(id)tabBarItem;
-(BOOL)_doAllViewControllersSupportInterfaceOrientation:(int)orientation;
-(id)_existingMoreNavigationController;
-(CGRect)_frameForViewController:(id)viewController;
-(void)_getRotationContentSettings:(XXStruct_tXAZTC*)settings;
-(BOOL)_isBarHidden;
-(BOOL)_isPresentationContextByDefault;
-(BOOL)_isSupportedInterfaceOrientation:(int)orientation;
-(void)_layoutViewController:(id)controller;
-(void)_populateArchivedChildViewControllers:(id)controllers;
-(void)_prepareTabBar;
-(BOOL)_reallyWantsFullScreenLayout;
-(void)_rebuildTabBarItemsAnimated:(BOOL)animated;
-(void)_rebuildTabBarItemsIfNeeded;
-(void)_selectDefaultViewControllerIfNecessaryWithAppearanceTransitions:(BOOL)appearanceTransitions;
-(id)_selectedViewControllerInTabBar;
-(void)_setMaximumNumberOfItems:(unsigned)items;
-(void)_setSelectedTabBarItem:(id)item;
-(void)_setSelectedViewController:(id)controller;
-(BOOL)_shouldPersistViewWhenCoding;
-(BOOL)_shouldUseOnePartRotation;
-(void)_tabBarItemClicked:(id)clicked;
-(id)_transitionView;
-(void)_updateLayoutForStatusBarAndInterfaceOrientation;
-(id)_viewControllerForTabBarItem:(id)tabBarItem;
-(id)_viewControllersInTabBar;
-(id)allViewControllers;
-(void)animationDidStop:(id)animation finished:(id)finished context:(void*)context;
-(void)beginCustomizingTabBar:(id)bar;
-(void)concealTabBarSelection;
// declared property getter: -(id)customizableViewControllers;
-(void)dealloc;
-(id)defaultFirstResponder;
// declared property getter: -(id)delegate;
-(void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(int)interfaceOrientation;
-(void)didRotateFromInterfaceOrientation:(int)interfaceOrientation;
-(void)encodeWithCoder:(id)coder;
-(void)hideBarWithTransition:(int)transition;
-(void)loadView;
// declared property getter: -(id)moreChildViewControllers;
// declared property getter: -(id)moreNavigationController;
-(void)purgeMemoryForReason:(int)reason;
-(void)revealTabBarSelection;
-(id)rotatingFooterView;
-(id)rotatingHeaderView;
// declared property getter: -(unsigned)selectedIndex;
// declared property getter: -(id)selectedViewController;
// declared property setter: -(void)setCustomizableViewControllers:(id)controllers;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property setter: -(void)setMoreChildViewControllers:(id)controllers;
// declared property setter: -(void)setSelectedIndex:(unsigned)index;
// declared property setter: -(void)setSelectedViewController:(id)controller;
-(void)setShowsEditButtonOnLeft:(BOOL)left;
-(void)setTabBar:(id)bar;
-(void)setTransientViewController:(id)controller;
-(void)setTransientViewController:(id)controller animated:(BOOL)animated;
// declared property setter: -(void)setViewControllers:(id)controllers;
-(void)setViewControllers:(id)controllers animated:(BOOL)animated;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)showBarWithTransition:(int)transition;
-(BOOL)showsEditButtonOnLeft;
// declared property getter: -(id)tabBar;
-(void)tabBar:(id)bar didEndCustomizingItems:(id)items changed:(BOOL)changed;
-(void)tabBar:(id)bar willBeginCustomizingItems:(id)items;
-(void)tabBar:(id)bar willEndCustomizingItems:(id)items changed:(BOOL)changed;
-(id)transientViewController;
-(void)transitionFromViewController:(id)viewController toViewController:(id)viewController2;
-(void)transitionFromViewController:(id)viewController toViewController:(id)viewController2 transition:(int)transition shouldSetSelected:(BOOL)selected;
-(void)transitionViewDidComplete:(id)transitionView fromView:(id)view toView:(id)view3;
-(void)updateTabBarItemForViewController:(id)viewController;
// declared property getter: -(id)viewControllers;
-(void)viewDidAppear:(BOOL)view;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(void)willRotateToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
@end

