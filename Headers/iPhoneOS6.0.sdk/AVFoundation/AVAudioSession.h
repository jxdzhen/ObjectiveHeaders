/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AVFoundation-Structs.h"

@class AVAudioSessionRouteDescription, NSString;

@interface AVAudioSession : XXUnknownSuperclass {
@private
	void* _impl;
}
@property(readonly, assign) NSString* category;
@property(readonly, assign) unsigned categoryOptions;
@property(readonly, assign) AVAudioSessionRouteDescription* currentRoute;
@property(readonly, assign) NSString* mode;
@property(readonly, assign, getter=isOtherAudioPlaying) BOOL otherAudioPlaying;
+(id)allocWithZone:(NSZone*)zone;
+(void)privateAllocInitSingleton;
+(id)sharedInstance;
-(id)init;
-(double)IOBufferDuration;
-(id)autorelease;
// declared property getter: -(id)category;
// declared property getter: -(unsigned)categoryOptions;
-(id)copyWithZone:(NSZone*)zone;
-(int)currentHardwareInputNumberOfChannels;
-(int)currentHardwareOutputNumberOfChannels;
-(double)currentHardwareSampleRate;
// declared property getter: -(id)currentRoute;
-(id)delegate;
-(float)inputGain;
-(BOOL)inputIsAvailable;
-(double)inputLatency;
-(int)inputNumberOfChannels;
-(BOOL)isInputAvailable;
-(BOOL)isInputGainSettable;
// declared property getter: -(BOOL)isOtherAudioPlaying;
// declared property getter: -(id)mode;
-(double)outputLatency;
-(int)outputNumberOfChannels;
-(float)outputVolume;
-(BOOL)overrideOutputAudioPort:(unsigned)port error:(id*)error;
-(double)preferredHardwareSampleRate;
-(double)preferredIOBufferDuration;
-(double)preferredSampleRate;
-(void)privateBeginInterruption;
-(void)privateEndInterruptionWithFlags:(id)flags;
-(void)privateHandleInputGainChange;
-(void)privateHandleOutputVolumeChange;
-(void)privateHandleServerDied;
-(void)privateInputIsAvailableChanged:(id)changed;
-(BOOL)privateSetAllowBluetooth:(BOOL)bluetooth error:(id*)error;
-(BOOL)privateSetCategoryDefaultToSpeaker:(BOOL)speaker error:(id*)error;
-(BOOL)privateSetDuckOthers:(BOOL)others error:(id*)error;
-(BOOL)privateSetMixWithOthers:(BOOL)others error:(id*)error;
-(void)privateUpdateInputGain:(BOOL)gain;
-(void)privateUpdateOutputVolume:(BOOL)volume;
-(oneway void)release;
-(id)retain;
-(unsigned)retainCount;
-(double)sampleRate;
-(BOOL)setActive:(BOOL)active error:(id*)error;
-(BOOL)setActive:(BOOL)active withFlags:(int)flags error:(id*)error;
-(BOOL)setActive:(BOOL)active withOptions:(unsigned)options error:(id*)error;
-(BOOL)setCategory:(id)category error:(id*)error;
-(BOOL)setCategory:(id)category withOptions:(unsigned)options error:(id*)error;
-(void)setDelegate:(id)delegate;
-(BOOL)setInputGain:(float)gain error:(id*)error;
-(BOOL)setMode:(id)mode error:(id*)error;
-(BOOL)setPreferredHardwareSampleRate:(double)rate error:(id*)error;
-(BOOL)setPreferredIOBufferDuration:(double)duration error:(id*)error;
-(BOOL)setPreferredSampleRate:(double)rate error:(id*)error;
@end

