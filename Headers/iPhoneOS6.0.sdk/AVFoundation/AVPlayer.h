/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

#import "AVFoundation-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class AVPlayerInternal, NSError, NSArray;

@interface AVPlayer : XXUnknownSuperclass {
@private
	AVPlayerInternal* _player;
}
@property(copy, nonatomic, setter=_setDisplaysUsedForPlayback:) NSArray* _displaysUsedForPlayback;
@property(readonly, assign, nonatomic) int _externalProtectionStatus;
@property(readonly, assign, nonatomic, getter=isAudioPlaybackEnabledAtAllRates) BOOL audioPlaybackEnabledAtAllRates;
@property(assign, nonatomic) BOOL disallowsAMRAudio;
@property(readonly, assign, nonatomic) NSError* error;
@property(assign, nonatomic) float maxRateForAudioPlayback;
@property(assign, nonatomic) float minRateForAudioPlayback;
@property(readonly, assign, nonatomic) int status;
+(BOOL)automaticallyNotifiesObserversOfActionAtItemEnd;
+(BOOL)automaticallyNotifiesObserversOfAirPlayVideoActive;
+(BOOL)automaticallyNotifiesObserversOfAllowsAirPlayVideo;
+(BOOL)automaticallyNotifiesObserversOfAllowsExternalPlayback;
+(BOOL)automaticallyNotifiesObserversOfClosedCaptionDisplayEnabled;
+(BOOL)automaticallyNotifiesObserversOfCurrentItem;
+(BOOL)automaticallyNotifiesObserversOfDisallowsAMRAudio;
+(BOOL)automaticallyNotifiesObserversOfExternalPlaybackActive;
+(BOOL)automaticallyNotifiesObserversOfRate;
+(BOOL)automaticallyNotifiesObserversOfUsesAirPlayVideoWhileAirPlayScreenIsActive;
+(BOOL)automaticallyNotifiesObserversOfUsesExternalPlaybackWhileExternalScreenIsActive;
+(BOOL)automaticallyNotifiesObserversOfVolume;
+(void)initialize;
+(id)keyPathsForValuesAffectingActionAtItemEnd;
+(id)keyPathsForValuesAffectingClosedCaptionDisplayEnabled;
+(id)keyPathsForValuesAffectingRate;
+(id)playerWithPlayerItem:(id)playerItem;
+(id)playerWithURL:(id)url;
-(id)init;
-(id)initWithDispatchQueue:(id)dispatchQueue;
-(id)initWithPlayerItem:(id)playerItem;
-(id)initWithURL:(id)url;
-(BOOL)_CALayerDestinationIsTVOut;
-(int)_actionAtItemEnd;
-(void)_addFPListeners;
-(void)_addLayer:(id)layer;
-(void)_advanceCurrentItemAccordingToFigPlaybackItem:(OpaqueFigPlaybackItem*)figPlaybackItem;
-(BOOL)_airPlayVideoActive;
-(BOOL)_allowsExternalPlayback;
-(BOOL)_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock;
-(BOOL)_attachItem:(id)item andPerformOperation:(int)operation withObject:(id)object;
-(void)_attachLayersToFigPlayer;
-(id)_cachedValueForKey:(id)key;
-(int)_cancelPendingPrerollAndRegisterPrerollCompletionHandler:(id)handler;
-(void)_changeStatusToFailedWithError:(id)error;
-(void)_checkDefaultsWriteForPerformanceLogging;
-(id)_clientName;
-(int)_createPrerollID;
-(id)_currentItem;
-(void)_currentItemStatusIsReadyToPlay;
-(int)_defaultActionAtItemEnd;
-(void)_detachLayersFromFigPlayer;
-(void)_didAccessKVOForKey:(id)key;
-(void)_didFinishSuspension:(id)suspension;
-(BOOL)_disallowsAMRAudio;
// declared property getter: -(id)_displaysUsedForPlayback;
-(void)_enumerateItemsUsingBlock:(id)block;
-(BOOL)_externalPlaybackActive;
// declared property getter: -(int)_externalProtectionStatus;
-(OpaqueFigPlayer*)_figPlayer;
-(id)_fpNotificationNames;
-(BOOL)_hasAssociatedOnscreenAVPlayerLayer;
-(BOOL)_iapdExtendedModeIsActive;
-(BOOL)_insertItem:(id)item afterItem:(id)item2;
-(BOOL)_insertPlaybackItemOfItem:(id)item inPlayerQueueAfterPlaybackItemOfItem:(id)item2;
-(BOOL)_isClosedCaptionDisplayEnabled;
-(int)_itemOkayToPlayWhileTransitioningToBackground:(id)background;
-(id)_items;
-(void)_logPerformanceDataForCurrentItem;
-(void)_logPerformanceDataForPreviousItem;
-(BOOL)_outputObscuredDueToInsufficientExternalProtection;
-(id)_pixelBufferAttributeMediator;
-(id)_playbackDisplaysForFigPlayer;
-(void)_playerDestinationPixelBufferAttributesDidChange:(id)_playerDestinationPixelBufferAttributes;
-(id)_playerLayers;
-(void)_preparePlaybackItemOfItemForEnqueueing:(id)enqueueing withCompletionHandler:(id)completionHandler;
-(id)_propertyStorage;
-(float)_rate;
-(void)_removeAllItems;
-(void)_removeAllLayers;
-(BOOL)_removeAnItem:(id)item;
-(void)_removeFPListeners;
-(BOOL)_removeItem:(id)item;
-(void)_removeLayer:(id)layer;
-(BOOL)_resumePlayback:(double)playback error:(id*)error;
-(void)_setActionAtItemEnd:(int)itemEnd allowingAdvance:(BOOL)advance;
-(void)_setCALayerDestinationIsTVOut:(BOOL)anOut;
-(void)_setCachedValue:(id)value forKey:(id)key;
-(void)_setClientName:(id)name;
-(void)_setCurrentItem:(id)item;
// declared property setter: -(void)_setDisplaysUsedForPlayback:(id)playback;
-(void)_setEQPreset:(int)preset;
-(void)_setFigPlaybackItemToMakeCurrent:(OpaqueFigPlaybackItem*)makeCurrent;
-(void)_setNeroVideoGravityOnFigPlayer;
-(void)_setPreferredLanguageList:(id)list;
-(void)_setStoppingFadeOutDuration:(float)duration;
-(void)_setVolume:(float)volume;
-(void)_setWantsVolumeChangesWhenPausedOrInactive:(BOOL)inactive;
-(BOOL)_shouldDetachContentLayersFromFigPlayer;
-(BOOL)_shouldLogPerformanceData;
-(id)_stateDispatchQueue;
-(id)_unregisterAndReturnRetainedPrerollCompletionHandler;
-(BOOL)_usesExternalPlaybackWhileExternalScreenIsActive;
-(float)_volume;
-(id)_weakReference;
-(void)_willAccessKVOForKey:(id)key;
-(void)_willEnterForeground:(id)foreground;
-(int)actionAtItemEnd;
-(id)addBoundaryTimeObserverForTimes:(id)times queue:(id)queue usingBlock:(id)block;
-(void)addObserver:(id)observer forKeyPath:(id)keyPath options:(unsigned)options context:(void*)context;
-(id)addPeriodicTimeObserverForInterval:(XXStruct_pwHToB)interval queue:(id)queue usingBlock:(id)block;
-(BOOL)allowsAirPlayVideo;
-(BOOL)allowsExternalPlayback;
-(void)cancelPendingPrerolls;
-(id)currentItem;
-(XXStruct_pwHToB)currentTime;
-(void)dealloc;
-(void)didChangeValueForKey:(id)key;
// declared property getter: -(BOOL)disallowsAMRAudio;
-(id)dispatchQueue;
// declared property getter: -(id)error;
-(int)externalPlaybackType;
-(id)externalVideoGravity;
-(void)finalize;
-(BOOL)isAirPlayVideoActive;
// declared property getter: -(BOOL)isAudioPlaybackEnabledAtAllRates;
-(BOOL)isClosedCaptionDisplayEnabled;
-(BOOL)isExternalPlaybackActive;
// declared property getter: -(float)maxRateForAudioPlayback;
// declared property getter: -(float)minRateForAudioPlayback;
-(BOOL)outputObscuredDueToInsufficientExternalProtection;
-(void)pause;
-(void)play;
-(id)playerAVAudioSession;
-(void)prepareItem:(id)item withCompletionHandler:(id)completionHandler;
-(void)prerollAtRate:(float)rate completionHandler:(id)handler;
-(void)prerollOperationDidComplete:(BOOL)prerollOperation notificationPayload:(CFDictionaryRef)payload;
-(float)rate;
-(void)removeAudioPlaybackRateLimits;
-(void)removeTimeObserver:(id)observer;
-(void)replaceCurrentItemWithPlayerItem:(id)playerItem;
-(void)seekToDate:(id)date;
-(void)seekToDate:(id)date completionHandler:(id)handler;
-(void)seekToTime:(XXStruct_pwHToB)time;
-(void)seekToTime:(XXStruct_pwHToB)time completionHandler:(id)handler;
-(void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after;
-(void)seekToTime:(XXStruct_pwHToB)time toleranceBefore:(XXStruct_pwHToB)before toleranceAfter:(XXStruct_pwHToB)after completionHandler:(id)handler;
-(void)setActionAtItemEnd:(int)itemEnd;
-(void)setAllowsAirPlayVideo:(BOOL)video;
-(void)setAllowsExternalPlayback:(BOOL)playback;
-(void)setClosedCaptionDisplayEnabled:(BOOL)enabled;
// declared property setter: -(void)setDisallowsAMRAudio:(BOOL)audio;
-(void)setExternalVideoGravity:(id)gravity;
// declared property setter: -(void)setMaxRateForAudioPlayback:(float)audioPlayback;
// declared property setter: -(void)setMinRateForAudioPlayback:(float)audioPlayback;
-(void)setRate:(float)rate;
-(void)setRate:(float)rate time:(XXStruct_pwHToB)time atHostTime:(XXStruct_pwHToB)hostTime;
-(void)setUsesAirPlayVideoWhileAirPlayScreenIsActive:(BOOL)active;
-(void)setUsesExternalPlaybackWhileExternalScreenIsActive:(BOOL)active;
// declared property getter: -(int)status;
-(BOOL)usesAirPlayVideoWhileAirPlayScreenIsActive;
-(BOOL)usesExternalPlaybackWhileExternalScreenIsActive;
-(void)willChangeValueForKey:(id)key;
@end

