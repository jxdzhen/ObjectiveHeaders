/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSString, PFUbiquityLocation, NSManagedObjectModel, PFUbiquityBaselineMetadata, _PFZipFileArchive, NSMutableDictionary, NSDictionary;

__attribute__((visibility("hidden")))
@interface PFUbiquityBaseline : XXUnknownSuperclass {
@private
	PFUbiquityLocation* _ubiquityRootLocation;
	PFUbiquityLocation* _baselineArchiveLocation;
	PFUbiquityLocation* _baselinePeerArchiveLocation;
	PFUbiquityLocation* _baselineStagingLocation;
	PFUbiquityLocation* _currentLocation;
	PFUbiquityBaselineMetadata* _metadata;
	NSMutableDictionary* _storeFilenameToData;
	NSString* _storeFilename;
	NSString* _storeName;
	NSString* _localPeerID;
	NSString* _modelVersionHash;
	NSManagedObjectModel* _model;
	_PFZipFileArchive* _baselineArchive;
}
@property(readonly, assign) _PFZipFileArchive* baselineArchive;	// @synthesize=_baselineArchive
@property(readonly, assign) PFUbiquityLocation* baselineArchiveLocation;	// @synthesize=_baselineArchiveLocation
@property(readonly, assign) PFUbiquityLocation* baselinePeerArchiveLocation;	// @synthesize=_baselinePeerArchiveLocation
@property(readonly, assign) PFUbiquityLocation* baselineStagingLocation;	// @synthesize=_baselineStagingLocation
@property(readonly, assign) PFUbiquityLocation* currentLocation;	// @synthesize=_currentLocation
@property(readonly, assign) NSString* localPeerID;	// @synthesize=_localPeerID
@property(readonly, assign) PFUbiquityBaselineMetadata* metadata;	// @synthesize=_metadata
@property(readonly, assign) NSString* modelVersionHash;	// @synthesize=_modelVersionHash
@property(readonly, assign) NSString* storeFilename;	// @synthesize=_storeFilename
@property(readonly, assign) NSDictionary* storeFilenameToData;	// @synthesize=_storeFilenameToData
@property(readonly, assign) NSString* storeName;	// @synthesize=_storeName
@property(readonly, assign) PFUbiquityLocation* ubiquityRootLocation;	// @synthesize=_ubiquityRootLocation
+(BOOL)canRollBaselineForStoreMetadata:(id)storeMetadata withStack:(id)stack andManagedObjectModel:(id)model error:(id*)error;
+(BOOL)checkPeerReceiptsUnderRootLocation:(id)location forAgreementWithLocalPeerID:(id)localPeerID storeName:(id)name modelVersionHash:(id)hash error:(id*)error;
+(id)createArchiveWithModel:(id)model metadata:(id)metadata storeFilenameToData:(id)data storeFilename:(id)filename error:(id*)error;
+(id)createBaselineGCModelForStoreName:(id)storeName modelVersionHash:(id)hash andUbiquityRootLocation:(id)location;
+(id)createBaselineOptimizedModelForStoreName:(id)storeName modelVersionHash:(id)hash andUbiquityRootLocation:(id)location;
+(id)createModelFromBaselineModelWithStoreMetadata:(id)storeMetadata;
+(BOOL)enoughTransactionsHavePassedToRollBaseline:(id)rollBaseline withLocalPeerID:(id)localPeerID error:(id*)error;
+(BOOL)logsConsumeEnoughDiskSpaceToRollBaseline:(id)rollBaseline withLocalPeerID:(id)localPeerID andStoreURL:(id)url error:(id*)error;
+(id)metadataFromBaselineArchive:(id)baselineArchive;
+(id)metadataFromCurrentBaselineForStoreWithName:(id)name modelVersionHash:(id)hash andUbiquityRootLocation:(id)location withError:(id*)error;
+(unsigned)numRequiredTransactionsForBaselineRoll;
+(/*unknown-type-(D)*/ void*)requiredFractionOfDiskSpaceUsedForLogs;
+(void)setNumRequiredTransactionsForBaselineRoll:(unsigned)baselineRoll;
+(void)setRequiredFractionOfDiskSpaceUsedForLogs:(/*unknown-type-(D)*/ void*)logs;
-(id)init;
-(id)initWithBaselineLocation:(id)baselineLocation andLocalPeerID:(id)anId;
-(id)initWithLocalPeerID:(id)localPeerID ubiquityRootLocation:(id)location forStoreWithName:(id)name andManagedObjectModel:(id)model;
// declared property getter: -(id)baselineArchive;
// declared property getter: -(id)baselineArchiveLocation;
-(id)baselineMetadataData;
// declared property getter: -(id)baselinePeerArchiveLocation;
// declared property getter: -(id)baselineStagingLocation;
-(BOOL)clearOutStagingLocationWithError:(id*)error;
-(BOOL)constructBaselineArchive:(id*)archive;
-(id)createManagedObjectModel;
// declared property getter: -(id)currentLocation;
-(void)dealloc;
-(id)description;
-(BOOL)existsInCloud;
-(BOOL)gatherContentsAndConstructArchiveWithError:(id*)error;
-(BOOL)gatherContentsFromMigratedBaseline:(id)migratedBaseline withStoreFileURL:(id)storeFileURL error:(id*)error;
-(BOOL)importBaselineWithLocalPeerID:(id)localPeerID stack:(id)stack andPersistentStoreCoordinator:(id)coordinator error:(id*)error;
-(BOOL)initializeBaselineArchiveWithError:(id*)error;
-(BOOL)isUploaded:(id*)uploaded;
-(BOOL)loadBaselineArchiveWithError:(id*)error;
// declared property getter: -(id)localPeerID;
-(BOOL)makeCurrentBaselineWithError:(id*)error;
// declared property getter: -(id)metadata;
-(BOOL)metadataMatchesCurrentMetadata:(id*)metadata;
// declared property getter: -(id)modelVersionHash;
-(BOOL)moveToPermanentLocation:(id*)permanentLocation;
-(id)optimizedModelData;
-(BOOL)prepareForBaselineRollOfPersistentStore:(id)persistentStore withStoreMetadata:(id)storeMetadata andLocalPeerID:(id)anId error:(id*)error;
-(id)regularModelData;
-(BOOL)replaceLocalPersistentStoreDescribedByStoreMetadata:(id)metadata usingPersistentStoreCoordinator:(id)coordinator error:(id*)error;
-(void)setCurrentLocation:(id)location;
-(id)storeData;
// declared property getter: -(id)storeFilename;
// declared property getter: -(id)storeFilenameToData;
// declared property getter: -(id)storeName;
// declared property getter: -(id)ubiquityRootLocation;
-(BOOL)unpackStoreFilesToStagingLocation:(id*)stagingLocation;
-(BOOL)writeArchiveContentsToDiskAndMonitorUploadSynchronously:(BOOL)diskAndMonitorUploadSynchronously error:(id*)error;
@end

