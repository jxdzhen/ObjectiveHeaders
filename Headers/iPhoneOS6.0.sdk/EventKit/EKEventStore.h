/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import "EventKit-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableSet, NSMutableDictionary, EKDaemonConnection, EKCalendar, NSNumber, NSString, NSTimeZone, NSObject, NSArray;
@protocol OS_dispatch_queue;

@interface EKEventStore : XXUnknownSuperclass {
@private
	NSMutableDictionary* _registeredObjects;
	NSMutableDictionary* _publicRegisteredObjects;
	NSMutableSet* _insertedObjects;
	NSMutableSet* _deletedObjects;
	NSMutableSet* _updatedObjects;
	NSNumber* _defaultTimedAlarmOffset;
	NSNumber* _defaultAllDayAlarmOffset;
	EKCalendar* _defaultCalendarForNewEvents;
	EKCalendar* _defaultCalendarForNewReminders;
	EKDaemonConnection* _database;
	double _lastDatabaseNotificationTimestamp;
	unsigned long _flags;
	NSTimeZone* _timeZone;
	NSMutableDictionary* _calendars;
	NSMutableDictionary* _sources;
	NSMutableSet* _objectsPendingCommit;
	NSObject<OS_dispatch_queue>* _calendarQueue;
	NSObject<OS_dispatch_queue>* _registeredQueue;
	NSObject<OS_dispatch_queue>* _unsavedChangesQueue;
	NSObject<OS_dispatch_queue>* _dbChangedQueue;
	NSMutableDictionary* _cachedValidatedEmails;
}
@property(retain, nonatomic) NSMutableDictionary* _cachedValidatedEmails;	// @synthesize
@property(retain, nonatomic) NSMutableDictionary* _calendars;	// @synthesize
@property(retain, nonatomic) EKCalendar* _defaultCalendarForNewEvents;	// @synthesize
@property(retain, nonatomic) EKCalendar* _defaultCalendarForNewReminders;	// @synthesize
@property(retain, nonatomic) NSMutableDictionary* _sources;	// @synthesize
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* calendarQueue;	// @synthesize=_calendarQueue
@property(readonly, assign, nonatomic) NSArray* calendars;
@property(retain, nonatomic) EKDaemonConnection* database;	// @synthesize=_database
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* dbChangedQueue;	// @synthesize=_dbChangedQueue
@property(retain, nonatomic) NSNumber* defaultAllDayAlarmOffset;	// @synthesize=_defaultAllDayAlarmOffset
@property(readonly, assign, nonatomic) EKCalendar* defaultCalendarForNewEvents;
@property(retain, nonatomic) NSNumber* defaultTimedAlarmOffset;	// @synthesize=_defaultTimedAlarmOffset
@property(assign, nonatomic) NSMutableSet* deletedObjects;	// @synthesize=_deletedObjects
@property(readonly, assign, nonatomic) NSString* eventStoreIdentifier;
@property(assign, nonatomic) unsigned long flags;	// @synthesize=_flags
@property(assign, nonatomic) NSMutableSet* insertedObjects;	// @synthesize=_insertedObjects
@property(assign, nonatomic) double lastDatabaseNotificationTimestamp;	// @synthesize=_lastDatabaseNotificationTimestamp
@property(assign, nonatomic) NSMutableSet* objectsPendingCommit;	// @synthesize=_objectsPendingCommit
@property(assign, nonatomic) NSMutableDictionary* publicRegisteredObjects;	// @synthesize=_publicRegisteredObjects
@property(assign, nonatomic) NSMutableDictionary* registeredObjects;	// @synthesize=_registeredObjects
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* registeredQueue;	// @synthesize=_registeredQueue
@property(copy, nonatomic) NSTimeZone* timeZone;	// @synthesize=_timeZone
@property(assign, nonatomic) NSObject<OS_dispatch_queue>* unsavedChangesQueue;	// @synthesize=_unsavedChangesQueue
@property(assign, nonatomic) NSMutableSet* updatedObjects;	// @synthesize=_updatedObjects
+(int)authorizationStatusForEntityType:(unsigned)entityType;
+(Class)classForEntityName:(id)entityName;
+(Class)publicClassForEntityName:(id)entityName;
-(id)init;
-(id)initWithAccessToEntityTypes:(unsigned)entityTypes;
-(id)initWithAccessToEntityTypes:(unsigned)entityTypes options:(unsigned long)options path:(id)path;
-(void)_accessStatusChanged;
-(id)_addFetchedObjectWithID:(id)anId;
-(void)_addObjectToPendingCommits:(id)pendingCommits;
-(id)_allCalendars;
// declared property getter: -(id)_cachedValidatedEmails;
-(BOOL)_calendar:(id)calendar supportsEntityType:(unsigned)type;
-(id)_calendarItemsMatchingPredicate:(id)predicate;
-(id)_calendarWithID:(id)anId;
// declared property getter: -(id)_calendars;
-(void)_databaseChangedExternally;
// declared property getter: -(id)_defaultCalendarForNewEvents;
// declared property getter: -(id)_defaultCalendarForNewReminders;
-(void)_deleteObject:(id)object;
-(id)_eventWithURI:(id)uri checkValid:(BOOL)valid;
-(void)_forgetRegisteredObjects;
-(void)_insertObject:(id)object;
-(BOOL)_parseURI:(id)uri expectedScheme:(id)scheme identifier:(id*)identifier options:(id*)options;
-(void)_performServerFunction:(id)function replyHandler:(id)handler;
-(id)_predicateForRemindersWithDate:(id)date useAsCompletionDate:(BOOL)date2 calendars:(id)calendars limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed includeDatesBefore:(BOOL)before sortOrder:(int)order;
-(void)_protectedDataDidBecomeAvailable;
-(void)_protectedDataWillBecomeUnavailable;
-(void)_refreshDASource:(id)source isUserRequested:(BOOL)requested;
-(void)_refreshDASubscribedCalendar:(id)calendar isUserRequested:(BOOL)requested;
-(void)_refreshSource:(id)source accountsManager:(id)manager isUserRequested:(BOOL)requested;
-(void)_refreshSubscribedCalendar:(id)calendar accountsManager:(id)manager isUserRequested:(BOOL)requested;
-(void)_registerObject:(id)object;
-(void)_registerObjectImmediate:(id)immediate;
-(void)_requestAuthorizationStatusForEntityType:(unsigned)entityType;
-(void)_reregisterObject:(id)object oldID:(id)anId;
-(void)_saveWithoutNotify;
// declared property getter: -(id)_sources;
-(void)_trackModifiedObject:(id)object;
-(void)_unregisterObject:(id)object;
-(void)_validateObjectIDs:(id)ids completion:(id)completion;
-(void)alarmOccurrencesBetweenStartDate:(id)date endDate:(id)date2 completion:(id)completion;
-(id)alarmWithUUID:(id)uuid;
-(void)cacheValidationStatusForEmail:(id)email status:(int)status;
-(id)calendarItemWithIdentifier:(id)identifier;
-(id)calendarItemsWithExternalIdentifier:(id)externalIdentifier;
// declared property getter: -(id)calendarQueue;
-(id)calendarWithExternalURI:(id)externalURI;
-(id)calendarWithID:(id)anId;
-(id)calendarWithIdentifier:(id)identifier;
// declared property getter: -(id)calendars;
-(id)calendarsForEntityType:(unsigned)entityType;
-(void)cancelFetchRequest:(id)request;
-(id)changesSinceSequenceNumber:(int)number;
-(id)closestCachedOccurrenceToDate:(double)date forEventUID:(int)eventUID;
-(BOOL)commit:(id*)commit;
-(id)connection;
-(CGColorRef)copyCGColorForNewCalendar;
-(int)countOfRemindersMatchingPredicate:(id)remindersMatchingPredicate;
-(void)daemonRestarted;
// declared property getter: -(id)database;
// declared property getter: -(id)dbChangedQueue;
-(void)dealloc;
-(id)defaultAllDayAlarm;
// declared property getter: -(id)defaultAllDayAlarmOffset;
// declared property getter: -(id)defaultCalendarForNewEvents;
-(id)defaultCalendarForNewReminders;
-(id)defaultTimedAlarm;
// declared property getter: -(id)defaultTimedAlarmOffset;
-(BOOL)deleteCalendar:(id)calendar forEntityType:(int)entityType error:(id*)error;
// declared property getter: -(id)deletedObjects;
-(id)earliestExpiringNotifiableEventEndDateAfterDate:(id)date timeZone:(id)zone;
-(int)emailAddressValidationStatus:(id)status;
-(void)enumerateEventsMatchingPredicate:(id)predicate usingBlock:(id)block;
-(id)eventForUID:(id)uid occurrenceDate:(id)date;
-(id)eventForUID:(id)uid occurrenceDate:(id)date checkValid:(BOOL)valid;
// declared property getter: -(id)eventStoreIdentifier;
-(id)eventWithIdentifier:(id)identifier;
-(id)eventWithUUID:(id)uuid;
-(id)eventWithUniqueId:(id)uniqueId;
-(id)eventsMatchingPredicate:(id)predicate;
-(id)fetchEventsMatchingPredicate:(id)predicate resultHandler:(id)handler;
-(BOOL)fetchProperties:(id)properties forReminders:(id)reminders;
-(id)fetchRemindersMatchingPredicate:(id)predicate completion:(id)completion;
// declared property getter: -(unsigned long)flags;
-(BOOL)hideCalendarsFromNotificationCenter:(id)notificationCenter error:(id*)error;
-(id)importICS:(id)ics intoCalendar:(id)calendar options:(unsigned)options;
-(id)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options;
-(void)importICSData:(id)data intoCalendar:(id)calendar options:(unsigned)options completion:(id)completion;
-(id)insertNewEvent;
-(id)insertNewExceptionDateWithDate:(id)date;
-(id)insertNewReminder;
// declared property getter: -(id)insertedObjects;
-(id)inviteReplyNotifications;
-(int)inviteReplyNotificationsCount;
-(BOOL)isDataProtected;
// declared property getter: -(double)lastDatabaseNotificationTimestamp;
-(id)localSource;
-(void)locationBasedAlarmOccurrencesWithCompletion:(id)completion;
-(BOOL)markCalendarAlerted:(id)alerted;
-(void)markEventAlerted:(id)alerted;
-(BOOL)markInviteReplyNotificationAlerted:(id)alerted;
-(void)markNotificationsAlertedAndSave:(id)save;
-(BOOL)markResourceChangeAlerted:(id)alerted error:(id*)error;
-(int)notifiableEventCount;
-(id)objectWithObjectID:(id)objectID;
// declared property getter: -(id)objectsPendingCommit;
-(id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars;
-(id)occurrenceCacheGetOccurrencesForCalendars:(id)calendars onDay:(double)day;
-(BOOL)occurrenceCacheOccurrencesAreBeingGenerated;
-(id)predicateForAllRemindersDueBeforeOrOnDueDate:(id)allRemindersDueBeforeOrOnDueDate calendars:(id)calendars;
-(id)predicateForAllRemindersWithDueDate:(id)dueDate calendars:(id)calendars;
-(id)predicateForCompletedRemindersWithCalendars:(id)calendars;
-(id)predicateForCompletedRemindersWithCompletionDateStarting:(id)completionDateStarting ending:(id)ending calendars:(id)calendars;
-(id)predicateForCompletedRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;
-(id)predicateForCompletedRemindersWithDueDateOrCompletionDate:(id)dueDateOrCompletionDate calendars:(id)calendars sortOrder:(int)order;
-(id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars;
-(id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date calendars:(id)calendars loadDefaultProperties:(BOOL)properties;
-(id)predicateForEventsWithStartDate:(id)startDate endDate:(id)date eventUUID:(id)uuid calendars:(id)calendars;
-(id)predicateForIncompleteRemindersDueBeforeOrOnDueDate:(id)incompleteRemindersDueBeforeOrOnDueDate calendars:(id)calendars sortOrder:(int)order;
-(id)predicateForIncompleteRemindersWithDueDate:(id)dueDate calendars:(id)calendars sortOrder:(int)order;
-(id)predicateForIncompleteRemindersWithDueDateStarting:(id)dueDateStarting ending:(id)ending calendars:(id)calendars;
-(id)predicateForNotifiableEvents;
-(id)predicateForNotificationCenterVisibleEvents;
-(id)predicateForRemindersInCalendars:(id)calendars;
-(id)predicateForRemindersWithSearchTerm:(id)searchTerm;
-(id)predicateForRemindersWithTitle:(id)title calendars:(id)calendars;
-(id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order;
-(id)predicateForRemindersWithTitle:(id)title listTitle:(id)title2 limitToCompletedOrIncomplete:(BOOL)completedOrIncomplete completed:(BOOL)completed dueAfter:(id)after dueBefore:(id)before searchTerm:(id)term sortOrder:(int)order maxResults:(unsigned)results;
-(id)predicateForUnacknowledgedEvents;
-(id)predicateForUnalertedEvents;
-(id)predicateForUpcomingEventsWithLimit:(int)limit;
-(id)publicObjectWithObjectID:(id)objectID;
-(id)publicObjectWithPersistentObject:(id)persistentObject;
// declared property getter: -(id)publicRegisteredObjects;
-(int)readWriteCalendarCountForEntityType:(unsigned)entityType;
-(id)readWriteCalendarsForEntityType:(unsigned)entityType;
-(void)refreshSourcesIfNecessary;
-(void)refreshSourcesIfNecessary:(BOOL)necessary;
-(id)registerFetchedObjectWithID:(id)anId;
-(id)registerFetchedObjectWithID:(id)anId defaultLoadedProperties:(id)properties;
// declared property getter: -(id)registeredObjects;
// declared property getter: -(id)registeredQueue;
-(oneway void)release;
-(id)reminderWithExternalURI:(id)externalURI;
-(id)remindersMatchingPredicate:(id)predicate;
-(BOOL)removeCalendar:(id)calendar commit:(BOOL)commit error:(id*)error;
-(BOOL)removeCalendar:(id)calendar error:(id*)error;
-(BOOL)removeEvent:(id)event span:(int)span commit:(BOOL)commit error:(id*)error;
-(BOOL)removeEvent:(id)event span:(int)span error:(id*)error;
-(BOOL)removeInviteReplyNotification:(id)notification error:(id*)error;
-(BOOL)removeInviteReplyNotifications:(id)notifications error:(id*)error;
-(BOOL)removeReminder:(id)reminder commit:(BOOL)commit error:(id*)error;
-(BOOL)removeReminder:(id)reminder error:(id*)error;
-(BOOL)removeResourceChange:(id)change error:(id*)error;
-(BOOL)removeResourceChanges:(id)changes error:(id*)error;
-(BOOL)removeSource:(id)source error:(id*)error;
-(void)reset;
-(id)resourceChangesForEntityTypes:(unsigned)entityTypes;
-(void)rollback;
-(BOOL)saveCalendar:(id)calendar commit:(BOOL)commit error:(id*)error;
-(BOOL)saveCalendar:(id)calendar error:(id*)error;
-(BOOL)saveEvent:(id)event span:(int)span commit:(BOOL)commit error:(id*)error;
-(BOOL)saveEvent:(id)event span:(int)span error:(id*)error;
-(BOOL)saveReminder:(id)reminder commit:(BOOL)commit error:(id*)error;
-(BOOL)saveReminder:(id)reminder error:(id*)error;
-(BOOL)saveSource:(id)source error:(id*)error;
-(int)sequenceNumber;
-(unsigned)serverPort;
// declared property setter: -(void)setCalendarQueue:(id)queue;
// declared property setter: -(void)setDatabase:(id)database;
// declared property setter: -(void)setDbChangedQueue:(id)queue;
// declared property setter: -(void)setDefaultAllDayAlarmOffset:(id)offset;
-(void)setDefaultCalendarForNewEvents:(id)newEvents;
-(void)setDefaultCalendarForNewReminders:(id)newReminders;
// declared property setter: -(void)setDefaultTimedAlarmOffset:(id)offset;
// declared property setter: -(void)setDeletedObjects:(id)objects;
// declared property setter: -(void)setFlags:(unsigned long)flags;
// declared property setter: -(void)setInsertedObjects:(id)objects;
-(BOOL)setInvitationStatus:(unsigned)status forEvent:(id)event error:(id*)error;
-(BOOL)setInvitationStatus:(unsigned)status forEvents:(id)events error:(id*)error;
// declared property setter: -(void)setLastDatabaseNotificationTimestamp:(double)timestamp;
// declared property setter: -(void)setObjectsPendingCommit:(id)commit;
// declared property setter: -(void)setPublicRegisteredObjects:(id)objects;
// declared property setter: -(void)setRegisteredObjects:(id)objects;
// declared property setter: -(void)setRegisteredQueue:(id)queue;
// declared property setter: -(void)setTimeZone:(id)zone;
// declared property setter: -(void)setUnsavedChangesQueue:(id)queue;
// declared property setter: -(void)setUpdatedObjects:(id)objects;
// declared property setter: -(void)set_cachedValidatedEmails:(id)emails;
// declared property setter: -(void)set_calendars:(id)calendars;
// declared property setter: -(void)set_defaultCalendarForNewEvents:(id)newEvents;
// declared property setter: -(void)set_defaultCalendarForNewReminders:(id)newReminders;
// declared property setter: -(void)set_sources:(id)sources;
-(id)sharedCalendarInvitationsForEntityTypes:(unsigned)entityTypes;
-(id)sourceWithIdentifier:(id)identifier;
-(id)sources;
// declared property getter: -(id)timeZone;
-(int)unacknowledgedEventCount;
// declared property getter: -(id)unsavedChangesQueue;
// declared property getter: -(id)updatedObjects;
@end

