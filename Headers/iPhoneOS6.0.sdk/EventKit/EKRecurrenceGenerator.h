/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/EventKit.framework/EventKit
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "EventKit-Structs.h"

@class NSCalendar, NSArray, NSDate, NSTimeZone;

@interface EKRecurrenceGenerator : XXUnknownSuperclass {
@private
	NSCalendar* _calendar;
	NSDate* _eventStartDate;
	NSDate* _eventEndDate;
	NSTimeZone* _eventTimeZone;
	unsigned _duration;
	BOOL _allDay;
	int _interval;
	int _frequency;
	NSDate* _endDate;
	int _weekStart;
	BOOL _shouldPinMonthDays;
	NSArray* _daysOfTheWeek;
	NSArray* _daysOfTheMonth;
	NSArray* _daysOfTheYear;
	NSArray* _weeksOfTheYear;
	NSArray* _monthsOfTheYear;
	NSArray* _setPositions;
}
@property(assign, nonatomic) BOOL allDay;	// @synthesize=_allDay
@property(copy, nonatomic) NSArray* daysOfTheMonth;	// @synthesize=_daysOfTheMonth
@property(copy, nonatomic) NSArray* daysOfTheWeek;	// @synthesize=_daysOfTheWeek
@property(copy, nonatomic) NSArray* daysOfTheYear;	// @synthesize=_daysOfTheYear
@property(copy, nonatomic) NSDate* endDate;	// @synthesize=_endDate
@property(copy, nonatomic) NSDate* eventEndDate;	// @synthesize=_eventEndDate
@property(copy, nonatomic) NSDate* eventStartDate;	// @synthesize=_eventStartDate
@property(copy, nonatomic) NSTimeZone* eventTimeZone;	// @synthesize=_eventTimeZone
@property(copy, nonatomic) NSArray* monthsOfTheYear;	// @synthesize=_monthsOfTheYear
@property(copy, nonatomic) NSArray* setPositions;	// @synthesize=_setPositions
@property(copy, nonatomic) NSArray* weeksOfTheYear;	// @synthesize=_weeksOfTheYear
+(id)generator;
-(id)init;
-(id)_computeRecurrenceEndDate:(int)date;
-(double)_convertAbsoluteTime:(double)time fromTimeZone:(id)timeZone toTimeZone:(id)timeZone3;
-(id)_copyDailyOccurrencesWithInitialDate:(id)initialDate startDate:(id)date endDate:(id)date3 count:(unsigned)count;
-(id)_copyMonthlyOccurrencesWithInitialDate:(id)initialDate startDate:(id)date endDate:(id)date3 count:(unsigned)count;
-(id)_copyOccurrenceDatesBetweenStartDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date2 timeZone:(id)zone limit:(int)limit;
-(id)_copySimpleYearlyOccurrencesWithInitialDate:(id)initialDate startDate:(id)date endDate:(id)date3 count:(unsigned)count;
-(id)_copyWeeklyOccurrencesWithInitialDate:(id)initialDate startDate:(id)date endDate:(id)date3 count:(unsigned)count;
-(id)_copyYearlyOccurrencesWithInitialDate:(id)initialDate startDate:(id)date endDate:(id)date3 count:(unsigned)count;
-(BOOL)_isSimpleYearlyRecurrence;
-(void)_prepareForCalRecurrence:(void*)calRecurrence locked:(BOOL)locked;
-(void)_prepareForEKRecurrence:(id)ekrecurrence;
-(void)_prepareForPersistentRecurrence:(id)persistentRecurrence;
-(void)_setupForCalEvent:(void*)calEvent locked:(BOOL)locked;
-(void)_setupForEKEvent:(id)ekevent;
-(void)_setupForPersistentEvent:(id)persistentEvent;
-(BOOL)_validateCalDate:(XXStruct_lQVxyC)date pinned:(BOOL)pinned;
// declared property getter: -(BOOL)allDay;
-(id)copyOccurrenceDatesWithCalEvent:(void*)calEvent startDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date3 timeZone:(id)zone limit:(int)limit locked:(BOOL)locked;
-(id)copyOccurrenceDatesWithEKEvent:(id)ekevent recurrenceRule:(id)rule startDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date4 timeZone:(id)zone limit:(int)limit;
-(id)copyOccurrenceDatesWithEKEvent:(id)ekevent startDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date3 timeZone:(id)zone limit:(int)limit;
-(id)copyOccurrenceDatesWithEvent:(id)event recurrenceRule:(id)rule startDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date4 timeZone:(id)zone limit:(int)limit;
-(id)copyOccurrenceDatesWithEvent:(id)event startDate:(XXStruct_lQVxyC)date endDate:(XXStruct_lQVxyC)date3 timeZone:(id)zone limit:(int)limit;
-(id)copyOccurrenceDatesWithInitialDate:(id)initialDate calRecurrences:(id)recurrences rangeStart:(id)start rangeEnd:(id)end timeZone:(id)zone;
// declared property getter: -(id)daysOfTheMonth;
// declared property getter: -(id)daysOfTheWeek;
// declared property getter: -(id)daysOfTheYear;
-(void)dealloc;
// declared property getter: -(id)endDate;
// declared property getter: -(id)eventEndDate;
// declared property getter: -(id)eventStartDate;
// declared property getter: -(id)eventTimeZone;
-(BOOL)isOccurrenceDate:(id)date validForEvent:(id)event;
// declared property getter: -(id)monthsOfTheYear;
-(id)nextOccurrenceDateWithEKRecurrences:(id)ekrecurrences initialDate:(id)date afterDate:(id)date3;
// declared property setter: -(void)setAllDay:(BOOL)day;
// declared property setter: -(void)setDaysOfTheMonth:(id)theMonth;
// declared property setter: -(void)setDaysOfTheWeek:(id)theWeek;
// declared property setter: -(void)setDaysOfTheYear:(id)theYear;
// declared property setter: -(void)setEndDate:(id)date;
// declared property setter: -(void)setEventEndDate:(id)date;
// declared property setter: -(void)setEventStartDate:(id)date;
// declared property setter: -(void)setEventTimeZone:(id)zone;
// declared property setter: -(void)setMonthsOfTheYear:(id)theYear;
// declared property getter: -(id)setPositions;
// declared property setter: -(void)setSetPositions:(id)positions;
// declared property setter: -(void)setWeeksOfTheYear:(id)theYear;
// declared property getter: -(id)weeksOfTheYear;
@end

