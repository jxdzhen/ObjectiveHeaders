/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import </libxml2.2.h>
#import "NSISVariableDelegate.h"
#import "Foundation-Structs.h"

@class NSMutableArray, NSMutableSet, NSMapTable, NSISVariable;
@protocol NSISEngineDelegate;

@interface NSISEngine : NSObject <NSISVariableDelegate> {
	NSMapTable* _rows;
	NSMapTable* _rowsCrossIndex;
	NSISVariable* _headForObjectiveRow;
	NSMutableArray* _variablesWithValueRestrictionViolations;
	int _automaticOptimizationDisabledCount;
	id<NSISEngineDelegate> _delegate;
	int _delegateCallsDisabledCount;
	NSMapTable* _brokenConstraintPositiveErrors;
	NSMapTable* _brokenConstraintNegativeErrors;
	NSMutableSet* _variablesWithIntegralizationViolations;
	CFDictionaryRef _integralizationAdjustmentsForConstraintMarkers;
	BOOL _shouldIntegralize;
}
@property(assign) id<NSISEngineDelegate> delegate;	// @synthesize=_delegate
@property(retain) NSISVariable* headForObjectiveRow;	// @synthesize=_headForObjectiveRow
@property(assign) CFDictionaryRef integralizationAdjustmentsForConstraintMarkers;
@property(retain) NSMapTable* rows;	// @synthesize=_rows
@property(retain) NSMapTable* rowsCrossIndex;	// @synthesize=_rowsCrossIndex
@property(assign) BOOL shouldIntegralize;	// @synthesize=_shouldIntegralize
@property(retain) NSMutableSet* variablesWithIntegralizationViolations;	// @synthesize=_variablesWithIntegralizationViolations
@property(retain) NSMutableArray* variablesWithValueRestrictionViolations;	// @synthesize=_variablesWithValueRestrictionViolations
-(id)init;
-(id)_brokenConstraintNegativeErrors;
-(id)_brokenConstraintNegativeErrorsIfAvailable;
-(id)_brokenConstraintPositiveErrors;
-(id)_brokenConstraintPositiveErrorsIfAvailable;
-(void)addExpression:(id)expression priority:(float)priority times:(float)times toObjectiveRowWithHead:(id)head body:(id)body;
-(void)addExpression:(id)expression times:(float)times toRowWithHead:(id)head body:(id)body;
-(void)addVariable:(id)variable coefficient:(float)coefficient toRowWithHead:(id)head body:(id)body;
-(void)addVariable:(id)variable priority:(float)priority times:(float)times toObjectiveRowWithHead:(id)head body:(id)body;
-(void)addVariableToBeOptimized:(id)beOptimized priority:(float)priority;
-(id)allRowHeads;
-(BOOL)bodyVarIsAmbiguous:(id)ambiguous withPivotOfOutgoingRowHead:(id*)outgoingRowHead;
-(id)candidateRedundantConstraints;
-(void)changeVariableToBeOptimized:(id)beOptimized fromPriority:(float)priority toPriority:(float)priority3;
-(id)chooseHeadForRowBody:(id)rowBody;
-(id)chooseOutgoingRowHeadForIncomingRowHead:(id)incomingRowHead;
-(void)constraintDidChangeSuchThatMarker:(id)constraint shouldBeReplacedByMarkerPlusDelta:(float)delta;
-(id)constraints;
-(id)constraintsAffectingValueOfVariable:(id)variable;
-(void)dealloc;
// declared property getter: -(id)delegate;
-(id)description;
-(int)desirabilityOfAdjustingVariable:(id)adjustingVariable delta:(float)delta fixingTargetVar:(BOOL)var;
-(void)enumerateOriginalConstraints:(id)constraints;
-(void)enumerateRows:(id)rows;
-(void)enumerateRowsCrossIndex:(id)index;
-(id)errorVariableIntroducedByBreakingConstraintWithMarker:(id)marker errorIsPositive:(BOOL)positive;
-(BOOL)exerciseAmbiguityInVariable:(id)variable;
-(id)expressionBySubstitutingForRowHeadVariablesInExpression:(id)expression;
-(id)fallbackMarkerForConstraintToBreakInRowWithHead:(id)head body:(id)body;
-(void)fixUpValueRestrictionViolations;
-(void)fixupIntegralizationViolations;
-(id)handleUnsatisfiableRowWithHead:(id)head body:(id)body mutuallyExclusiveConstraints:(id*)constraints;
-(BOOL)hasValue:(float*)value forVariable:(id)variable;
// declared property getter: -(id)headForObjectiveRow;
-(BOOL)incoming:(id*)incoming andOutgoing:(id*)outgoing rowHeadsThatMakeValueAmbiguousForVariable:(id)variable;
-(float)integralizationAdjustmentForMarker:(id)marker;
// declared property getter: -(CFDictionaryRef)integralizationAdjustmentsForConstraintMarkers;
-(id)markerForBrokenConstraintWithNegativeErrorVar:(id)negativeErrorVar;
-(id)markerForBrokenConstraintWithPositiveErrorVar:(id)positiveErrorVar;
-(void)minimizeConstantInObjectiveRowWithHead:(id)head;
-(id)negativeErrorVarForBrokenConstraintWithMarker:(id)marker;
-(id)nsis_descriptionOfVariable:(id)variable;
-(BOOL)nsis_shouldIntegralizeVariable:(id)variable;
-(void)nsis_valueOfVariable:(id)variable didChangeInEngine:(id)engine;
-(BOOL)nsis_valueOfVariableIsUserObservable:(id)variableIsUserObservable;
-(unsigned)numberOfConstraintsEligibleForAdjustmentToIntegralizeVariable:(id)integralizeVariable ignoringConstraintsWithMarkers:(id)markers;
-(void)optimize;
-(id)outgoingRowHeadForRemovingConstraintWithMarker:(id)marker;
-(void)pivotToMakeBodyVar:(id)makeBodyVar newHeadOfRowWithHead:(id)head;
-(id)positiveErrorVarForBrokenConstraintWithMarker:(id)marker;
-(void)rawRemoveRowWithHead:(id)head;
-(void)rawSetRowWithHead:(id)head body:(id)body;
-(void)removeBodyVarFromAllRows:(id)allRows;
-(void)removeConstraintWithMarker:(id)marker;
-(void)removeRowWithHead:(id)head;
-(void)removeVariableToBeOptimized:(id)beOptimized priority:(float)priority;
-(void)replaceMarker:(id)marker withMarkerPlusCoefficient:(float)markerPlusCoefficient timesVariable:(id)variable;
-(id)rowBodyForHead:(id)head;
-(id)rowBodyForNonObjectiveHead:(id)nonObjectiveHead;
-(id)rowBodyForObjectiveHead:(id)objectiveHead;
-(void)rowCrossIndexNoteBodyVariable:(id)variable wasAddedToRowWithHead:(id)head;
-(void)rowCrossIndexNoteBodyVariable:(id)variable wasRemovedFromRowWithHead:(id)head;
-(void)rowCrossIndexNoteDroppedBodyVar:(id)var;
-(id)rowHeadsForRowsContainingBodyVar:(id)rowsContainingBodyVar;
// declared property getter: -(id)rows;
// declared property getter: -(id)rowsCrossIndex;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property setter: -(void)setHeadForObjectiveRow:(id)objectiveRow;
-(void)setIntegralizationAdjustment:(float)adjustment forMarker:(id)marker;
// declared property setter: -(void)setIntegralizationAdjustmentsForConstraintMarkers:(CFDictionaryRef)constraintMarkers;
-(void)setNegativeErrorVar:(id)var forBrokenConstraintWithMarker:(id)marker;
-(void)setPositiveErrorVar:(id)var forBrokenConstraintWithMarker:(id)marker;
-(void)setRowWithHead:(id)head body:(id)body;
// declared property setter: -(void)setRows:(id)rows;
// declared property setter: -(void)setRowsCrossIndex:(id)index;
// declared property setter: -(void)setShouldIntegralize:(BOOL)integralize;
// declared property setter: -(void)setVariablesWithIntegralizationViolations:(id)integralizationViolations;
// declared property setter: -(void)setVariablesWithValueRestrictionViolations:(id)valueRestrictionViolations;
// declared property getter: -(BOOL)shouldIntegralize;
-(void)substituteOutAllOccurencesOfBodyVar:(id)bodyVar withExpression:(id)expression;
-(BOOL)tryAddingDirectly:(id)directly;
-(BOOL)tryToAddConstraintWithMarker:(id)marker expression:(id)expression integralizationAdjustment:(float)adjustment mutuallyExclusiveConstraints:(id*)constraints;
-(BOOL)tryUsingArtificialVariableToAddConstraintWithMarker:(id)marker rowBody:(id)body mutuallyExclusiveConstraints:(id*)constraints;
-(float)valueForVariable:(id)variable;
-(float)valueForVariableWithoutIntegralizationAdjustments:(id)variableWithoutIntegralizationAdjustments;
-(BOOL)valueOfVariableIsAmbiguous:(id)variableIsAmbiguous;
-(id)variableToWorkOnAmongVariablesWithIntegralizationViolationsIgnoringLostCauses:(id)integralizationViolationsIgnoringLostCauses varsAlreadyAdjusted:(id)adjusted;
// declared property getter: -(id)variablesWithIntegralizationViolations;
// declared property getter: -(id)variablesWithValueRestrictionViolations;
-(void)verifyInternalIntegrity;
-(void)withAutomaticOptimizationDisabled:(id)automaticOptimizationDisabled;
-(void)withDelegateCallsDisabled:(id)delegateCallsDisabled;
-(void)withoutOptimizingAtEndRunBlockWithAutomaticOptimizationDisabled:(id)automaticOptimizationDisabled;
@end

