/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/Foundation.framework/Foundation
 */

#import </libxml2.2.h>
#import "Foundation-Structs.h"
#import "NSXPCProxyCreating.h"

@class NSXPCListenerEndpoint, NSXPCInterface, NSString;
@protocol NSObject, OS_dispatch_queue;

@interface NSXPCConnection : NSObject <NSXPCProxyCreating> {
@private
	void* _xconnection;
	NSObject<OS_dispatch_queue>* _internalQueue;
	NSObject<OS_dispatch_queue>* _userQueue;
	unsigned long long _state;
	id _interruptionHandler;
	id _invalidationHandler;
	id _exportInfo;
	id _replyInfo;
	id _importInfo;
	id<NSObject> _otherInfo;
	id _reserved1;
	id _lock;
	NSXPCInterface* _remoteObjectInterface;
	NSString* _serviceName;
	NSXPCListenerEndpoint* _endpoint;
	id _reserved2;
	id _reserved3;
}
@property(readonly, assign) int auditSessionIdentifier;
@property(readonly, assign) unsigned effectiveGroupIdentifier;
@property(readonly, assign) unsigned effectiveUserIdentifier;
@property(readonly, assign) NSXPCListenerEndpoint* endpoint;
@property(retain) NSXPCInterface* exportedInterface;
@property(retain) id exportedObject;
@property(copy) id interruptionHandler;
@property(copy) id invalidationHandler;
@property(readonly, assign) int processIdentifier;
@property(retain) NSXPCInterface* remoteObjectInterface;	// @synthesize=_remoteObjectInterface
@property(readonly, assign) NSString* serviceName;
+(void)beginTransaction;
+(id)currentConnection;
+(void)endTransaction;
-(id)init;
-(id)initWithEndpoint:(id)endpoint;
-(id)initWithListenerEndpoint:(id)listenerEndpoint;
-(id)initWithMachServiceName:(id)machServiceName;
-(id)initWithMachServiceName:(id)machServiceName options:(unsigned)options;
-(id)initWithServiceName:(id)serviceName;
-(void)_addProxy:(unsigned long long)proxy;
-(void)_decodeAndInvokeMessageWithData:(id)data;
-(void)_decodeAndInvokeReplyBlockWithData:(id)data;
-(id)_exportTable;
-(id)_initWithPeerConnection:(id)peerConnection name:(id)name;
-(void)_removeProxy:(unsigned long long)proxy;
-(void)_sendDesistForProxyNumber:(unsigned long long)proxyNumber;
-(void)_sendInvocation:(id)invocation proxyNumber:(unsigned long long)number remoteInterface:(id)interface;
-(void)_sendInvocation:(id)invocation proxyNumber:(unsigned long long)number remoteInterface:(id)interface withErrorHandler:(id)errorHandler;
-(void)_sendInvocation:(id)invocation proxyNumber:(unsigned long long)number remoteInterface:(id)interface withErrorHandler:(id)errorHandler timeout:(double)timeout;
-(void)_setUUID:(id)uuid;
// declared property getter: -(int)auditSessionIdentifier;
-(XXStruct_kUSYWB)auditToken;
-(void)dealloc;
-(id)debugDescription;
-(id)delegate;
// declared property getter: -(unsigned)effectiveGroupIdentifier;
// declared property getter: -(unsigned)effectiveUserIdentifier;
// declared property getter: -(id)endpoint;
// declared property getter: -(id)exportedInterface;
// declared property getter: -(id)exportedObject;
-(void)finalize;
// declared property getter: -(id)interruptionHandler;
-(void)invalidate;
// declared property getter: -(id)invalidationHandler;
// declared property getter: -(int)processIdentifier;
// declared property getter: -(id)remoteObjectInterface;
-(id)remoteObjectProxy;
-(id)remoteObjectProxyWithErrorHandler:(id)errorHandler;
-(id)remoteObjectProxyWithTimeout:(double)timeout errorHandler:(id)handler;
-(id)replacementObjectForEncoder:(id)encoder object:(id)object;
-(void)resume;
// declared property getter: -(id)serviceName;
-(void)setDelegate:(id)delegate;
// declared property setter: -(void)setExportedInterface:(id)interface;
// declared property setter: -(void)setExportedObject:(id)object;
// declared property setter: -(void)setInterruptionHandler:(id)handler;
// declared property setter: -(void)setInvalidationHandler:(id)handler;
-(void)setOptions:(unsigned)options;
// declared property setter: -(void)setRemoteObjectInterface:(id)interface;
-(void)setUserInfo:(id)info;
-(void)start;
-(void)stop;
-(void)suspend;
-(id)userInfo;
-(id)valueForEntitlement:(id)entitlement;
@end

