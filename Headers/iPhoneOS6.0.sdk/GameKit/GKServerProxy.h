/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/GameKit.framework/GameKit
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "GKClientProtocol.h"

@class NSXPCConnection, NSObject;
@protocol GKServerProxyDataUpdateDelegate, OS_dispatch_queue;

@interface GKServerProxy : XXUnknownSuperclass <GKClientProtocol> {
	NSXPCConnection* _connection;
	BOOL _networkIndicatorEnabled;
	int _networkIndicatorCount;
	int _authState;
	NSObject<OS_dispatch_queue>* _authQueue;
@private
	id<GKServerProxyDataUpdateDelegate> _dataUpdateDelegate;
}
@property(assign, nonatomic) NSXPCConnection* connection;	// @synthesize=_connection
@property(assign, nonatomic) id<GKServerProxyDataUpdateDelegate> dataUpdateDelegate;	// @synthesize=_dataUpdateDelegate
+(id)serverProxy;
-(id)init;
-(BOOL)_isAuthenticatedWithResponse:(id)response;
-(void)abortChallenges:(id)challenges handler:(id)handler;
-(void)acceptFriendRequestsFromPlayerIDs:(id)playerIDs handler:(id)handler;
-(void)acceptGameInvite:(id)invite connectionData:(id)data handler:(id)handler;
-(void)acceptInviteForTurnBasedMatch:(id)turnBasedMatch handler:(id)handler;
-(void)accountCreated:(id)created playerID:(id)anId authenticationToken:(id)token alias:(id)alias finished:(BOOL)finished handler:(id)handler;
-(void)accountEdited:(id)edited alias:(id)alias firstName:(id)name lastName:(id)name4 handler:(id)handler;
-(id)accountName;
-(void)accountTypesAvailableForLinkingWithHandler:(id)handler;
-(void)addEmail:(id)email handler:(id)handler;
-(int)authState;
-(void)authenticatePlayerWithUsername:(id)username password:(id)password handler:(id)handler;
-(id)authenticatedPlayerID;
-(void)authenticationCancelledWithHandler:(id)handler;
-(void)authenticationDisabledWithHandler:(id)handler;
-(oneway void)beginNetworkActivity;
-(void)cachePhotos:(id)photos handler:(id)handler;
-(void)cancelGameInviteWithHandler:(id)handler;
-(void)cancelOutstandingMatchRequestWithHandler:(id)handler;
-(void)cancelRelayRequest:(id)request handler:(id)handler;
-(oneway void)challengeCompleted:(id)completed;
-(oneway void)challengeReceived:(id)received;
-(void)clearBadgeCountOfType:(unsigned)type;
-(void)clearBulletinsForReceivedChallenges:(id)receivedChallenges;
-(void)clearBulletinsOfType:(int)type forPlayerIDs:(id)playerIDs;
-(void)completeTurnBasedMatch:(id)match handler:(id)handler;
-(oneway void)completedChallengeSelected:(id)selected;
// declared property getter: -(id)connection;
-(void)createTurnBasedGameForMatchRequest:(id)matchRequest individualMessages:(id)messages handler:(id)handler;
// declared property getter: -(id)dataUpdateDelegate;
-(void)dealloc;
-(void)declineFriendRequestsFromPlayerIDs:(id)playerIDs handler:(id)handler;
-(void)declineGameInvite:(id)invite reason:(int)reason handler:(id)handler;
-(void)declineInviteForTurnBasedMatch:(id)turnBasedMatch handler:(id)handler;
-(void)deletePhotoWithHandler:(id)handler;
-(void)dismissFriendRecommendations:(id)recommendations handler:(id)handler;
-(void)dismissGameRecommendations:(id)recommendations handler:(id)handler;
-(oneway void)endNetworkActivity;
-(void)getAcceptedGameInviteWithHandler:(id)handler;
-(void)getAccountURLsWithHandler:(id)handler;
-(void)getAchievementDescriptionsForGame:(id)game handler:(id)handler;
-(void)getAchievementsForGame:(id)game players:(id)players handler:(id)handler;
-(void)getAchievementsLeaderboard:(id)leaderboard handler:(id)handler;
-(void)getChallengesForGame:(id)game handler:(id)handler;
-(void)getCommonFriendsForPlayer:(id)player handler:(id)handler;
-(oneway void)getCompatibilityMatrix:(id)matrix handler:(id)handler;
-(void)getDetailsForChallenges:(id)challenges handler:(id)handler;
-(void)getDetailsForTurnBasedMatchIDs:(id)turnBasedMatchIDs includeGameData:(BOOL)data handler:(id)handler;
-(void)getFlowRateForPlayerGroup:(int)playerGroup handler:(id)handler;
-(void)getFriendRecommendationsWithHandler:(id)handler;
-(void)getFriendRequestsWithHandler:(id)handler;
-(void)getFriendsForPlayer:(id)player handler:(id)handler;
-(void)getGameRecommendationsWithHandler:(id)handler;
-(void)getGamesForPlayer:(id)player includeInstalled:(BOOL)installed handler:(id)handler;
-(void)getGamesWithAchievementStatsForPlayer:(id)player handler:(id)handler;
-(void)getImageDataForURL:(id)url handler:(id)handler;
-(void)getImageForURL:(id)url handler:(id)handler;
-(void)getInviteSessionTokenWithHandler:(id)handler;
-(void)getLastTurnBasedEventWithHandler:(id)handler;
-(void)getLeaderboardsForGame:(id)game player:(id)player handler:(id)handler;
-(void)getMetadataForGames:(id)games handler:(id)handler;
-(void)getOverallFlowRateWithHandler:(id)handler;
-(void)getPlayerRatingWithHandler:(id)handler;
-(void)getPlayerStatsForGames:(id)games player:(id)player handler:(id)handler;
-(void)getPlayersForGame:(id)game achievementID:(id)anId handler:(id)handler;
-(void)getPlayersForGame:(id)game compatibleGames:(BOOL)games handler:(id)handler;
-(void)getPlayersForGame:(id)game leaderboardID:(id)anId handler:(id)handler;
-(void)getPlayersForMatchRequest:(id)matchRequest connectionData:(id)data connectedPeers:(int)peers rematchID:(id)anId handler:(id)handler;
-(void)getPlayersToInviteWithHandler:(id)handler;
-(void)getProfilesForPlayerIDs:(id)playerIDs pieces:(unsigned)pieces handler:(id)handler;
-(void)getRecentMatchesForGame:(id)game otherPlayer:(id)player handler:(id)handler;
-(void)getScoresForLeaderboard:(id)leaderboard game:(id)game handler:(id)handler;
-(void)getStoreBagValuesForKeys:(id)keys handler:(id)handler;
-(void)getStoreItemsForAdamIDs:(id)adamIDs handler:(id)handler;
-(void)getTopGamesWithHandler:(id)handler;
-(void)getTurnBasedMatchesWithHandler:(id)handler;
-(void)handleBulletinResponse:(id)response;
-(void)handleServerError:(id)error;
-(BOOL)hasAuthenticatedAccount;
-(void)initiateRelayRequest:(id)request handler:(id)handler;
-(void)invitePlayers:(id)players toGame:(id)game handler:(id)handler;
-(void)invitePlayersForMatchRequest:(id)matchRequest onlineConnectionData:(id)data nearbyConnectionData:(id)data3 handler:(id)handler;
-(void)issueChallenge:(id)challenge toPlayerIDs:(id)playerIDs handler:(id)handler;
-(void)linkAccounts:(BOOL)accounts withAuthToken:(id)authToken forService:(unsigned)service mayAskAgainLater:(BOOL)later handler:(id)handler;
-(void)markFriendRecommendations:(id)recommendations viewed:(BOOL)viewed handler:(id)handler;
-(void)markGameRecommendations:(id)recommendations viewed:(BOOL)viewed handler:(id)handler;
-(void)nearbyInviteWasCancelled:(id)cancelled;
-(void)openSettings;
-(void)presentNearbyInvite:(id)invite;
-(oneway void)receivedChallengeSelected:(id)selected;
-(oneway void)refreshContentsForDataType:(unsigned)dataType userInfo:(id)info;
-(void)removeFriend:(id)aFriend handler:(id)handler;
-(void)removeGameForBundleID:(id)bundleID handler:(id)handler;
-(void)removePlayersFromGameInvite:(id)gameInvite handler:(id)handler;
-(void)removeTurnBasedMatch:(id)match handler:(id)handler;
-(void)resetAchievementsWithHandler:(id)handler;
-(oneway void)resetNetworkActivity;
-(void)resignFromTurnBasedGame:(id)turnBasedGame outcome:(unsigned)outcome handler:(id)handler;
-(oneway void)respondedToNearbyInvite:(id)nearbyInvite;
-(void)saveDataForTurnBasedMatch:(id)turnBasedMatch handler:(id)handler;
-(void)sendFriendRequestToPlayerIDs:(id)playerIDs emailAddresses:(id)addresses aliases:(id)aliases twitterScreenNames:(id)names facebookIDs:(id)ids message:(id)message rid:(id)rid handler:(id)handler;
-(void)sendReconnectInvitation:(id)invitation playerID:(id)anId connectionData:(id)data sessionToken:(id)token pushToken:(id)token5 handler:(id)handler;
-(BOOL)setAuthState:(int)state;
-(oneway void)setBadgeCount:(unsigned)count forType:(unsigned)type;
// declared property setter: -(void)setConnection:(id)connection;
// declared property setter: -(void)setDataUpdateDelegate:(id)delegate;
-(void)setDefaultLeaderboard:(id)leaderboard handler:(id)handler;
-(void)setPhotoData:(id)data handler:(id)handler;
-(void)setStatus:(id)status handler:(id)handler;
-(void)setupAccountForParameters:(id)parameters handler:(id)handler;
-(void)shouldAskToLinkAccountsForService:(unsigned)service handler:(id)handler;
-(void)signOutPlayerWithHandler:(id)handler;
-(void)startGameWithChallenge:(id)challenge;
-(void)submitAWDMetrics:(id)metrics;
-(void)submitAchievements:(id)achievements handler:(id)handler;
-(void)submitRating:(float)rating forGame:(id)game handler:(id)handler;
-(void)submitScores:(id)scores handler:(id)handler;
-(void)submitTurnForTurnBasedMatch:(id)turnBasedMatch nextParticipantIndexes:(id)indexes turnTimeout:(double)timeout handler:(id)handler;
-(void)terminateDaemon;
-(void)updateCacheWithNearbyProfileDictionary:(id)nearbyProfileDictionary;
-(void)updateContactsWithHandler:(id)handler;
-(void)updateLinkedAccountsForService:(unsigned)service withAuthToken:(id)authToken handler:(id)handler;
-(void)updateNotificationTopics;
-(void)updateRelayRequest:(id)request handler:(id)handler;
-(void)validateAccountWithPassword:(id)password handler:(id)handler;
@end

