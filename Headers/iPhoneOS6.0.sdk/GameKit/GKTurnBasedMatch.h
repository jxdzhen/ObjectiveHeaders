/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/GameKit.framework/GameKit
 */

#import "GKSessionDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class GKTurnBasedParticipant, NSDate, NSString, GKTurnBasedMatchInternal, NSData, NSArray;

@interface GKTurnBasedMatch : XXUnknownSuperclass <GKSessionDelegate> {
@private
	NSArray* _participants;
	GKTurnBasedMatchInternal* _internal;
	int _turnSequenceIndex;
	NSArray* _turnSequence;
}
@property(readonly, assign, nonatomic) NSDate* creationDate;	// @dynamic
@property(retain, nonatomic) GKTurnBasedParticipant* currentParticipant;
@property(readonly, assign, nonatomic) NSDate* dateSortKey;
@property(readonly, assign, nonatomic) GKTurnBasedParticipant* firstWinnerOrTiedOrLastLoser;
@property(retain, nonatomic) GKTurnBasedMatchInternal* internal;	// @synthesize=_internal
@property(retain, nonatomic) NSDate* lastTurnDate;	// @dynamic
@property(readonly, assign, nonatomic) GKTurnBasedParticipant* localPlayerParticipant;
@property(readonly, assign, nonatomic) NSData* matchData;	// @dynamic
@property(assign, nonatomic) unsigned matchDataMaximumSize;	// @dynamic
@property(readonly, assign, nonatomic) NSString* matchID;	// @dynamic
@property(copy, nonatomic) NSString* message;	// @dynamic
@property(retain, nonatomic) NSArray* participants;	// @synthesize=_participants
@property(readonly, assign, nonatomic) GKTurnBasedParticipant* playingWithParticipantOrFirstKnownPlayer;
@property(readonly, assign, nonatomic) GKTurnBasedParticipant* previousParticipant;
@property(readonly, assign, nonatomic) GKTurnBasedParticipant* previousParticipantOrFirstKnownPlayer;
@property(readonly, assign, nonatomic) int status;	// @dynamic
@property(readonly, assign, nonatomic) int turnNumber;	// @dynamic
@property(retain, nonatomic) NSArray* turnSequence;	// @synthesize=_turnSequence
@property(assign, nonatomic) int turnSequenceIndex;	// @synthesize=_turnSequenceIndex
+(void)findMatchForRequest:(id)request withCompletionHandler:(id)completionHandler;
+(BOOL)instancesRespondToSelector:(SEL)selector;
+(void)loadMatchWithID:(id)anId withCompletionHandler:(id)completionHandler;
+(void)loadMatchesWithCompletionHandler:(id)completionHandler;
+(void)loadTurnBasedMatchDetailsForMatchIDs:(id)matchIDs loadGameData:(BOOL)data withCompletionHandler:(id)completionHandler;
+(void)loadTurnBasedMatchSummaries:(id)summaries;
+(void)loadTurnBasedMatchWithDetailsForMatchID:(id)matchID withCompletionHandler:(id)completionHandler;
+(id)matchesWithInternalRepresentations:(id)internalRepresentations;
-(id)init;
-(id)initWithInternalRepresentation:(id)internalRepresentation;
-(void)acceptInviteWithCompletionHandler:(id)completionHandler;
// declared property getter: -(id)currentParticipant;
// declared property getter: -(id)dateSortKey;
-(void)dealloc;
-(void)declineInviteWithCompletionHandler:(id)completionHandler;
-(id)description;
-(void)endMatchInTurnWithMatchData:(id)matchData completionHandler:(id)handler;
-(void)endTurnWithNextParticipant:(id)nextParticipant matchData:(id)data completionHandler:(id)handler;
-(void)endTurnWithNextParticipants:(id)nextParticipants turnTimeout:(double)timeout matchData:(id)data completionHandler:(id)handler;
// declared property getter: -(id)firstWinnerOrTiedOrLastLoser;
-(id)forwardingTargetForSelector:(SEL)selector;
-(unsigned)hash;
-(id)indexesForParticipants:(id)participants;
// declared property getter: -(id)internal;
-(BOOL)isEqual:(id)equal;
-(void)loadMatchDataWithCompletionHandler:(id)completionHandler;
// declared property getter: -(id)localPlayerParticipant;
// declared property getter: -(unsigned)matchDataMaximumSize;
-(void)parseTurnSequence:(id)sequence;
-(void)participantQuitInTurnWithOutcome:(int)outcome nextParticipant:(id)participant matchData:(id)data completionHandler:(id)handler;
-(void)participantQuitInTurnWithOutcome:(int)outcome nextParticipants:(id)participants turnTimeout:(double)timeout matchData:(id)data completionHandler:(id)handler;
-(void)participantQuitOutOfTurnWithOutcome:(int)outcome withCompletionHandler:(id)completionHandler;
// declared property getter: -(id)participants;
// declared property getter: -(id)playingWithParticipantOrFirstKnownPlayer;
// declared property getter: -(id)previousParticipant;
// declared property getter: -(id)previousParticipantOrFirstKnownPlayer;
-(void)rematchWithCompletionHandler:(id)completionHandler;
-(void)removeWithCompletionHandler:(id)completionHandler;
-(BOOL)respondsToSelector:(SEL)selector;
-(void)saveCurrentTurnWithMatchData:(id)matchData completionHandler:(id)handler;
// declared property setter: -(void)setCurrentParticipant:(id)participant;
// declared property setter: -(void)setInternal:(id)internal;
// declared property setter: -(void)setParticipants:(id)participants;
// declared property setter: -(void)setTurnSequence:(id)sequence;
// declared property setter: -(void)setTurnSequenceIndex:(int)index;
-(void)setValue:(id)value forUndefinedKey:(id)undefinedKey;
// declared property getter: -(int)status;
// declared property getter: -(id)turnSequence;
// declared property getter: -(int)turnSequenceIndex;
-(id)valueForUndefinedKey:(id)undefinedKey;
@end

