/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "MKLocationProviderDelegate.h"
#import "RadiosPreferencesDelegate.h"

@class NSBundle, NSHashTable, CLLocation, NSTimer, GEOLocationShiftFunctionResponse, GEOLocationShiftFunctionRequest, CLHeading, RadiosPreferences, GEOLocation;
@protocol MKLocationRecorder, MKLocationProvider;

@interface MKLocationManager : XXUnknownSuperclass <MKLocationProviderDelegate, RadiosPreferencesDelegate> {
@private
	id<MKLocationProvider> _locationProvider;
	NSHashTable* _locationObservers;
	NSHashTable* _locationListeners;
	NSHashTable* _headingObservers;
	CLLocation* _lastLocation;
	double _lastLocationUpdateTime;
	BOOL _isLastLocationStale;
	BOOL _lastLocationPushed;
	BOOL _trackingLocation;
	BOOL _trackingHeading;
	id<MKLocationRecorder> _locationRecorder;
	double _applicationResumeTime;
	double _applicationSuspendTime;
	double _headingUpdateTime;
	double _locationAccuracyUpdateTime;
	BOOL _isTrafficHarvestingEnabledValid;
	BOOL _isTrafficHarvestingEnabled;
	NSTimer* _coalesceTimer;
	double _lastLocationReportTime;
	BOOL _hasCheckedChinaShiftEnabled;
	BOOL _chinaShiftEnabled;
	GEOLocationShiftFunctionResponse* _shiftFunction;
	BOOL _isRequestingShiftFunction;
	CLLocation* _delayedLocationToShift;
	GEOLocationShiftFunctionRequest* _shiftRequest;
	int _shiftProvider;
	CLHeading* _throttledHeading;
	CLHeading* _heading;
	RadiosPreferences* _radiosPreferences;
	int _wiFiStatus;
	int _staleWiFiStatus;
	id _networkActivity;
	BOOL _enabled;
	BOOL _useCourseForHeading;
	int _consecutiveOutOfCourseCount;
	double _navCourse;
	double _lastKnownNavCourse;
	id _locationCorrector;
	BOOL _continuedAfterBecomingInactive;
	BOOL _continuesWhileInactive;
}
@property(assign, nonatomic) int activityType;
@property(assign, nonatomic) BOOL chinaShiftEnabled;	// @synthesize=_chinaShiftEnabled
@property(assign, nonatomic) BOOL continuesWhileInactive;	// @synthesize=_continuesWhileInactive
@property(readonly, assign, nonatomic) GEOLocation* courseCorrectedLocation;
@property(readonly, assign, nonatomic) GEOLocation* currentLocation;
@property(retain, nonatomic) CLLocation* delayedLocationToShift;	// @synthesize=_delayedLocationToShift
@property(assign, nonatomic) double desiredAccuracy;
@property(assign, nonatomic) double distanceFilter;
@property(retain, nonatomic) NSBundle* effectiveBundle;
@property(assign, nonatomic, getter=isEnabled) BOOL enabled;	// @synthesize=_enabled
@property(readonly, assign, nonatomic) double expectedGpsUpdateInterval;
@property(readonly, assign, nonatomic) GEOLocation* gridSnappedCurrentLocation;
@property(readonly, assign, nonatomic) BOOL hasLocation;
@property(readonly, assign, nonatomic) CLHeading* heading;	// @synthesize=_heading
@property(assign, nonatomic) int headingOrientation;
@property(readonly, assign, nonatomic) double headingUpdateTimeInterval;
@property(readonly, assign, nonatomic) BOOL isAirplaneModeBlockingLocation;
@property(readonly, assign, nonatomic) BOOL isHeadingServicesAvailable;
@property(readonly, assign, nonatomic) BOOL isLastLocationStale;	// @synthesize=_isLastLocationStale
@property(readonly, assign, nonatomic) BOOL isLocationServicesApproved;
@property(readonly, assign, nonatomic) BOOL isLocationServicesAvailable;
@property(readonly, assign, nonatomic) BOOL isLocationServicesDenied;
@property(readonly, assign, nonatomic) BOOL isLocationServicesEnabled;
@property(readonly, assign, nonatomic) BOOL isLocationServicesPossiblyAvailable;
@property(readonly, assign, nonatomic) BOOL isLocationServicesRestricted;
@property(readonly, assign, nonatomic) BOOL isTrafficHarvestingEnabled;
@property(readonly, assign, nonatomic) BOOL isWiFiEnabled;
@property(readonly, assign, nonatomic) CLLocation* lastLocation;
@property(readonly, assign, nonatomic, getter=wasLastLocationPushed) BOOL lastLocationPushed;	// @synthesize=_lastLocationPushed
@property(readonly, assign, nonatomic) int lastLocationSource;
@property(copy, nonatomic) id locationCorrector;	// @synthesize=_locationCorrector
@property(retain, nonatomic) id<MKLocationProvider> locationProvider;
@property(retain, nonatomic) id<MKLocationRecorder> locationRecorder;	// @synthesize=_locationRecorder
@property(assign, nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;
@property(readonly, assign, nonatomic) double navigationCourse;	// @synthesize=_navCourse
@property(copy, nonatomic) id networkActivity;	// @synthesize=_networkActivity
@property(retain, nonatomic) GEOLocationShiftFunctionResponse* shiftFunction;	// @synthesize=_shiftFunction
@property(retain, nonatomic) GEOLocationShiftFunctionRequest* shiftRequest;	// @synthesize=_shiftRequest
@property(retain, nonatomic) CLHeading* throttledHeading;	// @synthesize=_throttledHeading
@property(assign, nonatomic) BOOL useCourseForHeading;	// @synthesize=_useCourseForHeading
+(void)setConsidersWiFiInAirplaneMode:(BOOL)airplaneMode;
+(id)sharedLocationManager;
-(id)init;
-(id)_applyChinaLocationShift:(id)shift;
-(void)_countryProvidersDidChange:(id)_countryProviders;
-(BOOL)_isTimeToResetOnResume;
-(id)_radiosPreferences;
-(void)_reportHeadingFailureWithError:(id)error;
-(void)_reportHeadingSuccess;
-(void)_reportLocationFailureWithError:(id)error;
-(void)_reportLocationReset;
-(void)_reportLocationStatus:(SEL)status;
-(void)_reportLocationSuccess;
-(void)_setTrackingHeading:(BOOL)heading;
-(void)_setTrackingLocation:(BOOL)location;
-(void)_startCoalescingUpdates:(int)updates;
-(void)_stopCoalescingUpdates;
-(void)_suspend;
-(void)_syncLocationProviderWithTracking;
-(void)_updateWifiEnabled;
-(void)_useCoreLocationProvider;
// declared property getter: -(int)activityType;
-(void)airplaneModeChanged;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationWillResignActive:(id)application;
// declared property getter: -(BOOL)chinaShiftEnabled;
// declared property getter: -(BOOL)continuesWhileInactive;
// declared property getter: -(id)courseCorrectedLocation;
// declared property getter: -(id)currentLocation;
-(void)dampenGPSLocationAccuracy:(id*)accuracy oldLocationSource:(int)source;
-(void)dealloc;
// declared property getter: -(id)delayedLocationToShift;
// declared property getter: -(double)desiredAccuracy;
-(void)dismissHeadingCalibrationDisplay;
// declared property getter: -(double)distanceFilter;
// declared property getter: -(id)effectiveBundle;
// declared property getter: -(double)expectedGpsUpdateInterval;
// declared property getter: -(id)gridSnappedCurrentLocation;
// declared property getter: -(BOOL)hasLocation;
// declared property getter: -(id)heading;
// declared property getter: -(int)headingOrientation;
// declared property getter: -(double)headingUpdateTimeInterval;
// declared property getter: -(BOOL)isAirplaneModeBlockingLocation;
// declared property getter: -(BOOL)isEnabled;
// declared property getter: -(BOOL)isHeadingServicesAvailable;
// declared property getter: -(BOOL)isLastLocationStale;
// declared property getter: -(BOOL)isLocationServicesApproved;
// declared property getter: -(BOOL)isLocationServicesAvailable;
// declared property getter: -(BOOL)isLocationServicesDenied;
// declared property getter: -(BOOL)isLocationServicesEnabled;
// declared property getter: -(BOOL)isLocationServicesPossiblyAvailable;
-(BOOL)isLocationServicesPossiblyAvailable:(id*)available;
// declared property getter: -(BOOL)isLocationServicesPreferencesDialogEnabled;
// declared property getter: -(BOOL)isLocationServicesRestricted;
// declared property getter: -(BOOL)isTrafficHarvestingEnabled;
// declared property getter: -(BOOL)isWiFiEnabled;
// declared property getter: -(id)lastLocation;
// declared property getter: -(int)lastLocationSource;
-(void)listenForLocationUpdates:(id)locationUpdates;
// declared property getter: -(id)locationCorrector;
-(BOOL)locationManagerShouldDisplayHeadingCalibration:(id)locationManager;
// declared property getter: -(id)locationProvider;
-(void)locationProvider:(id)provider didReceiveError:(id)error;
-(void)locationProvider:(id)provider didUpdateHeading:(id)heading;
-(void)locationProvider:(id)provider didUpdateLocation:(id)location;
-(void)locationProviderDidChangeAuthorizationStatus:(id)locationProvider;
-(void)locationProviderDidPauseLocationUpdates:(id)locationProvider;
-(void)locationProviderDidResumeLocationUpdates:(id)locationProvider;
-(BOOL)locationProviderShouldPauseLocationUpdates:(id)locationProvider;
// declared property getter: -(id)locationRecorder;
// declared property getter: -(double)navigationCourse;
// declared property getter: -(id)networkActivity;
-(void)pushLocation:(id)location;
-(void)reportCoalescedUpdated;
-(void)requestShiftFunctionForLocation:(id)location wrap:(BOOL)wrap;
-(void)reset;
// declared property setter: -(void)setActivityType:(int)type;
// declared property setter: -(void)setChinaShiftEnabled:(BOOL)enabled;
-(void)setCoalesceTimer:(id)timer;
// declared property setter: -(void)setContinuesWhileInactive:(BOOL)inactive;
// declared property setter: -(void)setDelayedLocationToShift:(id)shift;
// declared property setter: -(void)setDesiredAccuracy:(double)accuracy;
// declared property setter: -(void)setDistanceFilter:(double)filter;
// declared property setter: -(void)setEffectiveBundle:(id)bundle;
// declared property setter: -(void)setEnabled:(BOOL)enabled;
-(void)setHeading:(id)heading;
// declared property setter: -(void)setHeadingOrientation:(int)orientation;
-(void)setLastLocation:(id)location;
// declared property setter: -(void)setLocationCorrector:(id)corrector;
// declared property setter: -(void)setLocationProvider:(id)provider;
// declared property setter: -(void)setLocationRecorder:(id)recorder;
// declared property setter: -(void)setLocationServicesPreferencesDialogEnabled:(BOOL)enabled;
// declared property setter: -(void)setNetworkActivity:(id)activity;
// declared property setter: -(void)setShiftFunction:(id)function;
// declared property setter: -(void)setShiftRequest:(id)request;
// declared property setter: -(void)setThrottledHeading:(id)heading;
// declared property setter: -(void)setUseCourseForHeading:(BOOL)heading;
// declared property getter: -(id)shiftFunction;
// declared property getter: -(id)shiftRequest;
-(BOOL)shouldCoalesceUpdates;
-(BOOL)shouldStartCoalescingLocation:(id)location;
-(BOOL)shouldStopCoalescingLocation:(id)location;
-(id)singleLocationUpdateWithHandler:(id)handler;
-(void)startHeadingUpdateWithObserver:(id)observer;
-(void)startLocationUpdateWithObserver:(id)observer;
-(void)stopHeadingUpdateWithObserver:(id)observer;
-(void)stopLocationUpdateWithObserver:(id)observer;
// declared property getter: -(id)throttledHeading;
// declared property getter: -(BOOL)useCourseForHeading;
// declared property getter: -(BOOL)wasLastLocationPushed;
-(void)wiFiStatusChanged:(id)changed;
@end

