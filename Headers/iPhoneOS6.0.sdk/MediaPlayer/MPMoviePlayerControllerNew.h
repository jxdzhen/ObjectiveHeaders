/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import "MPMediaPlayback.h"
#import "MPMovieViewDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class MPMovieAccessLog, MPMovieErrorLog, MPVideoViewController, NSArray, NSMutableArray, MPSystemNowPlayingController, NSMutableSet, MPMoviePlayerController, NSDictionary, NSError, MPMovieView, NSMutableDictionary, MPAVController;
@protocol MPMoviePlayerControllerDelegate;

@interface MPMoviePlayerControllerNew : XXUnknownSuperclass <MPMovieViewDelegate, MPMediaPlayback> {
@private
	int _additionalButtons;
	NSMutableSet* _asyncImageGenerators;
	int _controlStyle;
	float _currentPlaybackRate;
	id<MPMoviePlayerControllerDelegate> _delegate;
	NSDictionary* _HTTPHeaderFields;
	MPMoviePlayerController* _moviePlayer;
	NSArray* _movies;
	int _movieSourceType;
	MPMovieView* _movieView;
	MPSystemNowPlayingController* _nowPlayingController;
	NSError* _playbackError;
	MPAVController* _player;
	NSMutableArray* _queuedThumbnailRequests;
	int _repeatMode;
	unsigned _stateBeforeSettingPlaybackTime;
	MPVideoViewController* _videoViewController;
	unsigned _finishNotificationsPosted;
	BOOL _shouldAutoplay;
	BOOL _useApplicationAudioSession;
	BOOL _setUseApplicationAudioSessionWhenPlaybackEnds;
	BOOL _preparedQueue;
	BOOL _didAppear;
	BOOL _ignorePlaybackStateChanges;
	BOOL _playWhenSourceTypeIsDetermined;
	BOOL _prepareWhenSourceTypeIsDetermined;
	BOOL _isChangingMoviePath;
	BOOL _wasPlayingBeforeSuspended;
	BOOL _canPostDidFinishNotificationOnItemChange;
	BOOL _readyForDisplay;
	BOOL _shouldRestartPlaybackFromBeginning;
	BOOL _useHostedWindowWhenFullscreen;
	BOOL _willSoonEndUsingVideoLayer;
	double _initialPlaybackTime;
	double _endPlaybackTime;
	NSMutableDictionary* _timedMetadataForUniqueKey;
	BOOL _isActive;
	BOOL _isResigningActive;
	BOOL _didResignActive;
	BOOL _canShowControlsOverlayBeforeResignedActive;
	double _timeWhenResignedActive;
	unsigned _movieIndexWhenResignedActive;
	MPMovieAccessLog* _cachedAccessLog;
	MPMovieErrorLog* _cachedErrorLog;
}
@property(assign, nonatomic) float currentPlaybackRate;
@property(assign, nonatomic) double currentPlaybackTime;
@property(readonly, assign, nonatomic) BOOL isPreparedToPlay;
-(id)init;
-(id)_HTTPHeaderFields;
-(int)_additionalButtons;
-(BOOL)_areControlsHidden;
-(id)_audioSessionModeOverride;
-(void)_bufferingStateDidChangeNotification:(id)_bufferingState;
-(void)_cacheAccessAndErrorLogs;
-(BOOL)_canContinuePlayingWhenLocked;
-(void)_clearPlaybackStateAfterTimeJumpIfNecessary;
-(id)_delegate;
-(void)_didBecomeActiveNotification:(id)notification;
-(BOOL)_didPostFinishNotificationForReason:(int)reason;
-(void)_endUsingVideoLayer;
-(void)_ensureActive;
-(void)_firstVideoFrameDisplayedNotification:(id)notification;
-(unsigned)_hostedWindowContextID;
-(void)_isAirPlayVideoActiveDidChangeNotification:(id)_isAirPlayVideoActive;
-(BOOL)_isReadyForDisplay;
-(BOOL)_isTVOutEnabled;
-(void)_itemDidChangeNotification:(id)_item;
-(void)_itemPlaybackDidEndNotification:(id)_itemPlayback;
-(void)_itemPlaybackErrorNotification:(id)notification;
-(void)_itemReadyToPlayNotification:(id)playNotification;
-(void)_movieDurationAvailableNotification:(id)notification;
-(void)_movieNaturalSizeAvailableNotification:(id)notification;
-(void)_moviePlayerDidBecomeActiveNotification:(id)_moviePlayer;
-(void)_moviePlayerWillBecomeActiveNotification:(id)_moviePlayer;
-(void)_movieSourceTypeAvailableNotification:(id)notification;
-(id)_movieSubtitle;
-(id)_movieTitle;
-(void)_movieTypeAvailableNotification:(id)notification;
-(id)_movies;
-(id)_navigationBar;
-(id)_nowPlayingMovie;
-(void)_pausePlaybackForSuspension;
-(void)_playbackStateDidChangeNotification:(id)_playbackState;
-(void)_postDidFinishNotificationWithReason:(int)_post;
-(void)_postNotificationName:(id)name object:(id)object;
-(void)_postNotificationName:(id)name object:(id)object userInfo:(id)info;
-(void)_prepareToPlayWithStartIndex:(unsigned)startIndex;
-(void)_rateDidChangeNotification:(id)_rate;
-(void)_resignActive;
-(void)_restartPlaybackFromBeginning;
-(void)_serverDiedNotification:(id)notification;
-(void)_setAdditionalButtons:(int)buttons;
-(void)_setAudioSessionModeOverride:(id)override;
-(void)_setControlsHidden:(BOOL)hidden;
-(void)_setControlsHidden:(BOOL)hidden animated:(BOOL)animated;
-(void)_setCurrentPlaybackTime:(double)time timeOption:(int)option;
-(void)_setDelegate:(id)delegate;
-(void)_setDisallowsAMRAudio:(BOOL)audio;
-(void)_setHTTPHeaderFields:(id)fields;
-(void)_setMovieMediaTypesOverride:(int)override;
-(void)_setMoviePlayer:(id)player;
-(void)_setMovieSubtitle:(id)subtitle;
-(void)_setMovieTitle:(id)title;
-(void)_setMovies:(id)movies;
-(void)_setNowPlayingMovie:(id)movie;
-(void)_setShouldEnforceHDCP:(BOOL)_set;
-(void)_setUseApplicationAudioSession:(BOOL)session;
-(void)_setUseHostedWindowWhenFullscreen:(BOOL)fullscreen;
-(BOOL)_shouldContinuePlaybackInBackground;
-(BOOL)_shouldEnforceHDCP;
-(void)_simpleRemoteNotification:(id)notification;
-(void)_timeDidJumpNotification:(id)_time;
-(void)_timedMetadataAvailableNotification:(id)notification;
-(void)_timedMetadataImageAvailableNotification:(id)notification;
-(BOOL)_useHostedWindowWhenFullscreen;
-(CGRect)_videoFrame;
-(id)_videoView;
-(id)_videoViewController;
-(void)_videoViewPathWillChangeNotification:(id)_videoViewPath;
-(void)_videoViewScaleModeDidChangeNotification:(id)_videoViewScaleMode;
-(void)_willResignActiveNotification:(id)notification;
-(void)_willTerminateNotification:(id)notification;
-(void)_windowOrientationChangingNotification:(id)notification;
-(id)accessLog;
-(BOOL)allowsAirPlay;
-(id)backgroundView;
-(void)beginSeekingBackward;
-(void)beginSeekingForward;
-(void)cancelAllThumbnailImageRequests;
-(id)contentURL;
-(int)controlStyle;
// declared property getter: -(float)currentPlaybackRate;
// declared property getter: -(double)currentPlaybackTime;
-(void)dealloc;
-(BOOL)disallowsAMRAudio;
-(double)duration;
-(double)endPlaybackTime;
-(void)endSeeking;
-(id)errorLog;
-(double)initialPlaybackTime;
-(BOOL)inlinePlaybackUsesTVOut;
-(BOOL)isAirPlayVideoActive;
-(BOOL)isFullscreen;
// declared property getter: -(BOOL)isPreparedToPlay;
-(int)loadState;
-(int)movieMediaTypes;
-(int)movieSourceType;
-(void)movieView:(id)view willMoveToWindow:(id)window;
-(void)movieViewDidMoveToWindow:(id)movieView;
-(CGSize)naturalSize;
-(void)pause;
-(void)play;
-(double)playableDuration;
-(int)playbackState;
-(void)prepareToPlay;
-(int)repeatMode;
-(void)requestThumbnailImagesAtTimes:(id)times timeOption:(int)option;
-(int)scalingMode;
-(void)setAllowsAirPlay:(BOOL)play;
-(void)setBackgroundColor:(id)color;
-(void)setContentURL:(id)url;
-(void)setControlStyle:(int)style;
// declared property setter: -(void)setCurrentPlaybackRate:(float)rate;
// declared property setter: -(void)setCurrentPlaybackTime:(double)time;
-(void)setEndPlaybackTime:(double)time;
-(void)setFullscreen:(BOOL)fullscreen;
-(void)setFullscreen:(BOOL)fullscreen animated:(BOOL)animated;
-(void)setInitialPlaybackTime:(double)time;
-(void)setInlinePlaybackUsesTVOut:(BOOL)anOut;
-(void)setMovieControlMode:(int)mode;
-(void)setMovieSourceType:(int)type;
-(void)setRepeatMode:(int)mode;
-(void)setScalingMode:(int)mode;
-(void)setShouldAutoplay:(BOOL)autoplay;
-(void)setUseApplicationAudioSession:(BOOL)session;
-(BOOL)shouldAutoplay;
-(void)skipToBeginning;
-(void)skipToNextItem;
-(void)skipToPreviousItem;
-(void)stop;
-(id)thumbnailImageAtTime:(double)time timeOption:(int)option;
-(id)timedMetadata;
-(id)timedMetadataForKey:(id)key;
-(BOOL)useApplicationAudioSession;
-(BOOL)videoController:(id)controller tappedButtonPart:(unsigned long long)part;
-(void)videoController:(id)controller willHideOverlayWithDuration:(double)duration;
-(void)videoController:(id)controller willShowOverlayWithDuration:(double)duration;
-(void)videoControllerDidEnterFullscreen:(id)videoController;
-(void)videoControllerDidExitFullscreen:(id)videoController;
-(void)videoControllerDidHideOverlay:(id)videoController;
-(void)videoControllerDidShowOverlay:(id)videoController;
-(BOOL)videoControllerShouldAutohide:(id)videoController;
-(void)videoControllerWillEnterFullscreen:(id)videoController;
-(void)videoControllerWillExitFullscreen:(id)videoController;
-(id)view;
-(void)viewControllerRequestsExit:(id)exit reason:(int)reason;
@end

