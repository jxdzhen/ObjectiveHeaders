/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

#import "MediaPlayer-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MPAVPlaylistFeeder.h"

@class MPAVController, NSDictionary;

@interface MPQueueFeeder : XXUnknownSuperclass <MPAVPlaylistFeeder> {
	MPAVController* _avController;
	CFSetRef _itemsWithReferencesToClear;
	unsigned _repeatType;
	unsigned _shuffleType;
	CFDictionaryRef _nextStartTimes;
	id _representedObject;
	BOOL _fullScreenPlaybackQueue;
	BOOL _isSourceChangeInProgress;
	BOOL _deallocating;
@private
	unsigned _activeShuffleType;
}
@property(assign, nonatomic) MPAVController* AVController;	// @synthesize=_avController
@property(assign, nonatomic) unsigned activeShuffleType;	// @synthesize=_activeShuffleType
@property(assign, nonatomic) BOOL fullScreenPlaybackQueue;	// @synthesize=_fullScreenPlaybackQueue
@property(readonly, assign, nonatomic) unsigned initialPlaybackQueueDepth;
@property(assign, nonatomic) BOOL isSourceChangeInProgress;	// @synthesize=_isSourceChangeInProgress
@property(readonly, assign, nonatomic) Class itemClass;
@property(readonly, assign, nonatomic) unsigned itemCount;
@property(readonly, assign, nonatomic) unsigned nonRepeatingItemCount;
@property(readonly, assign, nonatomic) NSDictionary* preferredLanguages;
@property(readonly, assign, nonatomic) unsigned realRepeatType;
@property(readonly, assign, nonatomic) unsigned realShuffleType;
@property(assign, nonatomic) unsigned repeatType;	// @synthesize=_repeatType
@property(retain, nonatomic) id<NSObject> representedObject;	// @synthesize=_representedObject
@property(assign, nonatomic) unsigned shuffleType;	// @synthesize=_shuffleType
@property(readonly, assign, nonatomic) BOOL trackChangesCanEndPlayback;
+(void)restoreAVControllerPlaybackQueue:(id)queue fromUnarchiver:(id)unarchiver feederClass:(Class)aClass;
// declared property getter: -(id)AVController;
-(BOOL)_canPurgeNextStartTimes;
-(void)_fixNextStartTimesByInsertingRange:(NSRange)range;
-(void)_fixNextStartTimesByRemovingRange:(NSRange)range;
// declared property getter: -(unsigned)activeShuffleType;
-(void)addReferenceToItem:(id)item;
-(void)archiveAVControllerPlaybackQueue:(id)queue toArchiver:(id)archiver;
-(void)assumeOwnershipOfItems:(id)items;
-(void)beginSourceChange;
-(BOOL)canSkipItem:(id)item;
-(void)clearReferencesToItem:(id)item;
-(void)commitSourceChangeWithStartQueueIndex:(unsigned)startQueueIndex;
-(void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)index;
-(void)contentsDidChangeByRemovingRange:(NSRange)contents;
-(id)copyRawItemAtIndex:(unsigned)index;
-(void)dealloc;
-(id)errorResolverForItem:(id)item;
// declared property getter: -(BOOL)fullScreenPlaybackQueue;
// declared property getter: -(unsigned)initialPlaybackQueueDepth;
-(void)invalidateQueueCaches;
// declared property getter: -(BOOL)isSourceChangeInProgress;
// declared property getter: -(Class)itemClass;
// declared property getter: -(unsigned)itemCount;
-(id)itemForIndex:(unsigned)index;
-(unsigned)itemTypeForIndex:(unsigned)index;
-(id)localizedPositionInPlaylistString:(id)playlistString;
// declared property getter: -(unsigned)nonRepeatingItemCount;
-(id)pathAtIndex:(unsigned)index;
-(id)playbackInfoAtIndex:(unsigned)index;
// declared property getter: -(id)preferredLanguages;
// declared property getter: -(unsigned)realRepeatType;
// declared property getter: -(unsigned)realShuffleType;
-(BOOL)reloadWithDataSource:(id)dataSource;
-(BOOL)reloadWithDataSource:(id)dataSource keepPlayingCurrentItemIfPossible:(BOOL)possible;
// declared property getter: -(unsigned)repeatType;
// declared property getter: -(id)representedObject;
-(void)restoreAVControllerPlaybackQueue:(id)queue fromUnarchiver:(id)unarchiver;
// declared property setter: -(void)setAVController:(id)controller;
// declared property setter: -(void)setActiveShuffleType:(unsigned)type;
// declared property setter: -(void)setFullScreenPlaybackQueue:(BOOL)queue;
// declared property setter: -(void)setIsSourceChangeInProgress:(BOOL)progress;
-(void)setNextStartTime:(double)time forIndex:(unsigned)index;
// declared property setter: -(void)setRepeatType:(unsigned)type;
// declared property setter: -(void)setRepresentedObject:(id)object;
// declared property setter: -(void)setShuffleType:(unsigned)type;
-(void)setSubsequenceFocused:(BOOL)focused currentItemIndex:(unsigned)index;
-(BOOL)shouldBeginPlaybackOfItem:(id)item error:(id*)error;
-(BOOL)shouldReloadForChangeFromNetworkType:(int)networkType toNetworkType:(int)networkType2;
-(void)shuffleItemsWithAnchor:(unsigned*)anchor;
// declared property getter: -(unsigned)shuffleType;
// declared property getter: -(BOOL)trackChangesCanEndPlayback;
@end

