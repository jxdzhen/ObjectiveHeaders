/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/QuickLook.framework/QuickLook
 */

#import "QLPreviewItemInteractionDelegate.h"
#import "UIDocumentPasswordViewDelegate.h"
#import "QLProgressViewDelegate.h"
#import "QuickLook-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class QLProgressView, QLDisplayBundle, UIDocumentPasswordView, NSTimer, NSString;
@protocol QLPreviewItem;

@interface QLPreviewViewController : XXUnknownSuperclass <QLPreviewItemInteractionDelegate, UIDocumentPasswordViewDelegate, QLProgressViewDelegate> {
	id<QLPreviewItemInteractionDelegate> _displayBundleDelegate;
	id<QLPreviewItem> _previewItem;
	int _index;
	XXStruct_3Bq0WB _clientContext;
	int _previewMode;
	BOOL _needsReload;
	BOOL _swiping;
	BOOL _shouldSwapDisplayBundles;
	QLDisplayBundle* _displayBundle;
	QLDisplayBundle* _newDisplayBundle;
	NSTimer* _progressTimer;
	QLProgressView* _progressView;
	BOOL _loadingProgressVisible;
	NSString* _loadintTextForMissingFiles;
	BOOL _overlayHidden;
	UIDocumentPasswordView* _documentPasswordView;
	BOOL _loadedWithPassword;
}
@property(assign) XXStruct_3Bq0WB clientContext;
@property(readonly, assign) QLDisplayBundle* displayBundle;
@property(assign) id<QLPreviewItemInteractionDelegate> displayBundleDelegate;	// @synthesize=_displayBundleDelegate
@property(assign) int index;	// @synthesize=_index
@property(retain) id<QLPreviewItem> previewItem;
@property(assign) int previewMode;
-(id)init;
-(void)_adjustContentOffsetForKeyboardIfNeeded;
-(void)_cancelScheduledShowProgressiveUI;
-(void)_hidePasswordView;
-(void)_hideProgressiveUI;
-(void)_keyboardDidShow:(id)_keyboard;
-(void)_prepareDisplayBundle:(id)bundle preload:(BOOL)preload withHints:(id)hints;
-(void)_refreshPreviewItem:(BOOL)item withPassword:(id)password;
-(void)_removeDisplayBundles;
-(void)_removeProgressiveUIAnimation:(id)animation finished:(id)finished context:(void*)context;
-(void)_scheduleShowProgressiveUI;
-(void)_showGenericDisplayBundleForPreviewItem:(id)previewItem;
-(void)_showPasswordView;
-(void)_showProgressUI;
-(void)_swapDisplayBundles;
-(void)cancelLoadIfNeeded;
// declared property getter: -(XXStruct_3Bq0WB)clientContext;
-(id)clientProcessAlertViewForPreviewItem:(id)previewItem;
-(void)dealloc;
-(id)description;
-(void)didBeginEditingPassword:(id)password inView:(id)view;
-(void)didEndEditingPassword:(id)password inView:(id)view;
-(void)didFinishSwiping;
// declared property getter: -(id)displayBundle;
// declared property getter: -(id)displayBundleDelegate;
// declared property getter: -(int)index;
-(void)overlayWasInteractedWithOnPreviewItem:(id)onPreviewItem;
-(void)preloadIfNeeded;
// declared property getter: -(id)previewItem;
-(void)previewItem:(id)item receivedTapOnURL:(id)url;
-(void)previewItem:(id)item requiresDisplayBundle:(id)bundle withHints:(id)hints;
-(void)previewItem:(id)item setAVState:(id)state;
-(void)previewItem:(id)item willHideOverlayWithDuration:(double)duration;
-(id)previewItem:(id)item willSendRequest:(id)request;
-(void)previewItem:(id)item willShowOverlayWithDuration:(double)duration;
-(void)previewItemDidLoad:(id)previewItem atIndex:(int)index withError:(id)error;
-(void)previewItemWillLoad:(id)previewItem;
// declared property getter: -(int)previewMode;
-(void)progressViewWasTapped:(id)tapped;
-(void)refreshPreviewItem;
// declared property setter: -(void)setClientContext:(XXStruct_3Bq0WB)context;
// declared property setter: -(void)setDisplayBundleDelegate:(id)delegate;
// declared property setter: -(void)setIndex:(int)index;
-(void)setLoadintTextForMissingFiles:(id)missingFiles;
-(void)setOverlayHidden:(BOOL)hidden duration:(double)duration;
// declared property setter: -(void)setPreviewItem:(id)item;
// declared property setter: -(void)setPreviewMode:(int)mode;
-(void)userDidEnterPassword:(id)user forPasswordView:(id)passwordView;
-(void)viewDidLoad;
-(void)viewWasTappedOnPreviewItem:(id)item;
-(void)willMoveToParentViewController:(id)parentViewController;
-(void)willStartSwiping;
@end

