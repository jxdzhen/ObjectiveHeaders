/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/AddressBook.framework/AddressBook
 */

#import "AddressBook-Structs.h"
#import "ABPredicate.h"
#import <XXUnknownSuperclass.h> // Unknown library


@interface ABPredicate : XXUnknownSuperclass {
}
+(id)newQueryFromABPredicate:(id)abpredicate withSortOrder:(unsigned)sortOrder addressBook:(void*)book propertyIndices:(const CFDictionaryRef*)indices;
+(id)newQueryFromCompoundPredicate:(id)compoundPredicate withSortOrder:(unsigned)sortOrder addressBook:(void*)book propertyIndices:(const CFDictionaryRef*)indices;
+(id)newQueryWithProperties:(id)properties joins:(id)joins whereString:(id)string sortOrder:(unsigned)order groupByProperties:(id)properties5 addressBook:(void*)book propertyIndices:(const CFDictionaryRef*)indices;
+(id)personPredicateWithAnyValueForProperty:(int)property;
+(id)personPredicateWithGroup:(void*)group source:(void*)source account:(id)account;
+(id)personPredicateWithName:(id)name addressBook:(void*)book;
+(id)personPredicateWithNameLike:(id)nameLike addressBook:(void*)book;
+(id)personPredicateWithNameLike:(id)nameLike group:(void*)group source:(void*)source account:(id)account showingPersonLinks:(BOOL)links addressBook:(void*)book;
+(id)personPredicateWithNameLike:(id)nameLike group:(void*)group source:(void*)source account:(id)account showingPersonLinks:(BOOL)links includeSourceInResults:(BOOL)results addressBook:(void*)book;
+(id)personPredicateWithNameLike:(id)nameLike showingPersonLinks:(BOOL)links addressBook:(void*)book;
+(id)personPredicateWithNameOnly:(id)nameOnly account:(id)account addressBook:(void*)book;
+(id)personPredicateWithPhoneLike:(id)phoneLike countryHint:(id)hint addressBook:(void*)book;
+(id)personPredicateWithValue:(id)value comparison:(long)comparison forProperty:(int)property;
+(void)searchPeopleWithPredicate:(id)predicate sortOrder:(unsigned)order inAddressBook:(void*)addressBook withDelegate:(id)delegate;
-(id)init;
-(void)ab_bindStatement:(CPSqliteStatement*)statement withBindingOffset:(int*)bindingOffset predicateIdentifier:(int)identifier;
-(void)bindDouble:(double)aDouble toStatement:(CPSqliteStatement*)statement withBindingOffset:(int*)bindingOffset;
-(void)bindString:(id)string toStatement:(CPSqliteStatement*)statement withBindingOffset:(int*)bindingOffset;
-(void*)callbackContext;
-(void)dealloc;
-(void)evaluateCallbackWithSqliteContext:(sqlite3_context*)sqliteContext predicateContext:(void*)context values:(Mem**)values count:(int)count;
-(BOOL)hasCallback;
-(BOOL)isValid;
-(id)predicateFormat;
-(id)queryGroupByProperties;
-(id)queryJoinsInCompound:(BOOL)compound;
-(id)querySelectProperties;
-(id)queryWhereString;
@end

@interface ABPredicate (ABPredicateQueryCreation)
-(void)ab_addCallbackContextToArray:(CFArrayRef)array;
-(BOOL)ab_hasCallback;
-(id)ab_newQueryWithSortOrder:(unsigned)sortOrder addressBook:(void*)book propertyIndices:(const CFDictionaryRef*)indices;
@end

