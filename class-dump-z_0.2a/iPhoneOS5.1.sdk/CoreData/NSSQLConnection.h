/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import "CoreData-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSArray, NSSQLAdapter, NSSQLStatement;

__attribute__((visibility("hidden")))
@interface NSSQLConnection : XXUnknownSuperclass {
@private
	NSSQLAdapter* _adapter;
	BOOL _transactionIsOpen;
	BOOL _useSyntaxColoredLogging;
	int _debug;
	NSSQLStatement* _sqlStatement;
	NSArray* _columnsToFetch;
	NSArray* _metadataColumns;
}
+(void)initialize;
-(id)initWithAdapter:(id)adapter;
-(void)_forceDisconnectOnError;
-(void)_performPostSaveTasks;
-(void)_raiseOptimisticLockingExceptionWithReason:(id)reason;
-(id)adapter;
-(void)addPeerRangeForPeerID:(id)peerID entityName:(id)name rangeStart:(id)start rangeEnd:(id)end peerRangeStart:(id)start5 peerRangeEnd:(id)end6;
-(id)allPeerRanges;
-(void)awake;
-(void)beginTransaction;
-(BOOL)canConnect;
-(id)columnsToFetch;
-(void)commitTransaction;
-(void)connect;
-(void)createIndexesForEntity:(id)entity;
-(void)createManyToManyTablesForEntity:(id)entity;
-(id)createMapOfEntityNameToPKMaxForEntities:(id)entities;
-(id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)pktable;
-(id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)ubrangeTable;
-(void)createMetadata;
-(void)createPrimaryKeyTableForModel:(id)model knownEmpty:(BOOL)empty;
-(void)createSchema;
-(void)createTableForEntity:(id)entity;
-(void)createTablesForEntities:(id)entities;
-(BOOL)databaseIsEmpty;
-(void)dealloc;
-(void)deleteCorrelation:(id)correlation;
-(void)deleteRow:(id)row;
-(id)describeResults;
-(void)didCreateSchema;
-(void)disconnect;
-(void)endFetch;
-(void)endPrimaryKeyGeneration;
-(void)execute;
-(long long)fetchMaxPrimaryKeyForEntity:(id)entity;
-(id)fetchMetadata;
-(int)fetchResultSet:(void*)set usingFetchPlan:(id)plan;
-(id)fetchTableCreationSQL;
-(id)fetchTableNames;
-(id)fetchUbiqiutyKnowledgeVector;
-(void)finalize;
-(void)forceTransactionClosed;
-(long long)generatePrimaryKeysForEntity:(id)entity batch:(unsigned)batch;
-(BOOL)hasMetadataTable;
-(BOOL)hasOpenTransaction;
-(BOOL)hasPrimaryKeyTable;
-(void)insertCorrelation:(id)correlation;
-(void)insertRow:(id)row;
-(BOOL)isFetchInProgress;
-(BOOL)isOpen;
-(id)metadataColumns;
-(id)newFetchedArray;
-(void)performAdapterOperation:(id)operation;
-(void)performAdapterOperations:(id)operations;
-(void)prepareAndExecuteSQLStatement:(id)statement;
-(void)prepareForPrimaryKeyGeneration;
-(void)prepareSQLStatement:(id)statement;
-(CFArrayRef)rawIntegerRowsForSQL:(id)sql;
-(void)releaseSQLStatement;
-(void)resetSQLStatement;
-(void)rollbackTransaction;
-(void)saveMetadata:(id)metadata;
-(void)selectAttributes:(id)attributes fetchRequest:(id)request lock:(BOOL)lock entity:(id)entity;
-(void)setColumnsToFetch:(id)fetch;
-(void)setExclusiveLockingMode:(BOOL)mode;
-(void)setUbiquityTableValue:(id)value forKey:(id)key;
-(void)sleep;
-(id)sqlStatement;
-(void)transactionDidBegin;
-(void)transactionDidCommit;
-(void)transactionDidRollback;
-(id)ubiquityTableKeysAndValues;
-(id)ubiquityTableValueForKey:(id)key;
-(void)updateCorrelation:(id)correlation;
-(void)updateRow:(id)row;
-(void)updateUbiquityKnowledgeForPeerWithID:(id)anId andTransactionNumber:(id)number;
-(void)updateUbiquityKnowledgeVector:(id)vector;
-(void)willCreateSchema;
@end

