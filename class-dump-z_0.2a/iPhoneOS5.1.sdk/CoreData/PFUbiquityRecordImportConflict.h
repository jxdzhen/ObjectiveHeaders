/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreData.framework/CoreData
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class PFUbiquityKnowledgeVector, NSDictionary, PFUbiquityImportContext, NSArray, NSManagedObject, NSString, NSNumber, NSDate;

__attribute__((visibility("hidden")))
@interface PFUbiquityRecordImportConflict : XXUnknownSuperclass {
@private
	NSString* _conflictingObjectGlobalIDStr;
	NSManagedObject* _sourceObject;
	NSDictionary* _conflictingLogContent;
	PFUbiquityKnowledgeVector* _conflictingLogKnowledgeVector;
	PFUbiquityKnowledgeVector* _currentKnowledgeVector;
	int _conflictingLogTransactionType;
	NSDate* _conflictLogDate;
	NSNumber* _conflictingLogTransactionNumber;
	NSArray* _transactionHistory;
	NSDictionary* _globalIDIndexToLocalIDURIMap;
	PFUbiquityImportContext* _importContext;
}
@property(retain, nonatomic) NSDate* conflictLogDate;	// @synthesize=_conflictLogDate
@property(retain, nonatomic) NSDictionary* conflictingLogContent;	// @synthesize=_conflictingLogContent
@property(retain, nonatomic) PFUbiquityKnowledgeVector* conflictingLogKnowledgeVector;	// @synthesize=_conflictingLogKnowledgeVector
@property(retain, nonatomic) NSNumber* conflictingLogTransactionNumber;	// @synthesize=_conflictingLogTransactionNumber
@property(assign, nonatomic) int conflictingLogTransactionType;	// @synthesize=_conflictingLogTransactionType
@property(retain, nonatomic) NSString* conflictingObjectGlobalIDStr;	// @synthesize=_conflictingObjectGlobalIDStr
@property(retain, nonatomic) PFUbiquityKnowledgeVector* currentKnowledgeVector;	// @synthesize=_currentKnowledgeVector
@property(retain, nonatomic) NSDictionary* globalIDIndexToLocalIDURIMap;	// @synthesize=_globalIDIndexToLocalIDURIMap
@property(retain, nonatomic) PFUbiquityImportContext* importContext;	// @synthesize=_importContext
@property(retain, nonatomic) NSManagedObject* sourceObject;	// @synthesize=_sourceObject
@property(retain, nonatomic) NSArray* transactionHistory;	// @synthesize=_transactionHistory
+(id)createArrayOfLogURLsForTransactionEntries:(id)transactionEntries;
+(id)createTransactionLogForTransactionEntry:(id)transactionEntry withError:(id*)error;
+(id)electAncestorKnowledgeVectorForKnowledgeVector:(id)knowledgeVector withExportingPeerID:(id)exportingPeerID fromPeerSnapshotCollection:(id)peerSnapshotCollection;
+(void)initialize;
+(int)resolvedTypeForConflictingLogType:(int)conflictingLogType andLatestTransactionEntry:(id)entry skipObject:(BOOL*)object;
-(id)init;
-(id)_newNormalizedSnapshot:(id)snapshot forObject:(id)object;
// declared property getter: -(id)conflictLogDate;
// declared property getter: -(id)conflictingLogContent;
// declared property getter: -(id)conflictingLogKnowledgeVector;
// declared property getter: -(id)conflictingLogTransactionNumber;
// declared property getter: -(int)conflictingLogTransactionType;
// declared property getter: -(id)conflictingObjectGlobalIDStr;
-(id)createSetOfManagedObjectIDsForGlobalIDsInRelationship:(id)relationship withValue:(id)value withGlobalIDToLocalIDURIMap:(id)localIDURIMap andTransactionLog:(id)log;
-(id)createSnapshotDictionaryForObjectWithEntry:(id)entry inTransactionLog:(id)transactionLog withError:(id*)error;
-(id)createSnapshotDictionaryFromLogEntry:(id)logEntry withError:(id*)error;
-(id)createSnapshotFromLogContent:(id)logContent withTransactionLog:(id)transactionLog;
-(id)createSnapshotFromManagedObject:(id)managedObject;
// declared property getter: -(id)currentKnowledgeVector;
-(void)dealloc;
-(id)description;
// declared property getter: -(id)globalIDIndexToLocalIDURIMap;
// declared property getter: -(id)importContext;
-(BOOL)resolveConflict:(id*)conflict;
-(BOOL)resolveMergeConflictForLogContent:(id)logContent previousSnapshot:(id)snapshot andAncestorSnapshot:(id)snapshot3 withOldVersion:(unsigned)oldVersion andNewVersion:(unsigned)version error:(id*)error;
// declared property setter: -(void)setConflictLogDate:(id)date;
// declared property setter: -(void)setConflictingLogContent:(id)content;
// declared property setter: -(void)setConflictingLogKnowledgeVector:(id)vector;
// declared property setter: -(void)setConflictingLogTransactionNumber:(id)number;
// declared property setter: -(void)setConflictingLogTransactionType:(int)type;
// declared property setter: -(void)setConflictingObjectGlobalIDStr:(id)str;
// declared property setter: -(void)setCurrentKnowledgeVector:(id)vector;
// declared property setter: -(void)setGlobalIDIndexToLocalIDURIMap:(id)localIDURIMap;
// declared property setter: -(void)setImportContext:(id)context;
// declared property setter: -(void)setSourceObject:(id)object;
// declared property setter: -(void)setTransactionHistory:(id)history;
// declared property getter: -(id)sourceObject;
// declared property getter: -(id)transactionHistory;
@end

