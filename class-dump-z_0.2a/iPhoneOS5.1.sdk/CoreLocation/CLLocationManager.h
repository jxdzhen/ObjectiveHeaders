/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/CoreLocation.framework/CoreLocation
 */

#import "CLLocationManager.h"
#import "CoreLocation-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSSet, CLHeading, NSString, CLLocation;
@protocol CLLocationManagerDelegate;

@interface CLLocationManager : XXUnknownSuperclass {
@private
	id _internal;
}
@property(readonly, assign, nonatomic) double bestAccuracy;
@property(assign, nonatomic) id<CLLocationManagerDelegate> delegate;
@property(assign, nonatomic) double desiredAccuracy;
@property(assign, nonatomic) double distanceFilter;
@property(readonly, assign, nonatomic) double expectedGpsUpdateInterval;
@property(readonly, assign, nonatomic) CLHeading* heading;
@property(readonly, assign, nonatomic) BOOL headingAvailable;
@property(assign, nonatomic) double headingFilter;
@property(assign, nonatomic) int headingOrientation;
@property(readonly, assign, nonatomic) CLClientRef internalClient;
@property(readonly, assign, nonatomic) CLLocation* location;
@property(readonly, assign, nonatomic) BOOL locationServicesApproved;
@property(readonly, assign, nonatomic) BOOL locationServicesAvailable;
@property(readonly, assign, nonatomic) BOOL locationServicesEnabled;
@property(assign, nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;
@property(readonly, assign, nonatomic) double maximumRegionMonitoringDistance;
@property(readonly, assign, nonatomic) NSSet* monitoredRegions;
@property(assign, nonatomic, getter=isPersistentMonitoringEnabled) BOOL persistentMonitoringEnabled;
@property(assign, nonatomic) BOOL privateMode;
@property(copy, nonatomic) NSString* purpose;
@property(assign, nonatomic) BOOL supportInfo;
+(int)_authorizationStatus;
+(int)_authorizationStatusForBundleIdentifier:(id)bundleIdentifier bundle:(id)bundle;
+(int)authorizationStatus;
+(int)authorizationStatusForBundle:(id)bundle;
+(int)authorizationStatusForBundleIdentifier:(id)bundleIdentifier;
+(BOOL)headingAvailable;
+(BOOL)locationServicesEnabled;
+(BOOL)locationServicesEnabled:(BOOL)enabled;
+(BOOL)regionMonitoringAvailable;
+(BOOL)regionMonitoringEnabled;
+(void)setAuthorizationStatus:(BOOL)status forBundle:(id)bundle;
+(void)setAuthorizationStatus:(BOOL)status forBundleIdentifier:(id)bundleIdentifier;
+(void)setDefaultEffectiveBundle:(id)bundle;
+(void)setDefaultEffectiveBundleIdentifier:(id)identifier;
+(void)setLocationServicesEnabled:(BOOL)enabled;
+(id)sharedManager;
+(BOOL)significantLocationChangeMonitoringAvailable;
-(id)init;
-(id)initWithEffectiveBundle:(id)effectiveBundle;
-(id)initWithEffectiveBundleIdentifier:(id)effectiveBundleIdentifier;
-(id)initWithEffectiveBundleIdentifier:(id)effectiveBundleIdentifier bundle:(id)bundle;
-(id)appsUsingLocation;
-(id)appsUsingLocationWithDetails;
// declared property getter: -(double)bestAccuracy;
-(void)dealloc;
// declared property getter: -(id)delegate;
// declared property getter: -(double)desiredAccuracy;
-(void)dismissHeadingCalibrationDisplay;
// declared property getter: -(double)distanceFilter;
// declared property getter: -(double)expectedGpsUpdateInterval;
// declared property getter: -(id)heading;
// declared property getter: -(BOOL)headingAvailable;
// declared property getter: -(double)headingFilter;
// declared property getter: -(int)headingOrientation;
-(void)historicLocationsFromDate:(id)date forInterval:(double)interval;
// declared property getter: -(CLClientRef)internalClient;
// declared property getter: -(BOOL)isLocationServicesPreferencesDialogEnabled;
// declared property getter: -(BOOL)isPersistentMonitoringEnabled;
// declared property getter: -(id)location;
// declared property getter: -(BOOL)locationServicesApproved;
// declared property getter: -(BOOL)locationServicesAvailable;
// declared property getter: -(BOOL)locationServicesEnabled;
// declared property getter: -(double)maximumRegionMonitoringDistance;
// declared property getter: -(id)monitoredRegions;
-(void)onClientEvent:(int)event supportInfo:(id)info;
-(void)onClientEventAuthStatus:(id)status;
-(void)onClientEventError:(id)error;
-(void)onClientEventHeading:(id)heading;
-(void)onClientEventHeadingCalibration:(id)calibration;
-(void)onClientEventHistoricLocation:(id)location;
-(void)onClientEventLocation:(id)location;
-(void)onClientEventLocationUnavailable:(id)unavailable;
-(void)onClientEventRegion:(id)region;
-(void)onClientEventRegionError:(id)error;
-(void)onClientEventRegionResponseDelayed:(id)delayed;
-(void)onClientEventRegionSetupCompleted:(id)completed;
// declared property getter: -(BOOL)privateMode;
// declared property getter: -(id)purpose;
-(void)registerAsLocationClient;
-(void)resetApps;
// declared property setter: -(void)setDelegate:(id)delegate;
// declared property setter: -(void)setDesiredAccuracy:(double)accuracy;
// declared property setter: -(void)setDistanceFilter:(double)filter;
// declared property setter: -(void)setHeadingFilter:(double)filter;
// declared property setter: -(void)setHeadingOrientation:(int)orientation;
// declared property setter: -(void)setLocationServicesPreferencesDialogEnabled:(BOOL)enabled;
// declared property setter: -(void)setPersistentMonitoringEnabled:(BOOL)enabled;
// declared property setter: -(void)setPrivateMode:(BOOL)mode;
// declared property setter: -(void)setPurpose:(id)purpose;
// declared property setter: -(void)setSupportInfo:(BOOL)info;
-(void)startAppStatusUpdates;
-(void)startMonitoringForRegion:(id)region;
-(void)startMonitoringForRegion:(id)region desiredAccuracy:(double)accuracy;
-(void)startMonitoringSignificantLocationChanges;
-(void)startTechStatusUpdates;
-(void)startUpdatingHeading;
-(void)startUpdatingLocation;
-(void)stopAppStatusUpdates;
-(void)stopMonitoringForRegion:(id)region;
-(void)stopMonitoringSignificantLocationChanges;
-(void)stopTechStatusUpdates;
-(void)stopUpdatingHeading;
-(void)stopUpdatingLocation;
// declared property getter: -(BOOL)supportInfo;
-(id)technologiesInUse;
@end

@interface CLLocationManager (CLLocationManagerAuthorization)
+(unsigned)activeLocationServiceTypesForLocationDictionary:(id)locationDictionary;
+(id)dateLocationLastUsedForLocationDictionary:(id)locationDictionary;
+(unsigned)entityClassesForLocationDictionary:(id)locationDictionary;
+(BOOL)isEntityAuthorizedForLocationDictionary:(id)locationDictionary;
+(BOOL)isLocationActiveForLocationDictionary:(id)locationDictionary;
+(BOOL)isStatusBarIconEnabledForLocationEntityClass:(unsigned)locationEntityClass;
+(unsigned)primaryEntityClassForLocationDictionary:(id)locationDictionary;
+(void)setEntityAuthorized:(BOOL)authorized forLocationDictionary:(id)locationDictionary;
+(void)setStatusBarIconEnabled:(BOOL)enabled forLocationEntityClass:(unsigned)locationEntityClass;
@end

