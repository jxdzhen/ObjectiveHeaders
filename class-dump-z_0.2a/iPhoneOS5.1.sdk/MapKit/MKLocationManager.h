/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/MapKit.framework/MapKit
 */

#import "CLLocationManagerDelegateInternal.h"
#import "PBRequesterDelegate.h"
#import "RadiosPreferencesDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class GEOLocation, MKTripRecorder, NSString, CLLocationManager, NSHashTable, CLLocation, NSMutableArray, NSTimer, GEOLocationShiftFunctionResponse, GEOLocationShiftFunctionRequest, CLHeading, RadiosPreferences, NSBundle;

@interface MKLocationManager : XXUnknownSuperclass <CLLocationManagerDelegateInternal, PBRequesterDelegate, RadiosPreferencesDelegate> {
	CLLocationManager* _clLocationManager;
	NSHashTable* _locationObservers;
	NSHashTable* _headingObservers;
	CLLocation* _lastLocation;
	double _lastLocationUpdateTime;
	BOOL _isLastLocationStale;
	BOOL _trackingLocation;
	BOOL _trackingHeading;
	BOOL _shouldThrottleHeading;
	NSString* _tripPath;
	NSMutableArray* _tripPaths;
	MKTripRecorder* _recorder;
	double _expectedTimeTillNextUpdate;
	double _calculatingLocationStartTime;
	double _userLocationCacheDuration;
	double _applicationResumeTime;
	double _applicationSuspendTime;
	double _headingUpdateTime;
	double _locationAccuracyUpdateTime;
	id _locationCorrecter;
	NSTimer* _coalesceTimer;
	double _lastLocationReportTime;
	BOOL _hasCheckedChinaShiftEnabled;
	BOOL _chinaShiftEnabled;
	GEOLocationShiftFunctionResponse* _shiftFunction;
	BOOL _isRequestingShiftFunction;
	CLLocation* _delayedLocationToShift;
	GEOLocationShiftFunctionRequest* _shiftRequest;
	int _shiftProvider;
	CLHeading* _throttledHeading;
	CLHeading* _heading;
	RadiosPreferences* _radiosPreferences;
	int _wiFiStatus;
	int _staleWiFiStatus;
	id _networkActivity;
	NSBundle* _effectiveBundle;
	int _authorizationStatus;
	BOOL _enabled;
	BOOL _corrected;
	BOOL _useCourseForHeading;
	BOOL _locationServicesPreferencesDialogEnabled;
}
@property(assign, nonatomic) BOOL chinaShiftEnabled;	// @synthesize=_chinaShiftEnabled
@property(assign, nonatomic, getter=isCorrected) BOOL corrected;	// @synthesize=_corrected
@property(readonly, assign, nonatomic) GEOLocation* currentLocation;
@property(retain, nonatomic) CLLocation* delayedLocationToShift;	// @synthesize=_delayedLocationToShift
@property(assign, nonatomic) double desiredAccuracy;
@property(retain, nonatomic) NSBundle* effectiveBundle;
@property(assign, nonatomic, getter=isEnabled) BOOL enabled;	// @synthesize=_enabled
@property(readonly, assign, nonatomic) double expectedGpsUpdateInterval;
@property(assign, nonatomic) double expectedTimeTillNextUpdate;	// @synthesize=_expectedTimeTillNextUpdate
@property(readonly, assign, nonatomic) GEOLocation* gridSnappedCurrentLocation;
@property(readonly, assign, nonatomic) BOOL hasLocation;
@property(readonly, assign, nonatomic) CLHeading* heading;	// @synthesize=_heading
@property(assign, nonatomic) int headingOrientation;
@property(readonly, assign, nonatomic) double headingUpdateTimeInterval;
@property(readonly, assign, nonatomic) BOOL isAirplaneModeBlockingLocation;
@property(readonly, assign, nonatomic) BOOL isHeadingServicesAvailable;
@property(readonly, assign, nonatomic) BOOL isLastLocationStale;	// @synthesize=_isLastLocationStale
@property(readonly, assign, nonatomic) BOOL isLocationServicesApproved;
@property(readonly, assign, nonatomic) BOOL isLocationServicesAvailable;
@property(readonly, assign, nonatomic) BOOL isLocationServicesDenied;
@property(readonly, assign, nonatomic) BOOL isLocationServicesEnabled;
@property(readonly, assign, nonatomic) BOOL isLocationServicesPossiblyAvailable;
@property(readonly, assign, nonatomic) BOOL isLocationServicesRestricted;
@property(readonly, assign, nonatomic) BOOL isWiFiEnabled;
@property(readonly, assign, nonatomic) CLLocation* lastLocation;
@property(readonly, assign, nonatomic) int lastLocationSource;
@property(copy, nonatomic) id locationCorrecter;	// @synthesize=_locationCorrecter
@property(assign, nonatomic, getter=isLocationServicesPreferencesDialogEnabled) BOOL locationServicesPreferencesDialogEnabled;
@property(copy, nonatomic) id networkActivity;	// @synthesize=_networkActivity
@property(readonly, assign, nonatomic, getter=isPlayingTrip) BOOL playingTrip;
@property(readonly, assign, nonatomic, getter=isRecordingTrip) BOOL recordingTrip;
@property(retain, nonatomic) GEOLocationShiftFunctionResponse* shiftFunction;	// @synthesize=_shiftFunction
@property(retain, nonatomic) GEOLocationShiftFunctionRequest* shiftRequest;	// @synthesize=_shiftRequest
@property(assign, nonatomic) BOOL shouldThrottleHeading;	// @synthesize=_shouldThrottleHeading
@property(retain, nonatomic) CLHeading* throttledHeading;	// @synthesize=_throttledHeading
@property(retain, nonatomic) NSString* tripPath;	// @synthesize=_tripPath
@property(retain, nonatomic) NSMutableArray* tripPaths;	// @synthesize=_tripPaths
@property(assign, nonatomic) BOOL useCourseForHeading;	// @synthesize=_useCourseForHeading
@property(assign, nonatomic) double userLocationCacheDuration;	// @synthesize=_userLocationCacheDuration
+(id)sharedLocationManager;
-(id)init;
-(id)_applyChinaLocationShift:(id)shift;
-(int)_authorizationStatus;
-(void)_countryProvidersDidChange:(id)_countryProviders;
-(void)_createCLLocationManager;
-(BOOL)_isTimeToResetOnResume;
-(id)_radiosPreferences;
-(void)_reportHeadingFailureWithError:(id)error;
-(void)_reportHeadingSuccess;
-(void)_reportLocationFailureWithError:(id)error;
-(void)_reportLocationReset;
-(void)_reportLocationStatus:(SEL)status;
-(void)_reportLocationSuccess;
-(void)_setTrackingHeading:(BOOL)heading;
-(void)_setTrackingLocation:(BOOL)location;
-(void)_startCoalescingUpdates:(int)updates;
-(void)_stopCoalescingUpdates;
-(void)_updateAuthorizationStatus;
-(void)_updateWifiEnabled;
-(void)airplaneModeChanged;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationWillResignActive:(id)application;
// declared property getter: -(BOOL)chinaShiftEnabled;
-(id)clLocationManager;
// declared property getter: -(id)currentLocation;
-(void)dampenGPSLocationAccuracy:(id*)accuracy oldLocationSource:(int)source;
// declared property getter: -(id)delayedLocationToShift;
// declared property getter: -(double)desiredAccuracy;
-(void)dismissHeadingCalibrationDisplay;
-(BOOL)displayCoreLocationStats;
// declared property getter: -(id)effectiveBundle;
// declared property getter: -(double)expectedGpsUpdateInterval;
// declared property getter: -(double)expectedTimeTillNextUpdate;
// declared property getter: -(id)gridSnappedCurrentLocation;
// declared property getter: -(BOOL)hasLocation;
// declared property getter: -(id)heading;
// declared property getter: -(int)headingOrientation;
// declared property getter: -(double)headingUpdateTimeInterval;
// declared property getter: -(BOOL)isAirplaneModeBlockingLocation;
// declared property getter: -(BOOL)isCorrected;
// declared property getter: -(BOOL)isEnabled;
// declared property getter: -(BOOL)isHeadingServicesAvailable;
// declared property getter: -(BOOL)isLastLocationStale;
// declared property getter: -(BOOL)isLocationServicesApproved;
// declared property getter: -(BOOL)isLocationServicesAvailable;
// declared property getter: -(BOOL)isLocationServicesDenied;
// declared property getter: -(BOOL)isLocationServicesEnabled;
// declared property getter: -(BOOL)isLocationServicesPossiblyAvailable;
-(BOOL)isLocationServicesPossiblyAvailable:(id*)available;
// declared property getter: -(BOOL)isLocationServicesPreferencesDialogEnabled;
// declared property getter: -(BOOL)isLocationServicesRestricted;
// declared property getter: -(BOOL)isPlayingTrip;
// declared property getter: -(BOOL)isRecordingTrip;
// declared property getter: -(BOOL)isWiFiEnabled;
// declared property getter: -(id)lastLocation;
// declared property getter: -(int)lastLocationSource;
-(void)listenForLocationUpdates:(id)locationUpdates;
-(void)loadRecording:(id)recording;
-(void)loadRecordings:(id)recordings;
// declared property getter: -(id)locationCorrecter;
-(void)locationManager:(id)manager didChangeAuthorizationStatus:(int)status;
-(void)locationManager:(id)manager didFailWithError:(id)error;
-(void)locationManager:(id)manager didUpdateHeading:(id)heading;
-(void)locationManager:(id)manager didUpdateToLocation:(id)location fromLocation:(id)location3;
-(BOOL)locationManagerShouldDisplayHeadingCalibration:(id)locationManager;
// declared property getter: -(id)networkActivity;
-(void)reportCoalescedUpdated;
-(void)repostLastKnownLocation;
-(void)requestShiftFunctionForLocation:(id)location wrap:(BOOL)wrap;
-(void)reset;
// declared property setter: -(void)setChinaShiftEnabled:(BOOL)enabled;
-(void)setClLocationManager:(id)manager;
-(void)setCoalesceTimer:(id)timer;
// declared property setter: -(void)setCorrected:(BOOL)corrected;
// declared property setter: -(void)setDelayedLocationToShift:(id)shift;
// declared property setter: -(void)setDesiredAccuracy:(double)accuracy;
// declared property setter: -(void)setEffectiveBundle:(id)bundle;
// declared property setter: -(void)setEnabled:(BOOL)enabled;
// declared property setter: -(void)setExpectedTimeTillNextUpdate:(double)update;
-(void)setHeading:(id)heading;
// declared property setter: -(void)setHeadingOrientation:(int)orientation;
-(void)setLastLocation:(id)location;
// declared property setter: -(void)setLocationCorrecter:(id)correcter;
// declared property setter: -(void)setLocationServicesPreferencesDialogEnabled:(BOOL)enabled;
// declared property setter: -(void)setNetworkActivity:(id)activity;
// declared property setter: -(void)setShiftFunction:(id)function;
// declared property setter: -(void)setShiftRequest:(id)request;
// declared property setter: -(void)setShouldThrottleHeading:(BOOL)throttleHeading;
// declared property setter: -(void)setThrottledHeading:(id)heading;
// declared property setter: -(void)setTripPath:(id)path;
// declared property setter: -(void)setTripPaths:(id)paths;
// declared property setter: -(void)setUseCourseForHeading:(BOOL)heading;
// declared property setter: -(void)setUserLocationCacheDuration:(double)duration;
// declared property getter: -(id)shiftFunction;
// declared property getter: -(id)shiftRequest;
-(BOOL)shouldCoalesceUpdates;
-(BOOL)shouldStartCoalescingLocation:(id)location;
-(BOOL)shouldStopCoalescingLocation:(id)location;
// declared property getter: -(BOOL)shouldThrottleHeading;
-(void)startHeadingUpdateWithObserver:(id)observer;
-(void)startLocationUpdateWithObserver:(id)observer;
-(void)startRecording;
-(void)stopHeadingUpdateWithObserver:(id)observer;
-(void)stopLocationUpdateWithObserver:(id)observer;
-(void)stopRecording;
// declared property getter: -(id)throttledHeading;
// declared property getter: -(id)tripPath;
// declared property getter: -(id)tripPaths;
-(void)tripPlayerDidEnd:(id)tripPlayer;
-(void)unloadRecording;
// declared property getter: -(BOOL)useCourseForHeading;
// declared property getter: -(double)userLocationCacheDuration;
-(void)wiFiStatusChanged:(id)changed;
-(void)writeCoreLocationLog;
-(void)writeRecording;
-(void)writeRecordingToPath:(id)path;
@end

