/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "NSCoding.h"
#import "UIResponder.h"
#import "UIAppearance.h"
#import "UIAppearanceContainer.h"
#import "UITextEffectsOrdering.h"
#import "UIView.h"

@class CALayer, NSArray, NSString, NSMutableArray, UIViewController;

@interface UIView : UIResponder <NSCoding, UIAppearance, UIAppearanceContainer> {
@private
	CALayer* _layer;
	id _tapInfo;
	id _gestureInfo;
	NSMutableArray* _gestureRecognizers;
	NSArray* _subviewCache;
	float _charge;
	int _tag;
	UIViewController* _viewDelegate;
	NSString* _backgroundColorSystemColorName;
	struct {
		unsigned userInteractionDisabled : 1;
		unsigned implementsDrawRect : 1;
		unsigned implementsDidScroll : 1;
		unsigned implementsMouseTracking : 1;
		unsigned hasBackgroundColor : 1;
		unsigned isOpaque : 1;
		unsigned becomeFirstResponderWhenCapable : 1;
		unsigned interceptMouseEvent : 1;
		unsigned deallocating : 1;
		unsigned debugFlash : 1;
		unsigned debugSkippedSetNeedsDisplay : 1;
		unsigned debugScheduledDisplayIsRequired : 1;
		unsigned isInAWindow : 1;
		unsigned isAncestorOfFirstResponder : 1;
		unsigned dontAutoresizeSubviews : 1;
		unsigned autoresizeMask : 6;
		unsigned patternBackground : 1;
		unsigned fixedBackgroundPattern : 1;
		unsigned dontAnimate : 1;
		unsigned superLayerIsView : 1;
		unsigned layerKitPatternDrawing : 1;
		unsigned multipleTouchEnabled : 1;
		unsigned exclusiveTouch : 1;
		unsigned hasViewController : 1;
		unsigned needsDidAppearOrDisappear : 1;
		unsigned gesturesEnabled : 1;
		unsigned deliversTouchesForGesturesToSuperview : 1;
		unsigned chargeEnabled : 1;
		unsigned skipsSubviewEnumeration : 1;
		unsigned needsDisplayOnBoundsChange : 1;
		unsigned hasTiledLayer : 1;
		unsigned hasLargeContent : 1;
		unsigned isInAnimatedVCTransition : 1;
		unsigned traversalMark : 1;
		unsigned appearanceIsInvalid : 1;
		unsigned monitorsSubtree : 1;
	} _viewFlags;
}
@property(readonly, assign, nonatomic) CALayer* layer;	// @synthesize=_layer
@property(assign, nonatomic) int tag;	// @synthesize=_tag
@property(assign, nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
+(void)_performCustomizableAppearanceModifications:(id)modifications;
+(id)appearance;
+(id)appearanceWhenContainedIn:(Class)anIn;
+(Class)layerClass;
-(id)init;
-(id)initWithCoder:(id)coder;
-(id)initWithFrame:(CGRect)frame;
-(id)_appearanceContainer;
-(BOOL)_appearanceIsInvalid;
-(CGColorRef)_backgroundCGColor;
-(id)_backgroundColorSystemColorName;
-(BOOL)_becomeFirstResponderWhenPossible;
-(void)_clearBecomeFirstResponderWhenCapable;
-(void)_createLayerWithFrame:(CGRect)frame;
-(BOOL)_hasOpaqueBackground;
-(void)_invalidateAppearanceForSubviewsOfClass:(Class)aClass;
-(BOOL)_isChargeEnabled;
-(id)_nextKeyResponder;
-(id)_previousKeyResponder;
-(void)_setAppearanceIsInvalid:(BOOL)invalid;
-(void)_setBackgroundColorSystemColorName:(id)name;
-(void)_setChargeEnabled:(BOOL)enabled;
-(BOOL)_shouldAnimatePropertyWithKey:(id)key;
-(int)_topToBottomLeftToRightViewCompare:(id)rightViewCompare;
-(BOOL)canHandleSwipes;
-(BOOL)cancelMouseTracking;
-(BOOL)cancelTouchTracking;
-(float)charge;
-(void)dealloc;
-(void)encodeWithCoder:(id)coder;
// declared property getter: -(BOOL)isUserInteractionEnabled;
// declared property getter: -(id)layer;
-(id)nextResponder;
-(void)setCharge:(float)charge;
// declared property setter: -(void)setTag:(int)tag;
-(void)setTapDelegate:(id)delegate;
// declared property setter: -(void)setUserInteractionEnabled:(BOOL)enabled;
-(void)startHeartbeat:(SEL)heartbeat inRunLoopMode:(id)runLoopMode;
-(void)stopHeartbeat:(SEL)heartbeat;
-(int)swipe:(int)swipe withEvent:(GSEventRef)event;
// declared property getter: -(int)tag;
-(id)tapDelegate;
@end

@interface UIView (Geometry)
-(CGPoint)_convertOffset:(CGPoint)offset fromView:(id)view;
-(CGPoint)_convertOffset:(CGPoint)offset toView:(id)view;
-(BOOL)_needsLayoutOnAnimatedBoundsChangeForNewBounds:(CGRect)newBounds;
-(BOOL)_needsLayoutOnAnimatedFrameChangeForNewFrame:(CGRect)newFrame;
-(void)_resizeWithOldSuperviewSize:(CGSize)oldSuperviewSize;
-(void)_resizeWithOldSuperviewSize_ancient:(CGSize)oldSuperviewSize_ancient;
-(BOOL)autoresizesSubviews;
-(unsigned)autoresizingMask;
-(CGRect)bounds;
-(CGPoint)center;
-(CGPoint)convertPoint:(CGPoint)point fromView:(id)view;
-(CGPoint)convertPoint:(CGPoint)point toView:(id)view;
-(CGRect)convertRect:(CGRect)rect fromView:(id)view;
-(CGRect)convertRect:(CGRect)rect toView:(id)view;
-(CGSize)convertSize:(CGSize)size fromView:(id)view;
-(CGSize)convertSize:(CGSize)size toView:(id)view;
-(CGRect)extent;
-(CGRect)frame;
-(CGRect)hitRect;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(BOOL)isExclusiveTouch;
-(BOOL)isMultipleTouchEnabled;
-(CGPoint)origin;
-(BOOL)pointInside:(CGPoint)inside withEvent:(id)event;
-(CGPoint)position;
-(void)resizeSubviewsWithOldSize:(CGSize)oldSize;
-(void)resizeWithOldSuperviewSize:(CGSize)oldSuperviewSize;
-(void)setAutoresizesSubviews:(BOOL)subviews;
-(void)setAutoresizingMask:(unsigned)mask;
-(void)setBounds:(CGRect)bounds;
-(void)setCenter:(CGPoint)center;
-(void)setExclusiveTouch:(BOOL)touch;
-(void)setFrame:(CGRect)frame;
-(void)setFrame:(CGRect)frame forFields:(int)fields;
-(void)setMultipleTouchEnabled:(BOOL)enabled;
-(void)setOrigin:(CGPoint)origin;
-(void)setPosition:(CGPoint)position;
-(void)setRotationBy:(float)by;
-(void)setTransform:(CGAffineTransform)transform;
-(CGSize)sizeThatFits:(CGSize)fits;
-(void)sizeToFit;
-(CGAffineTransform)transform;
@end

@interface UIView (Hierarchy)
-(BOOL)_associatedViewControllerForwardsAppearanceCallbacks:(id)callbacks performHierarchyCheck:(BOOL)check isRoot:(BOOL)root;
-(id)_backgroundColor;
-(void)_didRemoveSubview:(id)subview;
-(id)_findFirstSubviewWantingToBecomeFirstResponder;
-(void)_makeSubtreePerformSelector:(SEL)selector withObject:(id)object;
-(void)_makeSubtreePerformSelector:(SEL)selector withObject:(id)object withObject:(id)object3 copySublayers:(BOOL)sublayers;
-(void)_movedToFront;
-(void)_postMovedFromSuperview:(id)superview;
-(void)_promoteDescendantToFirstResponderIfNecessary;
-(void)_removeFirstResponderFromSubtree;
-(void)_setBackgroundColor:(id)color;
-(void)_willMoveToWindow:(id)window;
-(void)_willMoveToWindow:(id)window withAncestorView:(id)ancestorView;
-(void)addSubview:(id)subview;
-(void)bringSubviewToFront:(id)front;
-(BOOL)containsView:(id)view;
-(void)deferredBecomeFirstResponder;
-(void)didAddSubview:(id)subview;
-(void)didMoveToSuperview;
-(void)didMoveToWindow;
-(void)exchangeSubviewAtIndex:(int)index withSubviewAtIndex:(int)index2;
-(void)insertSubview:(id)subview above:(id)above;
-(void)insertSubview:(id)subview aboveSubview:(id)subview2;
-(void)insertSubview:(id)subview atIndex:(int)index;
-(void)insertSubview:(id)subview below:(id)below;
-(void)insertSubview:(id)subview belowSubview:(id)subview2;
-(BOOL)isDescendantOfView:(id)view;
-(void)layoutBelowIfNeeded;
-(void)layoutIfNeeded;
-(void)layoutSubviews;
-(void)movedFromSuperview:(id)superview;
-(void)movedFromWindow:(id)window;
-(void)movedToSuperview:(id)superview;
-(void)movedToWindow:(id)window;
-(void)removeFromSuperview;
-(void)sendSubviewToBack:(id)back;
-(void)setNeedsLayout;
-(id)subviews;
-(id)superview;
-(void)viewDidMoveToSuperview;
-(void)viewWillMoveToSuperview:(id)view;
-(id)viewWithTag:(int)tag;
-(void)willMoveToSuperview:(id)superview;
-(void)willMoveToWindow:(id)window;
-(void)willRemoveSubview:(id)subview;
-(id)window;
@end

@interface UIView (Rendering)
+(void)flush;
+(void)throttledFlush;
-(void*)_createIOSurfaceWithPadding:(UIEdgeInsets)padding;
-(void)_enableLayerKitPatternDrawing:(BOOL)drawing;
-(void)_resetContentStretch;
-(void)_setContentStretchInPixels:(CGRect)pixels forContentSize:(CGSize)contentSize shouldTile:(BOOL)tile;
-(void)_setShouldRasterize:(BOOL)_set;
-(float)alpha;
-(id)backgroundColor;
-(BOOL)clearsContextBeforeDrawing;
-(BOOL)clipsToBounds;
-(int)contentMode;
-(float)contentScaleFactor;
-(CGRect)contentStretch;
-(void)drawRect:(CGRect)rect;
-(void)forceDisplayIfNeeded;
-(BOOL)isHidden;
-(BOOL)isHiddenOrHasHiddenAncestor;
-(BOOL)isOpaque;
-(BOOL)needsDisplay;
-(BOOL)needsDisplayOnBoundsChange;
-(CGImageRef)newSnapshotWithRect:(CGRect)rect;
-(void)recursivelyForceDisplayIfNeeded;
-(void)setAlpha:(float)alpha;
-(void)setBackgroundColor:(id)color;
-(void)setClearsContext:(BOOL)context;
-(void)setClearsContextBeforeDrawing:(BOOL)drawing;
-(void)setClipsToBounds:(BOOL)bounds;
-(void)setContentMode:(int)mode;
-(void)setContentScaleFactor:(float)factor;
-(void)setContentStretch:(CGRect)stretch;
-(void)setContentsPosition:(int)position;
-(void)setFixedBackgroundPattern:(BOOL)pattern;
-(void)setHidden:(BOOL)hidden;
-(void)setNeedsDisplay;
-(void)setNeedsDisplayInRect:(CGRect)rect;
-(void)setNeedsDisplayOnBoundsChange:(BOOL)change;
-(void)setOpaque:(BOOL)opaque;
-(CGRect)visibleBounds;
@end

@interface UIView (Animation)
+(float)_currentAnimationDuration;
+(void)_inheritAnimationParameters;
+(BOOL)_isInAnimationBlock;
+(void)_performWithoutAnimation:(id)animation;
+(void)_setAnimationAttributes:(id)attributes;
+(void)_setAnimationFilter:(int)filter forView:(id)view;
+(void)_setAnimationFilterValue:(float)value;
+(BOOL)areAnimationsEnabled;
+(void)beginAnimations:(id)animations;
+(void)beginAnimations:(id)animations context:(void*)context;
+(void)commitAnimations;
+(void)disableAnimation;
+(void)enableAnimation;
+(void)endAnimations;
+(void)setAnimationAutoreverses:(BOOL)autoreverses;
+(void)setAnimationBeginsFromCurrentState:(BOOL)currentState;
+(void)setAnimationCurve:(int)curve;
+(void)setAnimationDelay:(double)delay;
+(void)setAnimationDelegate:(id)delegate;
+(void)setAnimationDidStopSelector:(SEL)stopSelector;
+(void)setAnimationDuration:(double)duration;
+(void)setAnimationFrameInterval:(double)interval;
+(void)setAnimationFromCurrentState:(BOOL)currentState;
+(void)setAnimationPosition:(CGPoint)position;
+(void)setAnimationRepeatAutoreverses:(BOOL)autoreverses;
+(void)setAnimationRepeatCount:(float)count;
+(void)setAnimationRoundsToInteger:(BOOL)integer;
+(void)setAnimationStartDate:(id)date;
+(void)setAnimationStartTime:(double)time;
+(void)setAnimationTransition:(int)transition forView:(id)view cache:(BOOL)cache;
+(void)setAnimationWillStartSelector:(SEL)startSelector;
+(void)setAnimationsEnabled:(BOOL)enabled;
-(void)_clearAnimationFilters;
-(BOOL)_isInTransitionBlock;
-(void)_removeAllAnimations:(BOOL)animations;
-(void)addAnimation:(id)animation forKey:(id)key;
@end

@interface UIView (UIViewAnimationWithBlocks)
+(void)_animateWithDuration:(double)duration delay:(double)delay options:(unsigned)options animations:(id)animations start:(id)start completion:(id)completion;
+(void)_setupAnimationWithDuration:(double)duration delay:(double)delay view:(id)view options:(unsigned)options animations:(id)animations start:(id)start completion:(id)completion;
+(void)animateWithDuration:(double)duration animations:(id)animations;
+(void)animateWithDuration:(double)duration animations:(id)animations completion:(id)completion;
+(void)animateWithDuration:(double)duration delay:(double)delay options:(unsigned)options animations:(id)animations completion:(id)completion;
+(void)transitionFromView:(id)view toView:(id)view2 duration:(double)duration options:(unsigned)options completion:(id)completion;
+(void)transitionWithView:(id)view duration:(double)duration options:(unsigned)options animations:(id)animations completion:(id)completion;
@end

@interface UIView (Deprecated)
+(void)setAnimationTransition:(int)transition forView:(id)view;
-(id)initWithSize:(CGSize)size;
-(CGImageRef)createSnapshotWithRect:(CGRect)rect;
-(CGPoint)frameOrigin;
-(id)hitTest:(CGPoint)test forEvent:(GSEventRef)event;
-(BOOL)isEnabled;
-(BOOL)pointInside:(CGPoint)inside forEvent:(GSEventRef)event;
-(void)setClipsSubviews:(BOOL)subviews;
-(void)setEnabled:(BOOL)enabled;
-(void)setFrameOrigin:(CGPoint)origin;
-(void)setSize:(CGSize)size;
-(CGSize)size;
@end

@interface UIView (Internal)
@property(retain, nonatomic, getter=_backgroundColorSystemColorName, setter=_setBackgroundColorSystemColorName:) NSString* backgroundColorSystemColorName;
@property(assign, nonatomic, getter=isInAnimatedVCTransition) BOOL inAnimatedVCTransition;
@property(assign, nonatomic, getter=_monitorsSubtree, setter=_setMonitorsSubtree:) BOOL monitorsSubtree;
@property(assign, nonatomic) BOOL skipsSubviewEnumeration;
@property(assign, nonatomic, getter=_viewDelegate, setter=_setViewDelegate:) UIViewController* viewDelegate;
@property(assign, nonatomic) BOOL viewTraversalMark;
+(void)_beginDisablingPromoteDescendantToFirstResponder;
+(void)_endDisablingPromoteDescendantToFirstResponder;
+(BOOL)_invalidatesViewUponCreation;
+(void)_setInvalidatesViewUponCreation:(BOOL)creation;
+(void)_setIsResponderAncestorOfFirstResponder:(BOOL)firstResponder startingAtFirstResponder:(id)firstResponder2;
+(id)_topMostView:(id)view;
+(void)_transitionFromView:(id)view toView:(id)view2 duration:(double)duration options:(unsigned)options animations:(id)animations completion:(id)completion;
-(void)_addSubview:(id)subview positioned:(int)positioned relativeTo:(id)to;
-(BOOL)_alwaysHandleInteractionEvents;
-(BOOL)_alwaysHandleScrollerMouseEvent;
-(BOOL)_animationIsPaused;
-(BOOL)_appliesExclusiveTouchToSubviewTree;
-(BOOL)_canDrawContent;
-(BOOL)_canHandleStatusBarTouchAtLocation:(CGPoint)location;
-(BOOL)_cancelTapDelegateTracking;
-(void)_clearBecomeFirstResponderWhenCapableOnSubtree;
-(void)_collectKeyViews:(id)views;
-(BOOL)_containedInAbsoluteResponderChain;
-(id)_containingScrollView;
-(BOOL)_controlsOwnScaleFactor;
-(void*)_createIOSurfaceFromRect:(CGRect)rect padding:(UIEdgeInsets)padding;
-(void)_descendent:(id)descendent didMoveFromSuperview:(id)superview toSuperview:(id)superview3;
-(void)_descendent:(id)descendent willMoveFromSuperview:(id)superview toSuperview:(id)superview3;
-(void)_didMoveFromWindow:(id)window toWindow:(id)window2;
-(void)_didScroll;
-(void)_encodeBackgroundColorWithCoder:(id)coder;
-(void)_encodeFrameWithCoder:(id)coder;
-(id)_firstResponder;
-(id)_gestureRecognizers;
-(id)_gestureTargetHitTest:(CGPoint)test withEvent:(id)event;
-(id)_interceptEvent:(id)event;
-(id)_interceptMouseEvent:(GSEventRef)event;
-(void)_invalidateLayerContents;
-(void)_invalidateSubviewCache;
-(BOOL)_isAncestorOfFirstResponder;
-(BOOL)_isInAWindow;
-(BOOL)_isInExclusiveTouchSubviewTree;
-(BOOL)_isRootForKeyResponderCycle;
-(id)_layer;
// declared property getter: -(BOOL)_monitorsSubtree;
-(void)_mouseDown:(GSEventRef)down;
-(void)_mouseDragged:(GSEventRef)dragged;
-(void)_mouseUp:(GSEventRef)up;
-(void)_populateArchivedSubviews:(id)subviews;
-(void)_renderSnapshotWithRect:(CGRect)rect inContext:(CGContextRef)context;
-(id)_rootForKeyResponderCycle;
-(id)_scroller;
-(void)_setBackgroundCGColor:(CGColorRef)color;
-(void)_setBackgroundCGColor:(CGColorRef)color withSystemColorName:(id)systemColorName;
-(void)_setContentImage:(id)image;
-(void)_setContentsTransform:(CGAffineTransform)transform;
-(void)_setInterceptMouseEvent:(BOOL)event;
-(void)_setIsAncestorOfFirstResponder:(BOOL)firstResponder;
// declared property setter: -(void)_setMonitorsSubtree:(BOOL)subtree;
// declared property setter: -(void)_setViewDelegate:(id)delegate;
-(BOOL)_shouldApplyExclusiveTouch;
-(BOOL)_shouldResignFirstResponderWithInteractionDisabled;
-(BOOL)_shouldTryPromoteDescendantToFirstResponder;
-(BOOL)_subclassImplementsDrawRect;
-(void)_subscribeToScrollNotificationsIfNecessary:(id)scrollNotificationsIfNecessary;
-(void)_unsubscribeToScrollNotificationsIfNecessary:(id)scrollNotificationsIfNecessary;
-(void)_updateNeedsDisplayOnBoundsChange;
-(BOOL)_usesDifferentHitTestForGestures;
-(id)_viewControllerForAncestor;
// declared property getter: -(id)_viewDelegate;
-(id)_viewIndexPath;
-(void)_webCustomViewWasAddedAsSubviewOfView:(id)view;
-(void)_webCustomViewWasRemovedFromSuperview:(id)superview;
-(void)_webCustomViewWillBeRemovedFromSuperview;
// declared property getter: -(BOOL)isInAnimatedVCTransition;
// declared property setter: -(void)setInAnimatedVCTransition:(BOOL)animatedVCTransition;
// declared property setter: -(void)setSkipsSubviewEnumeration:(BOOL)enumeration;
// declared property setter: -(void)setViewTraversalMark:(BOOL)mark;
// declared property getter: -(BOOL)skipsSubviewEnumeration;
// declared property getter: -(BOOL)viewTraversalMark;
@end

@interface UIView (UIViewGestures)
@property(assign, nonatomic) BOOL deliversTouchesForGesturesToSuperview;
@property(assign, nonatomic) BOOL gesturesEnabled;
-(void)addGestureRecognizer:(id)recognizer;
// declared property getter: -(BOOL)deliversTouchesForGesturesToSuperview;
-(id)gestureRecognizers;
// declared property getter: -(BOOL)gesturesEnabled;
-(void)removeAllGestureRecognizers;
-(void)removeGestureRecognizer:(id)recognizer;
// declared property setter: -(void)setDeliversTouchesForGesturesToSuperview:(BOOL)superview;
-(void)setGestureRecognizers:(id)recognizers;
// declared property setter: -(void)setGesturesEnabled:(BOOL)enabled;
@end

@interface UIView (CALayerDelegate)
-(id)actionForLayer:(id)layer forKey:(id)key;
-(void)drawLayer:(id)layer inContext:(CGContextRef)context;
-(void)layoutSublayersOfLayer:(id)layer;
-(void)setValue:(id)value forKey:(id)key;
@end

@interface UIView (UIDebugging)
-(id)_autoresizingDescription;
-(id)_superDescription;
-(id)description;
-(id)recursiveDescription;
@end

@interface UIView (SyntheticEvents)
-(id)_scriptingInfo;
-(id)scriptingInfoWithChildren;
@end

@interface UIView (UIViewStyleAdditions)
+(id)_tintColorForStyle:(int)style;
-(int)_containerStyle;
-(int)_style;
@end

@interface UIView (FastModeAdditions)
-(id)_containerLayoutViewForFastMode;
-(void)_reconsiderFastModeGivenScrollViewInNotification:(id)notification;
-(void)_setContainerLayoutViewForFastMode:(id)fastMode;
-(BOOL)_wantsCornerSnapshotsForScrolling;
@end

@interface UIView (ClassicAdditions)
-(BOOL)useBlockyMagnificationInClassic;
@end

@interface UIView (UIAutoscrollAdditions)
-(id)_enclosingScrollableScrollerIncludingSelf;
-(id)_enclosingScrollerIncludingSelf;
-(BOOL)_isScrollingEnabled;
@end

@interface UIView (UITextField)
-(BOOL)endEditing:(BOOL)editing;
@end

@interface UIView (UIResponderAdditions)
-(id)_window;
@end

@interface UIView (Gestures)
-(BOOL)_canStartRotationFromEvent:(GSEventRef)event;
-(BOOL)_canStartZoomFromEvent:(GSEventRef)event;
-(void)_gestureChanged:(int)changed event:(GSEventRef)event;
-(float)_internalScaleForScale:(float)scale;
-(BOOL)_isRubberBanding;
-(float)_minimumZoomScaleDelta;
-(void)_resetZoomingWithEvent:(GSEventRef)event;
-(void)_rotateFromEvent:(GSEventRef)event;
-(void)_rotateToDegrees:(float)degrees duration:(float)duration event:(GSEventRef)event;
-(float)_rubberBandScaleForScale:(float)scale;
-(void)_rubberbandZoomToEvent:(GSEventRef)event scale:(float)scale;
-(float)_scaleForInternalScale:(float)internalScale;
-(CGPoint)_scrollPointForPoint:(CGPoint)point scale:(float)scale constrain:(BOOL)constrain snapToEdge:(BOOL)edge;
-(void)_setGestureInfoZoomScale:(float)scale;
-(void)_setRotationAnimationProgress:(id)progress;
-(void)_setZoomAnimationProgress:(id)progress;
-(void)_setZoomScale:(float)scale duration:(double)duration;
-(void)_startGesture:(int)gesture event:(GSEventRef)event;
-(BOOL)_startRotationFromEvent:(GSEventRef)event;
-(BOOL)_startZoomFromEvent:(GSEventRef)event;
-(void)_stopGesture:(int)gesture event:(GSEventRef)event;
-(void)_stopRotationFromEvent:(GSEventRef)event;
-(void)_stopZoomFromEvent:(GSEventRef)event;
-(float)_zoomScale;
-(void)_zoomToEvent:(GSEventRef)event scale:(float)scale animate:(BOOL)animate constrainScrollPoint:(BOOL)point;
-(void)_zoomToScale:(float)scale event:(GSEventRef)event;
-(BOOL)_zoomWithEvent:(GSEventRef)event;
-(void)animator:(id)animator startAnimation:(id)animation;
-(void)animator:(id)animator stopAnimation:(id)animation;
-(BOOL)canHandleGestures;
-(int)enabledGestures;
-(void)gestureChanged:(GSEventRef)changed;
-(id)gestureDelegate;
-(void)gestureEnded:(GSEventRef)ended;
-(void)gestureStarted:(GSEventRef)started;
-(void)rotateToDegrees:(float)degrees;
-(float)rotationDegrees;
-(void)setEnabledGestures:(int)gestures;
-(void)setGestureDelegate:(id)delegate;
-(void)setRotationDegrees:(float)degrees duration:(double)duration;
-(void)setValue:(id)value forGestureAttribute:(int)gestureAttribute;
-(int)stateForGestureType:(int)gestureType;
-(id)valueForGestureAttribute:(int)gestureAttribute;
-(void)zoomToScale:(float)scale;
@end

@interface UIView (Gestures_Internal)
-(void)_animateToScrollPoint:(CGPoint)scrollPoint;
-(void)_animateZoomFailureToWindowPoint:(CGPoint)windowPoint scale:(float)scale duration:(float)duration;
-(CGPoint)_constrainedScrollPoint:(CGPoint)point contentSize:(CGSize)size;
-(void)_gestureEnded:(GSEventRef)ended;
-(id)_gestureInfo;
-(CGSize)_scrollerContentSize;
-(float)_zoomAnimationDurationForScale:(float)scale;
-(float)_zoomAnimationProgress;
-(void)_zoomToScrollPoint:(CGPoint)scrollPoint scale:(float)scale duration:(float)duration event:(GSEventRef)event;
-(void)_zoomToWindowPoint:(CGPoint)windowPoint scale:(float)scale duration:(float)duration constrainScrollPoint:(BOOL)point event:(GSEventRef)event;
@end

@interface UIView (UIAutocorrectInlinePrompt)
-(void)reduceWidth:(float)width;
@end

@interface UIView (UITouchInternalCompatibility)
-(id)_syntheticTouch;
-(id)_syntheticUIEventWithGSEvent:(GSEventRef)gsevent touchPhase:(int)phase;
@end

@interface UIView (UIWebDocumentViewEventHandling)
-(BOOL)needsWebDocumentViewEventsDirectly;
@end

@interface UIView (UITextEffectsOrdering) <UITextEffectsOrdering>
-(int)compareTextEffectsOrdering:(id)ordering;
-(int)textEffectsVisibilityLevel;
-(int)textEffectsVisibilityLevelWhenKey;
@end

@interface UIView (UIKitAccessibilityInterfaceBuilderSupport)
-(BOOL)isAccessibilityElementByDefault;
-(BOOL)isElementAccessibilityExposedToInterfaceBuilder;
@end

@interface UIView (UIGestureSorting)
-(int)_depthFirstCompare:(id)compare;
@end

@interface UIView (UITextInputView)
-(id)textInputView;
@end

@interface UIView (UITextSelectionAdditions)
@property(readonly, assign, nonatomic, getter=_caretRect) CGRect caretRect;
-(id)_asTextSelection;
// declared property getter: -(CGRect)_caretRect;
@end

@interface UIView (UIPrintFormatter)
-(Class)_printFormatterClass;
-(void)drawRect:(CGRect)rect forViewPrintFormatter:(id)viewPrintFormatter;
-(id)viewPrintFormatter;
@end

@interface UIView (UIKB_UIViewExtras)
-(void)resizeForKeyplaneSize:(CGSize)keyplaneSize;
@end

