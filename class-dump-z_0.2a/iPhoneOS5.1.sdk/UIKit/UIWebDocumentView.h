/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/Frameworks/UIKit.framework/UIKit
 */

#import "UIKit-Structs.h"
#import "UIActionSheetDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIKeyInput.h"
#import "UITextSelection.h"
#import "UIAutoscrollContainer.h"
#import "UITextInputTokenizer.h"
#import "UIKeyboardInput.h"
#import "UIModalViewDelegate.h"
#import "UIWebTiledView.h"
#import "UITextSelectingContent.h"
#import "UIWebDocumentView.h"

@class NSMutableSet, NSArray, DOMNode, NSTimer, UIWebSelectionAssistant, UIAutoscroll, UITextRange, NSDictionary, UITextPosition, DOMHTMLElement, UITextSelectionView, UITextInteractionAssistant, UIWebRotatingSheet, UITextChecker, UIColor, CALayer, UIImage, WebView, UILongPressGestureRecognizer, UIReferenceLibraryViewController, DOMElement, DOMRange, UITapGestureRecognizer, UITextInputTraits, UIPopoverController, UIPanGestureRecognizer, WebThreadSafeUndoManager, WebViewReachabilityObserver;
@protocol UITextInputDelegate;

@interface UIWebDocumentView : UIWebTiledView <UIGestureRecognizerDelegate, UIKeyboardInput, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, UITextSelection> {
	int _retainCount;
	WKWindow* _wkWindow;
	WebView* _webView;
	WebViewReachabilityObserver* _reachabilityObserver;
	id m_parentTextView;
	id _delegate;
	id _textSuggestionDelegate;
	CGRect _doubleTapRect;
	CGRect _mainDocumentDoubleTapRect;
	CGPoint _scrollPoint;
	CGPoint _doubleTapStartPosition;
	double _doubleTapStartTime;
	CGSize _pendingSize;
	int _orientation;
	DOMHTMLElement* _standaloneEditingElement;
	CGPoint _mouseDownPoint;
	double _mouseDownTime;
	UIAutoscroll* _autoscroll;
	CFDictionaryRef _plugInViews;
	int m_selectionGranularity;
	CALayer* _contentLayersHostingLayer;
	CALayer* _flattenedRotatingContentLayer;
	NSMutableSet* _overflowScrollViewsPendingInsertion;
	NSMutableSet* _overflowScrollViewsPendingDeletion;
	NSMutableSet* _overflowScrollViews;
	NSArray* _additionalSubviews;
	UITextInputTraits* _traits;
	id<UITextInputDelegate> _inputDelegate;
	UITapGestureRecognizer* _singleTapGestureRecognizer;
	UITapGestureRecognizer* _doubleTapGestureRecognizer;
	UITapGestureRecognizer* _twoFingerDoubleTapGestureRecognizer;
	UILongPressGestureRecognizer* _highlightLongPressGestureRecognizer;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UIPanGestureRecognizer* _twoFingerPanGestureRecognizer;
	struct {
		NSTimer* timer;
		CGPoint location;
		BOOL isBlocked;
		BOOL isCancelled;
		BOOL isOnWebThread;
		BOOL isDisplayingHighlight;
		BOOL attemptedClick;
		CGPoint lastPanTranslation;
		DOMNode* element;
		id delegate;
		UIWebRotatingSheet* interactionSheet;
		NSArray* elementActions;
		BOOL allowsImageSheet;
		BOOL allowsDataDetectorsSheet;
		BOOL allowsLinkSheet;
		BOOL acceptsFirstResponder;
	} _interaction;
	UIWebDocumentViewViewportConfiguration _defaultViewportConfigurations[5];
	UIWebDocumentViewViewportConfiguration _currentViewportConfiguration;
	CGSize _minimumSize;
	int _documentType;
	float _documentScale;
	float _previousDocumentScale;
	CGRect _documentBounds;
	CGSize _fixedLayoutOriginRoundingDelta;
	CGSize _fixedLayoutSizeRoundingDelta;
	unsigned _customConfigurations;
	unsigned _mouseDownCount;
	unsigned _dataDetectorTypes;
	unsigned _webCoreNeedsSetNeedsDisplay : 1;
	unsigned _webCoreNeedsDraw : 1;
	unsigned _ignoresFocusingMouse : 1;
	unsigned _ignoresKeyEvents : 1;
	unsigned _autoresizes : 1;
	unsigned _ignoresViewportOverflowWhenAutoresizing : 1;
	unsigned _updatingSize : 1;
	unsigned _scalesToFit : 1;
	unsigned _updatesScrollView : 1;
	unsigned _hasCustomScale : 1;
	unsigned _shouldRestoreScrollPosition : 1;
	unsigned _pageNeedsReset : 1;
	unsigned _hasScrollPoint : 1;
	unsigned _gesturesDisabled : 1;
	unsigned _doubleTapRectIsReplaced : 1;
	unsigned _standaloneEditableView : 1;
	unsigned _widgetEditingView : 1;
	unsigned _mouseDragged : 1;
	unsigned _mouseReentrancyGuard : 1;
	unsigned _isShowingFullScreenPlugIn : 1;
	unsigned _isSettingRedrawFrame : 1;
	unsigned _needsScrollNotifications : 1;
	unsigned _loadsSynchronously : 1;
	unsigned _mouseDown : 1;
	unsigned _usePreTimberlineTransparencyBehavior : 1;
	unsigned _geolocationDialogAllowed : 1;
	unsigned _usingMinimalTilesDuringLoading : 1;
	unsigned _sheetsCount : 2;
	unsigned _didFirstVisuallyNonEmptyLayout : 1;
	unsigned _loadInProgress : 1;
	unsigned _uiwdvIsResigningFirstResponder : 1;
	unsigned _classicViewportMode : 1;
	unsigned _sizeUpdatesSuspended : 1;
	unsigned _sizeUpdateOccurredWhileSuspended : 1;
	unsigned _shouldOnlyRecognizeGesturesOnActiveElements : 1;
	unsigned _shouldIgnoreCustomViewport : 1;
	unsigned _ignoresFocusEventFromFirstResponderChange : 1;
	unsigned _shouldCloseWebViewAtDealloc : 1;
	unsigned _shouldRemoveUserStyleSheet : 1;
	unsigned _hasDrawnTiles : 1;
	unsigned _showingTextStyleOptions : 1;
	unsigned _subviewCachesNeedUpdate : 1;
	unsigned _avoidFixedPositionUpdateOnZoomStart : 1;
	WebThreadSafeUndoManager* _undoManager;
	UIWebSelectionAssistant* _webSelectionAssistant;
	UITextInteractionAssistant* _textSelectionAssistant;
	UITextSelectionView* _textSelectionView;
	UITextChecker* _textChecker;
	UIEdgeInsets _caretInsets;
	int _selectionAffinity;
	UIPopoverController* _definePopoverController;
	UIReferenceLibraryViewController* _defineViewController;
	DOMElement* _dictationResultPlaceholder;
	id _dictationResultPlaceholderRemovalObserver;
	DOMRange* _rangeToRestoreAfterDictation;
}
@property(assign, nonatomic) BOOL acceptsEmoji;	// @dynamic
@property(assign, nonatomic) BOOL acceptsFloatingKeyboard;
@property(assign, nonatomic) BOOL acceptsSplitKeyboard;
@property(assign, nonatomic) int autocapitalizationType;	// @dynamic
@property(assign, nonatomic) int autocorrectionType;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition* beginningOfDocument;
@property(readonly, assign, nonatomic) UIView<UITextSelectingContent>* content;
@property(assign, nonatomic) BOOL contentsIsSingleValue;	// @dynamic
@property(assign, nonatomic) BOOL displaySecureTextUsingPlainText;
@property(assign, nonatomic, getter=isDoubleTapEnabled) BOOL doubleTapEnabled;
@property(readonly, assign, nonatomic, getter=isEditable) BOOL editable;
@property(readonly, assign, nonatomic, getter=isEditing) BOOL editing;
@property(assign, nonatomic) int emptyContentReturnKeyType;
@property(assign, nonatomic) BOOL enablesReturnKeyAutomatically;	// @dynamic
@property(readonly, assign, nonatomic) UITextPosition* endOfDocument;
@property(assign, nonatomic) BOOL forceEnableDictation;
@property(assign, nonatomic) id<UITextInputDelegate> inputDelegate;
@property(retain, nonatomic) UIColor* insertionPointColor;	// @dynamic
@property(assign, nonatomic) unsigned insertionPointWidth;	// @dynamic
@property(readonly, assign, nonatomic) UITextInteractionAssistant* interactionAssistant;
@property(assign, nonatomic) int keyboardAppearance;	// @dynamic
@property(assign, nonatomic) int keyboardType;	// @dynamic
@property(assign, nonatomic) BOOL learnsCorrections;
@property(readonly, assign, nonatomic) UITextRange* markedTextRange;
@property(copy, nonatomic) NSDictionary* markedTextStyle;
@property(assign, nonatomic) BOOL mediaPlaybackAllowsAirPlay;
@property(retain, nonatomic) DOMRange* rangeToRestoreAfterDictation;	// @synthesize=_rangeToRestoreAfterDictation
@property(assign, nonatomic) BOOL returnKeyGoesToNextResponder;
@property(assign, nonatomic) int returnKeyType;	// @dynamic
@property(assign, nonatomic, getter=isRichText) BOOL richText;
@property(assign, nonatomic, getter=isSecureTextEntry) BOOL secureTextEntry;	// @dynamic
@property(copy) UITextRange* selectedTextRange;
@property(assign, nonatomic) int selectionAffinity;
@property(retain, nonatomic) UIColor* selectionBarColor;	// @dynamic
@property(retain, nonatomic) UIImage* selectionDragDotImage;	// @dynamic
@property(assign, nonatomic) int selectionGranularity;
@property(retain, nonatomic) UIColor* selectionHighlightColor;	// @dynamic
@property(readonly, assign, nonatomic) UITextSelectionView* selectionView;
@property(assign, nonatomic) int shortcutConversionType;	// @dynamic
@property(assign, nonatomic) BOOL shouldIgnoreCustomViewport;
@property(assign, nonatomic) BOOL shouldOnlyRecognizeGesturesOnActiveElements;
@property(assign, nonatomic) BOOL sizeUpdatesSuspended;
@property(assign, nonatomic) int spellCheckingType;	// @dynamic
@property(assign, nonatomic) BOOL suppressReturnKeyStyling;
@property(readonly, assign, nonatomic) UIResponder<UITextSelection>* textDocument;
@property(readonly, assign, nonatomic) UIView* textInputView;
@property(assign, nonatomic) int textLoupeVisibility;	// @dynamic
@property(assign, nonatomic) int textSelectionBehavior;	// @dynamic
@property(assign, nonatomic) id textSuggestionDelegate;	// @dynamic
@property(assign, nonatomic) CFCharacterSetRef textTrimmingSet;	// @dynamic
@property(readonly, assign, nonatomic) id<UITextInputTokenizer> tokenizer;
+(double)getTimestamp;
+(void)initialize;
+(Class)layerClass;
+(id)standardTextViewPreferences;
-(id)initSimpleHTMLDocumentWithStyle:(id)style frame:(CGRect)frame preferences:(id)preferences groupName:(id)name;
-(id)initWithFrame:(CGRect)frame;
-(id)initWithWebView:(id)webView frame:(CGRect)frame;
-(void)_WAKViewSizeDidChange:(id)_WAKViewSize;
-(void)_addAdditionalSubview:(id)subview;
-(CGRect)_adjustedLayoutRectForFixedPositionObjects;
-(unsigned)_applyViewportArguments:(id)arguments;
-(void)_bold:(id)bold;
-(void)_cancelLongPressGestureRecognizer;
-(float)_clampScale:(float)scale toScrollView:(id)scrollView;
-(void)_cleanUpFrameStateAndLoad:(id)load;
-(void)_clearAllConsoleMessages;
-(void)_clearDoubleTapRect;
-(unsigned)_contentSizeInExposedRect:(CGRect)exposedRect topLayer:(id)layer visibleLayerCount:(int*)count;
-(void*)_createIOSurfaceFromRect:(CGRect)rect;
-(BOOL)_dataDetectionIsActivated;
-(void)_define:(id)define;
-(BOOL)_dictationPlaceholderHasBeenRemoved;
-(void)_didMoveFromWindow:(id)window toWindow:(id)window2;
-(void)_didScroll;
-(float)_documentScale;
-(id)_documentUrl;
-(CGRect)_documentViewVisibleRect;
-(float)_doubleTapScaleForSize:(float)size isWidth:(BOOL)width isPDF:(BOOL)pdf;
-(void)_editableSelectionLayoutChangedByScrolling:(BOOL)scrolling;
-(void)_finishedUsingDictationPlaceholder;
-(void)_flattenAndSwapContentLayersInRect:(CGRect)rect;
-(id)_focusedOrMainFrame;
-(id)_groupName;
-(void)_handleDoubleTapAtLocation:(CGPoint)location;
-(void)_handleDoubleTapAtPoint:(CGPoint)point inWebHTMLView:(id)webHTMLView outRenderRect:(CGRect*)rect;
-(void)_handleTwoFingerDoubleTapAtLocation:(CGPoint)location;
-(BOOL)_hasSubviewContainingWebContent:(id)content;
-(BOOL)_isDeallocating;
-(BOOL)_isSubviewOfPlugInView:(id)view;
-(void)_italicize:(id)italicize;
-(CGRect)_lastRectForRange:(id)range;
-(CGRect)_layoutRectForFixedPositionObjects;
-(NSRange)_markedTextNSRange;
-(void)_noteOverflowScrollViewPendingDeletion:(id)deletion;
-(void)_noteOverflowScrollViewPendingInsertion:(id)insertion;
-(void)_notifyContentHostingLayersOfScaleChange;
-(void)_notifyPlugInViewsOfDidEndZooming;
-(void)_notifyPlugInViewsOfDidZoom;
-(void)_notifyPlugInViewsOfScaleChange;
-(void)_notifyPlugInViewsOfWillBeginZooming;
-(void)_overflowScrollView:(id)view didEndScrollingForNode:(id)node;
-(void)_overflowScrollView:(id)view scrollOffsetChangedForNode:(id)node;
-(void)_overflowScrollView:(id)view willStartScrollingForNode:(id)node;
-(id)_parentTextView;
-(id)_positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset withAffinityDownstream:(BOOL)affinityDownstream;
-(void)_promptForReplace:(id)replace;
-(void)_reachabilityManagerNotifiedIsReachable:(BOOL)reachable;
-(void)_removeAdditionalSubview:(id)subview;
-(void)_removeDefinitionController:(BOOL)controller;
-(id)_requestWithUDIDHeaderIfAppropriate:(id)udidheaderIfAppropriate;
-(void)_resetForNewPage;
-(void)_resetFormDataForFrame:(id)frame;
-(void)_reshapePlugInViews;
-(id)_responderForBecomeFirstResponder;
-(void)_restoreFlattenedContentLayers;
-(void)_restoreScrollPointForce:(BOOL)force;
-(void)_restoreViewportSettingsWithSize:(CGSize)size;
-(void)_runLoadBlock:(id)block;
-(void)_saveStateToHistoryItem:(id)historyItem;
-(void)_scrollRectToVisible:(CGRect)visible animated:(BOOL)animated;
-(void)_selectionLayoutChangedByScrolling:(BOOL)scrolling;
-(void)_setDocumentScale:(float)scale;
-(void)_setDocumentType:(int)type;
-(void)_setDocumentType:(int)type overrideCustomConfigurations:(BOOL)configurations viewportArguments:(id)arguments;
-(void)_setParentTextView:(id)view;
-(void)_setSubviewCachesNeedUpdate:(BOOL)update;
-(BOOL)_shouldFlattenContentLayersForRect:(CGRect)rect;
-(BOOL)_shouldUpdateSubviewCachesForPlugins;
-(void)_showPendingContentLayers;
-(void)_showTextStyleOptions:(id)options;
-(id)_supportedPasteboardTypesForCurrentSelection;
-(id)_textSelectingContainer;
-(BOOL)_tryRetain;
-(void)_underline:(id)underline;
-(void)_undoManagerDidRedo:(id)_undoManager;
-(void)_undoManagerDidUndo:(id)_undoManager;
-(void)_updateFixedPositionContent;
-(void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(BOOL)thread;
-(void)_updateFixedPositioningObjectsLayoutAfterScroll;
-(void)_updateScrollViewBoundaryZoomScales;
-(void)_updateSize;
-(void)_updateSubviewCaches;
-(void)_webthread_webView:(id)view attachRootLayer:(id)layer;
-(float)_zoomedDocumentScale;
-(void)addInputString:(id)string;
-(void)addInputString:(id)string fromVariantKey:(BOOL)variantKey;
-(void)assistFormNode:(id)node;
-(id)automaticallySelectedOverlay;
-(CGRect)autoscrollContentFrame;
-(CGRect)autoscrollDragFrame;
-(int)baseWritingDirectionForPosition:(id)position inDirection:(int)direction;
-(BOOL)becomeFirstResponder;
-(BOOL)becomesEditableWithGestures;
-(void)beginSelectionChange;
// declared property getter: -(id)beginningOfDocument;
-(BOOL)canBecomeFirstResponder;
-(BOOL)canPerformAction:(SEL)action withSender:(id)sender;
-(BOOL)canResignFirstResponder;
-(BOOL)cancelMouseTracking;
-(BOOL)cancelTouchTracking;
-(CGRect)caretRectForPosition:(id)position;
-(unsigned short)characterAfterCaretSelection;
-(unsigned short)characterBeforeCaretSelection;
-(unsigned short)characterInRelationToCaretSelection:(int)caretSelection;
-(id)characterRangeAtPoint:(CGPoint)point;
-(id)characterRangeByExtendingPosition:(id)position inDirection:(int)direction;
-(id)checkSpellingOfString:(id)string;
-(BOOL)clearWKFirstResponder;
-(id)closestPositionToPoint:(CGPoint)point;
-(id)closestPositionToPoint:(CGPoint)point withinRange:(id)range;
-(int)comparePosition:(id)position toPosition:(id)position2;
-(void)confirmMarkedText:(id)text;
-(BOOL)containsOnlySelectableElements;
// declared property getter: -(id)content;
-(CGRect)convertCaretRect:(CGRect)rect;
-(CGPoint)convertPoint:(CGPoint)point fromFrame:(id)frame;
-(CGPoint)convertPoint:(CGPoint)point toFrame:(id)frame;
-(CGRect)convertRect:(CGRect)rect fromFrame:(id)frame;
-(CGRect)convertRect:(CGRect)rect toFrame:(id)frame;
-(void)copy:(id)copy;
-(CGImageRef)createSnapshotWithRect:(CGRect)rect;
-(void)cut:(id)cut;
-(unsigned)dataDetectorTypes;
-(void)dealloc;
-(void)deferredBecomeFirstResponder;
-(id)delegate;
-(void)deleteBackward;
-(void)deleteFromInput;
-(void)detachInteractionAssistant;
-(void)detachSelectionView;
-(BOOL)detectsPhoneNumbers;
-(id)dictationInterpretations;
-(id)dictationResultMetadataForRange:(id)range;
-(void)didEndScroll;
-(void)didEndZoom;
-(BOOL)didFirstVisuallyNonEmptyLayout;
-(void)didMoveToSuperview;
-(void)didRemovePlugInView:(id)view;
-(void)didZoom;
-(CGRect)documentBounds;
-(int)documentType;
-(CGRect)doubleTapRect;
-(BOOL)doubleTapRectIsReplaced;
-(unsigned)effectiveDataDetectorTypes;
-(void)enableReachability;
-(void)enclosingScrollerDidScroll;
// declared property getter: -(id)endOfDocument;
-(void)endSelectionChange;
-(void)ensureSelection;
-(void)expandSelectionToStartOfWordContainingCaretSelection;
-(void)extendCurrentSelection:(int)selection;
-(CGRect)firstRectForRange:(id)range;
-(id)fontForCaretSelection;
-(void)forceLayout;
-(id)formElement;
-(void)forwardInvocation:(id)invocation;
-(BOOL)fragmentContainsRichContent:(id)content;
-(CGRect)frameForDictationResultPlaceholder:(id)dictationResultPlaceholder;
-(int)getPasteboardChangeCount;
-(int)getPasteboardItemsCount;
-(void)handleKeyWebEvent:(id)event;
-(BOOL)hasContent;
-(BOOL)hasDrawnTiles;
-(BOOL)hasPlugInSubviews;
-(BOOL)hasRangedSelection;
-(BOOL)hasRichlyEditableSelection;
-(BOOL)hasSelection;
-(BOOL)hasSimpleTextOnlyStructure;
-(BOOL)hasText;
-(id)implementationWebView;
-(float)initialScale;
// declared property getter: -(id)inputDelegate;
-(void)insertDictationResult:(id)result withCorrectionIdentifier:(id)correctionIdentifier;
-(id)insertDictationResultPlaceholder;
-(void)insertText:(id)text;
-(float)integralScaleForScale:(float)scale;
-(float)integralScaleForScale:(float)scale keepingPointFixed:(CGPoint*)fixed;
// declared property getter: -(id)interactionAssistant;
-(BOOL)isCaretInEmptyParagraph;
-(BOOL)isClassicViewportMode;
// declared property getter: -(BOOL)isDoubleTapEnabled;
// declared property getter: -(BOOL)isEditable;
// declared property getter: -(BOOL)isEditing;
-(BOOL)isEditingSingleLineElement;
-(BOOL)isPosition:(id)position atBoundary:(int)boundary inDirection:(int)direction;
-(BOOL)isPosition:(id)position withinTextUnit:(int)unit inDirection:(int)direction;
-(BOOL)isShowingFullScreenPlugInUI;
-(BOOL)isStandaloneEditableView;
-(BOOL)isUnperturbedDictationResultMarker:(id)marker;
-(BOOL)isWidgetEditingView;
-(BOOL)keyboardInput:(id)input shouldInsertText:(id)text isMarkedText:(BOOL)text3;
-(BOOL)keyboardInput:(id)input shouldReplaceTextInRange:(NSRange)range replacementText:(id)text;
-(BOOL)keyboardInputChanged:(id)changed;
-(void)keyboardInputChangedSelection:(id)selection;
-(BOOL)keyboardInputShouldDelete:(id)keyboardInput;
-(void)layoutSubviews;
-(void)loadData:(id)data MIMEType:(id)type textEncodingName:(id)name baseURL:(id)url;
-(void)loadHTMLString:(id)string baseURL:(id)url;
-(void)loadRequest:(id)request;
-(BOOL)loadsSynchronously;
-(void)makeTextWritingDirectionLeftToRight:(id)right;
-(void)makeTextWritingDirectionRightToLeft:(id)left;
-(BOOL)makeWKFirstResponder;
-(id)markedText;
// declared property getter: -(id)markedTextRange;
// declared property getter: -(id)markedTextStyle;
-(float)maximumScale;
// declared property getter: -(BOOL)mediaPlaybackAllowsAirPlay;
-(id)metadataDictionariesForDictationResults;
-(id)methodSignatureForSelector:(SEL)selector;
-(float)minimumScale;
-(float)minimumScaleForMinimumSize:(CGSize)minimumSize;
-(void)moveBackward:(unsigned)backward;
-(void)moveForward:(unsigned)forward;
-(BOOL)needsScrollNotifications;
-(CGImageRef)newSnapshotWithRect:(CGRect)rect;
-(id)nextUnperturbedDictationResultBoundaryFromPosition:(id)position;
-(int)offsetFromPosition:(id)position toPosition:(id)position2;
-(void)paste:(id)paste;
-(BOOL)performsTwoStepPaste:(id)paste;
-(BOOL)playsNicelyWithGestures;
-(void)popoverControllerDidDismissPopover:(id)popoverController;
-(id)positionFromPosition:(id)position inDirection:(int)direction offset:(int)offset;
-(id)positionFromPosition:(id)position offset:(int)offset;
-(id)positionFromPosition:(id)position toBoundary:(int)boundary inDirection:(int)direction;
-(id)positionWithinRange:(id)range farthestInDirection:(int)direction;
-(id)previousUnperturbedDictationResultBoundaryFromPosition:(id)position;
-(id)rangeByExtendingCurrentSelection:(int)selection;
-(id)rangeByMovingCurrentSelection:(int)selection;
-(id)rangeEnclosingPosition:(id)position withGranularity:(int)granularity inDirection:(int)direction;
-(id)rangeOfEnclosingWord:(id)enclosingWord;
// declared property getter: -(id)rangeToRestoreAfterDictation;
-(id)readDataFromPasteboard:(id)pasteboard withIndex:(int)index;
-(CGRect)rectContainingCaretSelection;
-(CGRect)rectForNSRange:(NSRange)nsrange;
-(id)rectsForNSRange:(NSRange)nsrange;
-(id)rectsForRange:(id)range;
-(void)redrawScaledDocument;
-(oneway void)release;
-(void)removeDictationResultPlaceholder:(id)placeholder willInsertResult:(BOOL)result;
-(void)replace:(id)replace;
-(void)replaceCurrentWordWithText:(id)text;
-(void)replaceRange:(id)range withText:(id)text;
-(void)replaceRangeWithText:(NSRange)text replacementText:(id)text2;
-(void)replaceRangeWithTextWithoutClosingTyping:(id)textWithoutClosingTyping replacementText:(id)text;
-(void)replaceSelectionWithWebArchive:(id)webArchive selectReplacement:(BOOL)replacement smartReplace:(BOOL)replace;
-(BOOL)requiresKeyEvents;
-(void)resetShowingTextStyle:(id)style;
-(void)resetTilingAfterLoadComplete;
-(BOOL)resignFirstResponder;
-(id)retain;
-(unsigned)retainCount;
-(void)revealedSelectionByScrollingWebFrame:(id)frame;
-(void)saveStateToCurrentHistoryItem;
-(void)scrollViewWasRemoved;
-(void)select:(id)select;
-(void)selectAll;
-(void)selectAll:(id)all;
-(id)selectedDOMRange;
// declared property getter: -(id)selectedTextRange;
// declared property getter: -(int)selectionAffinity;
-(BOOL)selectionAtDocumentStart;
-(BOOL)selectionAtWordStart;
-(CGRect)selectionClipRect;
// declared property getter: -(int)selectionGranularity;
-(NSRange)selectionRange;
-(int)selectionState;
// declared property getter: -(id)selectionView;
-(void)sendOrientationEventForOrientation:(int)orientation;
-(void)sendScrollEventIfNecessary;
-(void)setAllowsUserScaling:(BOOL)scaling forDocumentTypes:(int)documentTypes;
-(void)setAutoresizes:(BOOL)autoresizes;
-(void)setBaseWritingDirection:(int)direction forRange:(id)range;
-(void)setBecomesEditableWithGestures:(BOOL)gestures;
-(void)setBottomBufferHeight:(float)height;
-(void)setCaretChangeListener:(id)listener;
-(void)setContinuousSpellCheckingEnabled:(BOOL)enabled;
-(void)setDataDetectorTypes:(unsigned)types;
-(void)setDelegate:(id)delegate;
-(void)setDetectsPhoneNumbers:(BOOL)numbers;
// declared property setter: -(void)setDoubleTapEnabled:(BOOL)enabled;
-(void)setDrawsBackground:(BOOL)background;
-(void)setFrame:(CGRect)frame;
-(void)setIgnoresFocusingMouse:(BOOL)mouse;
-(void)setIgnoresKeyEvents:(BOOL)events;
-(void)setIgnoresViewportOverflowWhenAutoresizing:(BOOL)autoresizing;
-(void)setInitialScale:(float)scale forDocumentTypes:(int)documentTypes;
// declared property setter: -(void)setInputDelegate:(id)delegate;
-(void)setInteractionAssistantGestureRecognizers;
-(void)setIsStandaloneEditableView:(BOOL)view;
-(void)setIsWidgetEditingView:(BOOL)view;
-(void)setLoadsSynchronously:(BOOL)synchronously;
-(void)setMarkedText:(id)text;
-(void)setMarkedText:(id)text selectedRange:(NSRange)range;
// declared property setter: -(void)setMarkedTextStyle:(id)style;
-(void)setMaximumScale:(float)scale forDocumentTypes:(int)documentTypes;
// declared property setter: -(void)setMediaPlaybackAllowsAirPlay:(BOOL)play;
-(void)setMinimumScale:(float)scale forDocumentTypes:(int)documentTypes;
-(void)setMinimumSize:(CGSize)size;
-(void)setOpaque:(BOOL)opaque;
-(void)setPaused:(BOOL)paused;
-(void)setPaused:(BOOL)paused withEvents:(BOOL)events;
// declared property setter: -(void)setRangeToRestoreAfterDictation:(id)restoreAfterDictation;
-(void)setSelectedDOMRange:(id)range affinityDownstream:(BOOL)downstream;
// declared property setter: -(void)setSelectedTextRange:(id)range;
-(void)setSelectedTextRange:(id)range withAffinityDownstream:(BOOL)affinityDownstream;
// declared property setter: -(void)setSelectionAffinity:(int)affinity;
// declared property setter: -(void)setSelectionGranularity:(int)granularity;
// declared property setter: -(void)setShouldIgnoreCustomViewport:(BOOL)ignoreCustomViewport;
// declared property setter: -(void)setShouldOnlyRecognizeGesturesOnActiveElements:(BOOL)onlyRecognizeGesturesOnActiveElements;
// declared property setter: -(void)setSizeUpdatesSuspended:(BOOL)suspended;
-(void)setSmoothsFonts:(BOOL)fonts;
-(void)setStandaloneEditingElement:(id)element;
-(void)setText:(id)text;
-(void)setTileUpdatesDisabled:(BOOL)disabled;
-(void)setTilingArea:(int)area;
-(void)setUpdatesScrollView:(BOOL)view;
-(void)setUsePreTimberlineTransparencyBehavior;
-(void)setUserStyleSheet:(id)sheet;
-(void)setUsesUIScrollView;
-(void)setViewportSize:(CGSize)size forDocumentTypes:(int)documentTypes;
// declared property getter: -(BOOL)shouldIgnoreCustomViewport;
// declared property getter: -(BOOL)shouldOnlyRecognizeGesturesOnActiveElements;
// declared property getter: -(BOOL)sizeUpdatesSuspended;
-(id)standaloneEditingElement;
-(void)stopLoading:(id)loading;
-(id)subviews;
-(id)supportedPasteboardTypesForCurrentSelection;
-(void)takeTraitsFrom:(id)from;
-(id)text;
-(id)textColorForCaretSelection;
// declared property getter: -(id)textDocument;
-(id)textFormElement;
-(id)textInRange:(id)range;
-(id)textInputTraits;
-(id)textRangeFromPosition:(id)position toPosition:(id)position2;
// declared property getter: -(id)tokenizer;
-(id)undoManager;
-(id)undoManagerForWebView:(id)webView;
-(void)unmarkText;
-(void)updateInteractionElements;
-(BOOL)updateKeyboardStateOnResponderChanges;
-(void)updateSelection;
-(BOOL)updatesScrollView;
-(void)useSelectionAssistantWithMode:(int)mode;
-(void)viewportConfigurationsDidChange:(unsigned)viewportConfigurations;
-(float)viewportHeight;
-(float)viewportWidth;
-(CGRect)visibleContentFrame;
-(CGRect)visibleFrame;
-(id)webSelectionAssistant;
-(void)webThreadWebViewDidLayout:(id)webThreadWebView;
-(void)webThreadWebViewDidLayout:(id)webThreadWebView byScrolling:(BOOL)scrolling;
-(id)webView;
-(void)webView:(id)view didChangeLocationWithinPageForFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didCreateOrUpdateScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer scrollSize:(id)size forNode:(id)node;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didFirstVisuallyNonEmptyLayoutInFrame:(id)frame;
-(void)webView:(id)view didHideFullScreenForPlugInView:(id)view2;
-(void)webView:(id)view didReceiveDocTypeForFrame:(id)frame;
-(void)webView:(id)view didReceiveViewportArguments:(id)arguments forFrame:(id)frame;
-(void)webView:(id)view needsScrollNotifications:(id)notifications forFrame:(id)frame;
-(id)webView:(id)view plugInViewWithArguments:(id)arguments fromPlugInPackage:(id)package;
-(void)webView:(id)view restoreStateFromHistoryItem:(id)historyItem forFrame:(id)frame force:(BOOL)force;
-(void)webView:(id)view saveStateToHistoryItem:(id)historyItem forFrame:(id)frame;
-(BOOL)webView:(id)view shouldScrollToPoint:(CGPoint)point forFrame:(id)frame;
-(void)webView:(id)view willAddPlugInView:(id)view2;
-(void)webView:(id)view willRemoveScrollingLayer:(id)layer withContentsLayer:(id)contentsLayer forNode:(id)node;
-(void)webView:(id)view willShowFullScreenForPlugInView:(id)view2;
-(void)webViewDidCommitCompositingLayerChanges:(id)webView;
-(void)webViewDidDrawTiles:(id)webView;
-(void)webViewDidEndOverflowScroll:(id)webView;
-(void)webViewDidStartOverflowScroll:(id)webView;
-(CGRect)webViewFrameForUIFrame:(CGRect)uiframe;
-(void)willMoveToSuperview:(id)superview;
-(void)willStartScroll;
-(void)willStartScrollToTop;
-(void)willStartZoom;
-(id)wordContainingCaretSelection;
-(int)wordOffsetInRange:(id)range;
-(id)wordRangeContainingCaretSelection;
-(void)writeDataToPasteboard:(id)pasteboard;
@end

@interface UIWebDocumentView (SyntheticEvents)
-(id)_scriptingInfoForForm:(id)form;
-(id)_scriptingInfoForLink:(id)link;
-(id)scriptingInfoWithChildren;
@end

@interface UIWebDocumentView (Interaction) <UIActionSheetDelegate>
@property(assign, getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) BOOL _acceptsFirstResponder;
+(id)_createDefaultHighlightView;
+(id)_sharedHighlightView;
// declared property getter: -(BOOL)_acceptsFirstResponder;
-(id)_doubleTapGestureRecognizer;
-(void)_doubleTapRecognized:(id)recognized;
-(void)_highlightLongPressRecognized:(id)recognized;
-(void)_longPressRecognized:(id)recognized;
-(void)_resetInteractionWithLocation:(CGPoint)location;
-(void)_sendMouseMoveAndAttemptClick:(id)click;
// declared property setter: -(void)_setAcceptsFirstResponder:(BOOL)responder;
-(void)_singleTapRecognized:(id)recognized;
-(id)_targetURL;
-(void)_twoFingerDoubleTapRecognized:(id)recognized;
-(void)_twoFingerPanRecognized:(id)recognized;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;
-(id)approximateNodeAtViewportLocation:(CGPoint*)viewportLocation;
-(void)attemptClick:(id)click;
-(void)cancelInteraction;
-(void)cancelInteractionWithImmediateDisplay:(BOOL)immediateDisplay;
-(void)clearInteractionTimer;
-(void)completeInteraction;
-(void)continueInteractionWithLocation:(CGPoint)location;
-(void)deferInteraction;
-(BOOL)gestureRecognizer:(id)recognizer canBePreventedByGestureRecognizer:(id)recognizer2;
-(BOOL)gestureRecognizer:(id)recognizer canPreventGestureRecognizer:(id)recognizer2;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)hideTapHighlight;
-(void)highlightApproximateNodeAndDisplayInfoSheet;
-(void)highlightApproximateNodeInverted:(BOOL)inverted;
-(void)installGestureRecognizers;
-(id)interactionDelegate;
-(BOOL)isInInteraction;
-(void)performClick:(id)click;
-(void)performInteractionSelector:(SEL)selector afterDelay:(double)delay;
-(void)resetInteraction;
-(void)sendScrollWheelEvents;
-(void)setAllowsDataDetectorsSheet:(BOOL)sheet;
-(void)setAllowsImageSheet:(BOOL)sheet;
-(void)setAllowsLinkSheet:(BOOL)sheet;
-(void)setInteractionDelegate:(id)delegate;
-(BOOL)startActionSheet;
-(void)startInteractionWithLocation:(CGPoint)location;
-(id)superviewForSheet;
-(BOOL)supportsTwoFingerScrollingAtTouchLocation:(CGPoint)touchLocation andLocation:(CGPoint)location;
-(void)tapInteractionWithLocation:(CGPoint)location;
-(void)validateInteractionWithLocation:(CGPoint)location;
-(void)webView:(id)view didObserveDeferredContentChange:(int)change forFrame:(id)frame;
-(void)webViewDidPreventDefaultForEvent:(id)webView;
-(BOOL)willInteractWithLocation:(CGPoint)location;
@end

@interface UIWebDocumentView (InteractionPrivate)
-(void)_createSheetWithElementActions:(id)elementActions showLinkTitle:(BOOL)title;
-(void)_showDataDetectorsSheet;
-(void)_showImageSheet;
-(void)_showLinkSheet;
@end

@interface UIWebDocumentView (Printing)
-(id)_beginPrintModeForHTMLView:(id)htmlview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;
-(id)_beginPrintModeForPDFView:(id)pdfview withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5;
-(void)_drawPDFPagesForPage:(unsigned)page withPaginationInfo:(id)paginationInfo;
-(id)beginPrintModeForFrame:(id)frame withSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width5 tileClippedContent:(BOOL)content;
-(id)beginPrintModeForFrame:(id)frame withWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;
-(id)beginPrintModeWithSize:(CGSize)size startOffset:(float)offset minimumLayoutWidth:(float)width maximumLayoutWidth:(float)width4 tileClippedContent:(BOOL)content;
-(id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit;
-(id)beginPrintModeWithWidth:(float)width height:(float)height startOffset:(float)offset shrinkToFit:(BOOL)fit tileClippedContent:(BOOL)content;
-(void)drawPage:(unsigned)page withPaginationInfo:(id)paginationInfo;
-(void)endPrintMode;
-(BOOL)isInPrintMode;
@end

@interface UIWebDocumentView (Selecting)
-(CGPoint)constrainedPoint:(CGPoint)point;
-(BOOL)mouseEventsChangeSelection;
-(CGRect)visibleRectForSelecting;
@end

@interface UIWebDocumentView (UIWebDocumentViewTextSelecting) <UITextSelectingContent, UIAutoscrollContainer>
@property(readonly, assign, nonatomic) UIResponder<UITextInput>* asText;
@property(assign, nonatomic) CGPoint autoscrollContentOffset;
@property(readonly, assign, nonatomic) int selectionState;
// declared property getter: -(id)asText;
// declared property getter: -(CGPoint)autoscrollContentOffset;
-(void)cancelAutoscroll;
-(UIEdgeInsets)caretInsets;
-(CGRect)caretRect;
-(CGRect)caretRectForVisiblePosition:(id)visiblePosition;
-(void)clearRangedSelectionInitialExtent;
-(void)clearSelection;
-(CGRect)closestCaretRectInMarkedTextRangeForPoint:(CGPoint)point;
-(void)collapseSelection;
-(CGRect)contentFrameForView:(id)view;
-(CGPoint)convertPointToSelectedFrameCoordinates:(CGPoint)selectedFrameCoordinates;
-(CGRect)convertRectFromSelectedFrameCoordinates:(CGRect)selectedFrameCoordinates;
-(BOOL)hasEditableSelection;
-(BOOL)hasMarkedText;
-(BOOL)hasSelection;
-(unsigned)offsetInMarkedTextForSelection:(id)selection;
-(id)positionAtStartOrEndOfWord:(id)word;
-(void)scrollSelectionToVisible:(BOOL)visible;
-(void)selectAll;
-(void)selectWord;
-(id)selectedDOMRange;
-(int)selectionBaseWritingDirection;
-(void)selectionChanged;
-(void)selectionChanged:(id)changed;
-(BOOL)selectionIsCaretInDisplayBlockElementAtOffset:(int)offset;
-(id)selectionRects;
-(id)selectionRectsForRange:(id)range;
// declared property getter: -(int)selectionState;
// declared property setter: -(void)setAutoscrollContentOffset:(CGPoint)offset;
-(void)setBaseWritingDirection:(int)direction;
-(void)setCaretInsets:(UIEdgeInsets)insets;
-(void)setRangedSelectionBaseToCurrentSelection;
-(void)setRangedSelectionBaseToCurrentSelectionEnd;
-(void)setRangedSelectionBaseToCurrentSelectionStart;
-(BOOL)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start;
-(void)setRangedSelectionExtentPoint:(CGPoint)point baseIsStart:(BOOL)start allowFlipping:(BOOL)flipping;
-(void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
-(void)setRangedSelectionInitialExtentToCurrentSelectionStart;
-(void)setRangedSelectionWithExtentPoint:(CGPoint)extentPoint;
-(void)setSelectedDOMRange:(id)range affinity:(int)affinity;
-(void)setSelectionToEnd;
-(void)setSelectionToStart;
-(void)setSelectionWithFirstPoint:(CGPoint)firstPoint secondPoint:(CGPoint)point;
-(void)setSelectionWithPoint:(CGPoint)point;
-(void)smartExtendRangedSelection:(int)selection;
-(void)startAutoscroll:(CGPoint)autoscroll;
-(id)textInDOMRange:(id)domrange;
-(void)toggleBaseWritingDirection;
-(CGRect)visibleBounds;
-(id)webVisiblePositionForPoint:(CGPoint)point;
-(id)wordAtPoint:(CGPoint)point;
@end

@interface UIWebDocumentView (UIWebDocumentViewPrintFormatter)
-(Class)_printFormatterClass;
@end

